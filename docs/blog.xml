<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Angelo Maria Sabatini</title>
<link>https://amsabatini.netlify.app/blog.html</link>
<atom:link href="https://amsabatini.netlify.app/blog.xml" rel="self" type="application/rss+xml"/>
<description>This the personal blog of Angelo Maria Sabatini</description>
<generator>quarto-1.6.40</generator>
<lastBuildDate>Sun, 08 Jun 2025 22:00:00 GMT</lastBuildDate>
<item>
  <title>Why memory matters: A tale of two Markov chains</title>
  <dc:creator>Angelo Maria Sabatini</dc:creator>
  <link>https://amsabatini.netlify.app/posts/markov_chain_acf/</link>
  <description><![CDATA[ 




<section id="the-two-state-markov-chain" class="level2">
<h2 class="anchored" data-anchor-id="the-two-state-markov-chain">The two-state Markov chain</h2>
<p>Let us begin the discussion with the well-known two-state Markov chain (two-state MC) defined by the transition matrix:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cmathbf%7BP%7D%20=%20%5Cbegin%7Bbmatrix%7D%0Ap_1%20&amp;%201-p_1%20%5C%5C%0Ap_0%20&amp;%201-p_0%0A%5Cend%7Bbmatrix%7D%0A"></p>
<p>Figure&nbsp;1 show the graph representation of this two-state MC.</p>
<div id="fig-1" class="quarto-float quarto-figure quarto-figure-center anchored" data-fig-align="center">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://amsabatini.netlify.app/posts/markov_chain_acf/2-state-MC.png" class="img-fluid quarto-figure quarto-figure-center figure-img" style="width:50.0%">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;1: Graph representation of the two-state Markov chain used to encode the transition from two states <img src="https://latex.codecogs.com/png.latex?S_0"> and <img src="https://latex.codecogs.com/png.latex?S_1">.
</figcaption>
</figure>
</div>
<p>Here, <img src="https://latex.codecogs.com/png.latex?p_1"> and <img src="https://latex.codecogs.com/png.latex?p_0"> represent the probabilities of remaining in state <img src="https://latex.codecogs.com/png.latex?S_0"> and moving from state <img src="https://latex.codecogs.com/png.latex?S_1"> to <img src="https://latex.codecogs.com/png.latex?S_0">, respectively. Their complements, <img src="https://latex.codecogs.com/png.latex?q_1%20=%201%20-%20p_1"> and <img src="https://latex.codecogs.com/png.latex?q_0%20=%201%20-%20p_0">, correspond to the probabilities of leaving <img src="https://latex.codecogs.com/png.latex?S_0"> and remaining in <img src="https://latex.codecogs.com/png.latex?S_1">.</p>
<p>The conditions <img src="https://latex.codecogs.com/png.latex?p_0,%20p_1%20%3E%200"> ensure that the chain is both irreducible (any state can be reached from any other) and aperiodic (no strict periodic cycle is enforced), two structural properties that guarantee the existence of a stationary distribution. This stationary distribution reflects the long-run proportion of time the process spends in each state, and can be written as:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Ctext%7BPr%7D(S_0)%20=%20p,%20%5Cquad%20%5Ctext%7BPr%7D(S_1)%20=%20q%20=%201%20-%20p%0A"></p>
<p>Recall that the <img src="https://latex.codecogs.com/png.latex?r">-step transition matrix, <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BP%7D%5E%7B(r)%7D">, provides the probabilities of transitioning from each state to any other state in exactly <img src="https://latex.codecogs.com/png.latex?r"> steps. In the case of the two-state MC introduced above, it is known that this matrix admits the following elegant closed-form expression:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cmathbf%7BP%7D%5E%7B(r)%7D%20=%20%5Cfrac%7B1%7D%7B1%20-%20(p_1%20-%20p_0)%7D%0A%5Cbegin%7Bbmatrix%7D%0Ap_0%20&amp;%20q_1%20%5C%5C%0Ap_0%20&amp;%20q_1%0A%5Cend%7Bbmatrix%7D%0A+%20%5Cfrac%7B(p_1%20-%20p_0)%5Er%7D%7B1%20-%20(p_1%20-%20p_0)%7D%0A%5Cbegin%7Bbmatrix%7D%0Aq_1%20&amp;%20-q_1%20%5C%5C%0A-p_0%20&amp;%20p_0%0A%5Cend%7Bbmatrix%7D%0A"></p>
<p>This decomposition separates the long-run behavior (first term) from the transient dynamics (second term), which decays geometrically as <img src="https://latex.codecogs.com/png.latex?(p_1%20-%20p_0)%5Er">. In other words, the process progressively “forgets” its initial state, and the transition probabilities stabilize over time.</p>
<p>This convergence is a hallmark of well-behaved Markov chains and underlies the existence of a unique stationary distribution:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cboldsymbol%7B%5Cpi%7D%20=%20%5Cfrac%7B1%7D%7B1%20-%20(p_1%20-%20p_0)%7D%20%5Bp_0%20%5C;%5C;%20q_1%5D%0A"></p>
<p>This stationary distribution satisfies the fundamental balance condition <img src="https://latex.codecogs.com/png.latex?%5Cboldsymbol%7B%5Cpi%7D%20%5Cmathbf%7BP%7D%20=%20%5Cboldsymbol%7B%5Cpi%7D"> and it characterizes the long-run proportion of time the process spends in each state — independently of the starting configuration.</p>
<p>We are now interested in the properties of the stochastic process <img src="https://latex.codecogs.com/png.latex?%5C%7BX_t%5C%7D"> generated by this chain, where <img src="https://latex.codecogs.com/png.latex?X_t"> denotes the state occupied by the process at time <img src="https://latex.codecogs.com/png.latex?t">. Since the chain evolves over two discrete states, this process is binary, and its behavior can be fully characterized by its first and second-order moments, including the autocorrelation function (ACF).</p>
<p>Assuming that the states <img src="https://latex.codecogs.com/png.latex?S_0"> and <img src="https://latex.codecogs.com/png.latex?S_1"> are coded as <img src="https://latex.codecogs.com/png.latex?%5C%7B1,%200%5C%7D">, the expectation and variance of the process <img src="https://latex.codecogs.com/png.latex?X_t"> are:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0AE%5BX_t%5D%20&amp;=%20%5Cpi_1%20=%20%5Cdfrac%7Bp_0%7D%7B1%20-%20(p_1%20-%20p_0)%7D%20%5C%5C%0A%5Ctext%7BVar%7D(X_t)%20&amp;=%20E%5BX_t%5E2%5D%20-%20E%5BX_t%5D%5E2%20=%20E%5BX_t%5D%20-%20E%5BX_t%5D%5E2%20%5C%5C%0A&amp;=%20%5Cpi_1%20-%20%5Cpi_1%5E2%20=%20%5Cdfrac%7Bp_0%20q_1%7D%7B%5Cleft%5B1%20-%20(p_1%20-%20p_0)%5Cright%5D%5E2%7D%0A%5Cend%7Baligned%7D%0A"></p>
<p>To compute the ACF at lag <img src="https://latex.codecogs.com/png.latex?r">, note that only the case <img src="https://latex.codecogs.com/png.latex?X_t%20=%201,%20X_%7Bt+r%7D%20=%201"> contributes to <img src="https://latex.codecogs.com/png.latex?E%5BX_t%20X_%7Bt+r%7D%5D">, due to the binary coding:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0AE%5BX_t%20X_%7Bt+r%7D%5D%20&amp;=%20%5Csum_%7Bi,j%7D%20i%20%5Ccdot%20j%20%5Ccdot%20%5CPr(X_t%20=%20i,%20X_%7Bt+r%7D%20=%20j)%20%5C%5C%0A&amp;=%20%5CPr(X_t%20=%201,%20X_%7Bt+r%7D%20=%201)%20=%20%5Cpi_1%20%5Ccdot%20P%5E%7B(r)%7D_%7B11%7D%0A%5Cend%7Baligned%7D%0A"></p>
<p>The covariance at lag <img src="https://latex.codecogs.com/png.latex?r"> is therefore:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0A%5Ctext%7BCov%7D(X_t,%20X_%7Bt+r%7D)%20&amp;=%20E%5BX_t%20X_%7Bt+r%7D%5D%20-%20E%5BX_t%5D%5E2%20%5C%5C%0A&amp;=%20%5Cpi_1%20%5Ccdot%20P%5E%7B(r)%7D_%7B11%7D%20-%20%5Cpi_1%5E2%20%5C%5C%0A&amp;=%20(p_1%20-%20p_0)%5Er%20%5Ccdot%20%5Cfrac%7Bp_0%20q_1%7D%7B%5B1%20-%20(p_1%20-%20p_0)%5D%5E2%7D%0A%5Cend%7Baligned%7D%0A"></p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
A note on the variance computation
</div>
</div>
<div class="callout-body-container callout-body">
<p>Since <img src="https://latex.codecogs.com/png.latex?X_t%20%5Cin%20%5C%7B0,1%5C%7D">, it follows that <img src="https://latex.codecogs.com/png.latex?X_t%5E2%20=%20X_t"> for all <img src="https://latex.codecogs.com/png.latex?t">, and hence <img src="https://latex.codecogs.com/png.latex?E%5BX_t%5E2%5D%20=%20E%5BX_t%5D">. This identity simplifies the computation of the variance, which becomes <img src="https://latex.codecogs.com/png.latex?%5Ctext%7BVar%7D(X_t)%20=%20E%5BX_t%5D%20-%20E%5BX_t%5D%5E2">.</p>
</div>
</div>
<p>The ACF is:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cboxed%7B%5Crho_r%20=%20%5Ctext%7BCorr%7D(X_t,%20X_%7Bt+r%7D)%20=%20%5Cfrac%7B%5Ctext%7BCov%7D(X_t,%20X_%7Bt+r%7D)%7D%7B%5Ctext%7BVar%7D(X_t)%7D%20=%20(p_1%20-%20p_0)%5Er%7D%0A"></p>
<p>This geometric decay reflects the memory of the chain, governed by the second eigenvalue of the transition matrix <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BP%7D">, namely <img src="https://latex.codecogs.com/png.latex?%5Clambda_2%20=%20p_1%20-%20p_0">.</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Coding and autocorrelation
</div>
</div>
<div class="callout-body-container callout-body">
<p>The ACF derived above is based on a binary coding of the process <img src="https://latex.codecogs.com/png.latex?X_t%20%5Cin%20%5C%7B0,1%5C%7D">. In this setting, the autocovariance at lag <img src="https://latex.codecogs.com/png.latex?r"> is:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Ctext%7BCov%7D(X_t,%20X_%7Bt+r%7D)%20=%20E%5BX_t%20X_%7Bt+r%7D%5D%20-%20E%5BX_t%5D%5E2%0A"></p>
<p>and the ACF is obtained as:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Crho_r%20=%20%5Cfrac%7B%5Ctext%7BCov%7D(X_t,%20X_%7Bt+r%7D)%7D%7B%5Ctext%7BVar%7D(X_t)%7D%20=%20(p_1%20-%20p_0)%5Er%0A"></p>
<p>Now, suppose we recode the process using values <img src="https://latex.codecogs.com/png.latex?%5C%7B-1,%20+1%5C%7D">, defining <img src="https://latex.codecogs.com/png.latex?Z_t%20=%202X_t%20-%201">. Then <img src="https://latex.codecogs.com/png.latex?Z_t%20%5Cin%20%5C%7B-1,%20+1%5C%7D"> and:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0AE%5BZ_t%5D%20&amp;=%202E%5BX_t%5D%20-%201%20%5C%5C%0A%5Ctext%7BVar%7D(Z_t)%20&amp;=%204%20%5Ccdot%20%5Ctext%7BVar%7D(X_t)%20%5C%5C%0AE%5BZ_t%20Z_%7Bt+r%7D%5D%20&amp;=%204E%5BX_t%20X_%7Bt+r%7D%5D%20-%204E%5BX_t%5D%20+%201%0A%5Cend%7Baligned%7D%0A"></p>
<p>So the autocovariance of <img src="https://latex.codecogs.com/png.latex?Z_t"> becomes:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Ctext%7BCov%7D(Z_t,%20Z_%7Bt+r%7D)%20=%20E%5BZ_t%20Z_%7Bt+r%7D%5D%20-%20E%5BZ_t%5D%5E2%20=%204%20%5Ccdot%20%5Ctext%7BCov%7D(X_t,%20X_%7Bt+r%7D)%0A"></p>
<p>and the autocorrelation remains invariant:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Ctext%7BCorr%7D(Z_t,%20Z_%7Bt+r%7D)%20=%20%5Cfrac%7B%5Ctext%7BCov%7D(Z_t,%20Z_%7Bt+r%7D)%7D%7B%5Ctext%7BVar%7D(Z_t)%7D%20=%20%5Cfrac%7B4%20%5Ccdot%20%5Ctext%7BCov%7D(X_t,%20X_%7Bt+r%7D)%7D%7B4%20%5Ccdot%20%5Ctext%7BVar%7D(X_t)%7D%20=%20%5Crho_r%0A"></p>
<p>This means that while the numerical values of expectation, variance, and autocovariance change under linear recoding, the autocorrelation (a dimensionless, normalized measure) does not.</p>
</div>
</div>
</section>
<section id="a-four-state-markov-chain-encoding-second-order-binary-dependencies" class="level2">
<h2 class="anchored" data-anchor-id="a-four-state-markov-chain-encoding-second-order-binary-dependencies">A four-state Markov chain encoding second-order binary dependencies</h2>
<p>Now consider a more structured chain where the state at time <img src="https://latex.codecogs.com/png.latex?t"> depends on both <img src="https://latex.codecogs.com/png.latex?X_%7Bt-1%7D"> and <img src="https://latex.codecogs.com/png.latex?X_%7Bt-2%7D">. This can be seen as a natural extension of the two-state MC to capture memory over two steps. This corresponds to a second-order Markov chain on binary values <img src="https://latex.codecogs.com/png.latex?X_t%20%5Cin%20%7B0,1%7D">. It can be encoded as a first-order Markov chain with 4 states (four-state MC), each representing a pair (<img src="https://latex.codecogs.com/png.latex?X_%7Bt-2%7D,%20X_%7Bt-1%7D">):</p>
<table class="caption-top table">
<thead>
<tr class="header">
<th>state</th>
<th>pair</th>
<th><img src="https://latex.codecogs.com/png.latex?X_t"></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><img src="https://latex.codecogs.com/png.latex?S_0"></td>
<td>(0,0)</td>
<td>0</td>
</tr>
<tr class="even">
<td><img src="https://latex.codecogs.com/png.latex?S_1"></td>
<td>(0,1)</td>
<td>1</td>
</tr>
<tr class="odd">
<td><img src="https://latex.codecogs.com/png.latex?S_2"></td>
<td>(1,0)</td>
<td>0</td>
</tr>
<tr class="even">
<td><img src="https://latex.codecogs.com/png.latex?S_3"></td>
<td>(1,1)</td>
<td>1</td>
</tr>
</tbody>
</table>
<p>The transition matrix <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BP%7D%20%5Cin%20%5Cmathbb%7BR%7D%5E%7B4%20%5Ctimes%204%7D"> then takes the form:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cmathbf%7BP%7D%20=%20%5Cbegin%7Bbmatrix%7D%0Ap_%7B11%7D%20&amp;%201%20-%20p_%7B11%7D%20&amp;%200%20&amp;%200%20%5C%5C%0A0%20&amp;%200%20&amp;%20p_%7B10%7D%20&amp;%201%20-%20p_%7B10%7D%20%5C%5C%0Ap_%7B01%7D%20&amp;%201%20-%20p_%7B01%7D%20&amp;%200%20&amp;%200%20%5C%5C%0A0%20&amp;%200%20&amp;%20p_%7B00%7D%20&amp;%201%20-%20p_%7B00%7D%0A%5Cend%7Bbmatrix%7D%0A"></p>
<p>Each row corresponds to a transition determined by the current pair (<img src="https://latex.codecogs.com/png.latex?X_%7Bt-2%7D,%20X_%7Bt-1%7D">), and the choice of the next value <img src="https://latex.codecogs.com/png.latex?X_t"> determines the new state Figure&nbsp;2.</p>
<div id="fig-2" class="quarto-float quarto-figure quarto-figure-center anchored" data-fig-align="center">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-2-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://amsabatini.netlify.app/posts/markov_chain_acf/4-state-MC.png" class="img-fluid quarto-figure quarto-figure-center figure-img" style="width:40.0%">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-2-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;2: Graph representation of the four-state Markov chain used to encode the particular alternation structure represented by the transition matrix <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BP%7D">.
</figcaption>
</figure>
</div>
<section id="stationary-distribution" class="level3">
<h3 class="anchored" data-anchor-id="stationary-distribution">Stationary distribution</h3>
<p>We can compute the stationary distribution <img src="https://latex.codecogs.com/png.latex?%5Cboldsymbol%7B%5Cpi%7D%20=%20%5B%5Cpi_0,%20%5Cpi_1,%20%5Cpi_2,%20%5Cpi_3%5D"> by solving the system:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cboldsymbol%7B%5Cpi%7D%20%5Ccdot%20%5Cmathbf%7BP%7D%20=%20%5Cboldsymbol%7B%5Cpi%7D,%20%5Cquad%20%5Csum_%7Bi=0%7D%5E3%20%5Cpi_i%20=%201%0A"></p>
<p>Thanks to the sparsity and regularity of the transition matrix <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BP%7D">, this system admits a closed-form solution. In particular, the stationary probabilities satisfy the following relations:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0A%5Cpi_1%20&amp;=%20%5Cfrac%7B1%20-%20p_%7B11%7D%7D%7Bp_%7B01%7D%7D%5Cpi_0%20%5C%5C%0A%5Cpi_2%20&amp;=%20%5Cpi_1%20%5C%5C%0A%5Cpi_3%20&amp;=%20%5Cfrac%7B1%20-%20p_%7B10%7D%7D%7Bp_%7B00%7D%7D%5Cpi_1%0A%5Cend%7Baligned%7D%0A"></p>
<p>Substituting into the normalization condition gives:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cleft%5B%201%20+%20%5Cfrac%7B2(1%20-%20p_%7B11%7D)%7D%7Bp_%7B01%7D%7D%20+%20%5Cfrac%7B(1%20-%20p_%7B11%7D)(1%20-%20p_%7B10%7D)%7D%7Bp_%7B01%7D%20p_%7B00%7D%7D%20%5Cright%5D%5Cpi_0%20=%201%0A"></p>
<p>Once <img src="https://latex.codecogs.com/png.latex?%5Cpi_0"> is computed from this expression, all remaining <img src="https://latex.codecogs.com/png.latex?%5Cpi_i">, <img src="https://latex.codecogs.com/png.latex?i%20=%201,%20%5Cdots,%203">, follow directly.</p>
</section>
<section id="autocorrelation-function" class="level3">
<h3 class="anchored" data-anchor-id="autocorrelation-function">Autocorrelation function</h3>
<p>To compute the ACF, we first define a projection function <img src="https://latex.codecogs.com/png.latex?f(i)">, which recovers the binary value <img src="https://latex.codecogs.com/png.latex?X_t"> encoded by state <img src="https://latex.codecogs.com/png.latex?S_i">:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0Af(i)%20=%20%5Cbegin%7Bcases%7D%0A1%20&amp;%20%5Ctext%7Bif%20%7D%20i%20%5Cin%20%5C%7B1,%203%5C%7D%20%5C%5C%0A0%20&amp;%20%5Ctext%7Botherwise%7D%0A%5Cend%7Bcases%7D%0A"></p>
<p>Then, the expectation of <img src="https://latex.codecogs.com/png.latex?X_t"> is:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AE%5BX_t%5D%20=%20%5Csum_%7Bi=0%7D%5E3%20f(i)%20%5Ccdot%20%5Cpi_i%20=%20%5Cpi_1%20+%20%5Cpi_3%0A"></p>
<p>and the variance becomes:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Ctext%7BVar%7D(X_t)%20=%20E%5BX_t%5D(1%20-%20E%5BX_t%5D)%0A"></p>
<p>To evaluate the autocorrelation at lag <img src="https://latex.codecogs.com/png.latex?r">, we compute the joint moment:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AE%5BX_t%20X_%7Bt+r%7D%5D%20=%20%5Csum_%7Bi=0%7D%5E3%20%5Csum_%7Bj=0%7D%5E3%20f(i)%20%5Ccdot%20f(j)%20%5Ccdot%20%5Cpi_i%20%5Ccdot%20%5Cleft%5B%5Cmathbf%7BP%7D%5Er%5Cright%5D_%7Bij%7D%0A"></p>
<p>so that the ACF is:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Crho_r%20=%20%5Cdfrac%7BE%5BX_t%20X_%7Bt+r%7D%5D%20-%20E%5BX_t%5D%5E2%7D%7B%5Ctext%7BVar%7D(X_t)%7D%0A"></p>
<p>This method relies only on the stationary distribution and the <img src="https://latex.codecogs.com/png.latex?r">-step transition matrix <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BP%7D%5Er">. Unlike the two-state MC discussed above, here <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BP%7D%5Er"> does not admit a closed-form expression and must be computed numerically.</p>
<p>The following R function implements the numerical computation of the ACF for the four-state MC described above. It constructs the transition matrix, solves for the stationary distribution, and computes the projected ACF based on the binary encoding of the states.</p>
<div class="cell">
<details class="code-fold">
<summary>Numerical computation of ACF</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">compute_acf_four_state <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(p11, p10, p01, p00, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max_lag =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>) {</span>
<span id="cb1-2">    </span>
<span id="cb1-3">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Transition matrix</span></span>
<span id="cb1-4">  P <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">matrix</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(p11, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> p11, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb1-5">                <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, p10, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> p10,</span>
<span id="cb1-6">                p01, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> p01, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb1-7">                <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, p00, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> p00), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrow =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">byrow =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb1-8"></span>
<span id="cb1-9">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Solve for stationary distribution π such that π %*% P = π</span></span>
<span id="cb1-10">  A <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t</span>(P) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">diag</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)</span>
<span id="cb1-11">  A <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbind</span>(A, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>))             <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add normalization row</span></span>
<span id="cb1-12">  b <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb1-13">  pi <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">solve</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t</span>(A) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%*%</span> A, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t</span>(A) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%*%</span> b)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Least-squares solution</span></span>
<span id="cb1-14"></span>
<span id="cb1-15">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Projection function f(i) = 1 for states 1 and 3, else 0</span></span>
<span id="cb1-16">  f <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb1-17"></span>
<span id="cb1-18">  EX   <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(f <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> pi)</span>
<span id="cb1-19">  VarX <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> EX <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> EX)</span>
<span id="cb1-20"></span>
<span id="cb1-21">  rho <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">numeric</span>(max_lag)</span>
<span id="cb1-22">  P_power <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">diag</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)</span>
<span id="cb1-23"></span>
<span id="cb1-24">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (r <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>max_lag) {</span>
<span id="cb1-25">    P_power <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> P_power <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%*%</span> P</span>
<span id="cb1-26">    EXX <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb1-27">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (i <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>) {</span>
<span id="cb1-28">      <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (j <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>) {</span>
<span id="cb1-29">        EXX <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> EXX <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> f[i] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> f[j] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> pi[i] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> P_power[i, j]</span>
<span id="cb1-30">      }</span>
<span id="cb1-31">    }</span>
<span id="cb1-32">    rho[r] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> (EXX <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> EX<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> VarX</span>
<span id="cb1-33">  }</span>
<span id="cb1-34"></span>
<span id="cb1-35">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb1-36">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pi   =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(pi, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>),</span>
<span id="cb1-37">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">EX   =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(EX, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>),</span>
<span id="cb1-38">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">VarX =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(VarX, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>),</span>
<span id="cb1-39">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">rho   =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(rho, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb1-40">  ))</span>
<span id="cb1-41">}</span></code></pre></div>
</details>
</div>
<p>Figure&nbsp;3 shows the resulting autocorrelation pattern, which reflects the alternating behavior encoded in the four-state structure and highlights the persistence introduced by second-order dependencies.</p>
<div id="fig-3" class="quarto-float quarto-figure quarto-figure-center anchored" data-fig-align="center">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-3-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://amsabatini.netlify.app/posts/markov_chain_acf/fig_acf.png" class="img-fluid quarto-figure quarto-figure-center figure-img" style="width:70.0%">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-3-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;3: Autocorrelation function for the four-state Markov chain with parameters <img src="https://latex.codecogs.com/png.latex?p_%7B00%7D%20=%200.80,%20p_%7B01%7D%20=%200.20,%20p_%7B10%7D%20=%200.50,%20p_%7B11%7D%20=%200.10">.
</figcaption>
</figure>
</div>
</section>
</section>
<section id="estimating-the-standard-error-of-a-sample-proportion" class="level2">
<h2 class="anchored" data-anchor-id="estimating-the-standard-error-of-a-sample-proportion">Estimating the standard error of a sample proportion</h2>
<p>When working with binary time series, a fundamental question is how to estimate the standard error (SE) of the sample proportion</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbar%7BX%7D_n%20=%20%5Cdfrac%7B1%7D%7Bn%7D%5Csum_%7Bt=1%7D%5En%20X_t%0A"></p>
<p>In the case of independent Bernoulli trials, the variance of the sample mean <img src="https://latex.codecogs.com/png.latex?%5Cbar%7BX%7D_n"> is:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Ctext%7BVar%7D(%5Cbar%7BX%7D_n)%20=%20%5Cfrac%7B%5Csigma%5E2%7D%7Bn%7D,%20%5Cquad%20%5Ctext%7Bwith%20%7D%20%5Csigma%5E2%20=%20p(1%20-%20p)%0A"></p>
<p>and the corresponding i.i.d. formula for the standard error is:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Ctext%7BSE%7D%20=%20%5Csqrt%7B%5Cdfrac%7Bp(1-p)%7D%7Bn%7D%7D%0A"></p>
<p>However, when the data are generated from a dependent process such as a Markov chain (either order 1 or 2), this formula underestimates or overestimates the true SE, because the observations are no longer independent.</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Variance of the sample mean with autocorrelated data
</div>
</div>
<div class="callout-body-container callout-body">
<p>Let <img src="https://latex.codecogs.com/png.latex?%7BX_t%7D"> be a weakly stationary process with mean <img src="https://latex.codecogs.com/png.latex?%5Cmu">, variance <img src="https://latex.codecogs.com/png.latex?%5Csigma%5E2">, and autocovariance function <img src="https://latex.codecogs.com/png.latex?%5Cgamma_r%20=%20%5Ctext%7BCov%7D(X_t,%20X_%7Bt+r%7D)">.</p>
<p>We are interested in the variance of the sample mean, which can be written:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Ctext%7BVar%7D(%5Cbar%7BX%7D_n)%20=%20%5Cfrac%7B1%7D%7Bn%5E2%7D%20%5Csum_%7Bt=1%7D%5En%20%5Csum_%7Bs=1%7D%5En%20%5Ctext%7BCov%7D(X_t,%20X_s)%0A=%20%5Cfrac%7B1%7D%7Bn%5E2%7D%20%5Csum_%7Bt=1%7D%5En%20%5Csum_%7Bs=1%7D%5En%20%5Cgamma_%7B%7Ct-s%7C%7D%0A"></p>
<p>We now reorganize this sum by collecting all terms with the same lag <img src="https://latex.codecogs.com/png.latex?r%20=%20%5Cmid%20t%20-%20s%5C,%5Cmid">. The number of terms with lag <img src="https://latex.codecogs.com/png.latex?r"> is <img src="https://latex.codecogs.com/png.latex?n%20-%20r"> (for <img src="https://latex.codecogs.com/png.latex?r%20=%200,%201,%5Ccdots,n%20-%201">). So:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Ctext%7BVar%7D(%5Cbar%7BX%7D_n)%20=%20%5Cfrac%7B1%7D%7Bn%5E2%7D%20%5Csum_%7Br=-(n-1)%7D%5E%7Bn-1%7D%20(n%20-%20%7Cr%7C)%20%5Cgamma_%7B%7Cr%7C%7D%0A=%20%5Cfrac%7B1%7D%7Bn%5E2%7D%20%5Cleft(%20n%20%5Cgamma_0%20+%202%20%5Csum_%7Br=1%7D%5E%7Bn-1%7D%20(n%20-%20r)%20%5Cgamma_r%20%5Cright)%0A"></p>
<p>Finally, using <img src="https://latex.codecogs.com/png.latex?%5Cgamma_0%20=%20%5Csigma%5E2"> and dividing numerator and denominator by <img src="https://latex.codecogs.com/png.latex?n">:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Ctext%7BVar%7D(%5Cbar%7BX%7D_n)%20=%20%5Cfrac%7B%5Csigma%5E2%7D%7Bn%7D%20%5Cunderbrace%7B%5Cleft(1%20+%202%20%5Csum_%7Br=1%7D%5E%7Bn-1%7D%20%5Cleft(1%20-%20%5Cfrac%7Br%7D%7Bn%7D%5Cright)%20%5Crho_r%20%5Cright)%7D_%5Ctext%7BVIF%7D%0A"></p>
<p>This formula shows how the autocorrelation structure inflates the variance of the sample mean. The term in parentheses is usually referred to as the variance inflation factor (<img src="https://latex.codecogs.com/png.latex?%5Ctext%7BVIF%7D">). <img src="https://latex.codecogs.com/png.latex?%5Ctext%7BVIF%7D"> reduces to 1 in the i.i.d. (independent identically distributed) case, when all <img src="https://latex.codecogs.com/png.latex?%5Crho_r%20=%200"> for <img src="https://latex.codecogs.com/png.latex?r%20%5Cgeq%201">.</p>
<p>For large <img src="https://latex.codecogs.com/png.latex?n"> and fast decay of the ACF, a common simplification for <img src="https://latex.codecogs.com/png.latex?%5Ctext%7BVIF%7D"> applies:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Ctext%7BVIF%7D%20%5Capprox%201%20+%202%20%5Csum_%7Br=1%7D%5ER%20%5Crho_r%0A"></p>
<p>where <img src="https://latex.codecogs.com/png.latex?R"> is a cutoff lag beyond which autocorrelation is negligible.</p>
</div>
</div>
<p>With the introduction of the <img src="https://latex.codecogs.com/png.latex?%5Ctext%7BVIF%7D">, the expression of <img src="https://latex.codecogs.com/png.latex?%5Ctext%7BSE%7D"> becomes:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cboxed%7B%5Ctext%7BSE%7D%20=%20%5Csqrt%7B%5Cdfrac%7Bp(1-p)%7D%7Bn%7D%7D%20%5Csqrt%7B%5Ctext%7BVIF%7D%5Cmathstrut%7D%7D%0A"></p>
<p>The <img src="https://latex.codecogs.com/png.latex?%5Ctext%7BVIF%7D"> can be computed for both the two-state and four-state MCs, for example when estimating the proportion of time spent in each state — and its standard error — from an observed binary sequence of length <img src="https://latex.codecogs.com/png.latex?n">.</p>
<ul>
<li>In the two-state MC, define the transition probabilities as follows:</li>
</ul>
<p><img src="https://latex.codecogs.com/png.latex?%0Ap_0%20=%20%5Ctext%7BPr%7D(0%20%5Cto%201),%20%5Cquad%20p_1%20=%20%5Ctext%7BPr%7D(1%20%5Cto%201)%0A"></p>
<p>With this parametrization, the lag-<img src="https://latex.codecogs.com/png.latex?r"> autocorrelation of the process is:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Crho_r%20=%20(p_1%20-%20p_0)%5Er%0A"></p>
<p>This expression fully determines the ACF, which decays geometrically. The corresponding <img src="https://latex.codecogs.com/png.latex?%5Ctext%7BVIF%7D"> becomes:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Ctext%7BVIF%7D%20=%20%5Cfrac%7B1%20+%20%5Crho_1%7D%7B1%20-%20%5Crho_1%7D%20=%20%5Cfrac%7B1%20+%20(p_1%20-%20p_0)%7D%7B1%20-%20(p_1%20-%20p_0)%7D%0A"></p>
<p>In the two-state case, the process is i.i.d. only when the transition matrix is both symmetric and memoryless — that is, when transitions occur with equal probability in both directions. In this case, the autocorrelations vanish and <img src="https://latex.codecogs.com/png.latex?%5Ctext%7BVIF%7D%20=%201">.</p>
<ul>
<li>In the four-state MC, the autocorrelations <img src="https://latex.codecogs.com/png.latex?%5Crho_r"> must be computed numerically (as done above), and plugged into the expression for <img src="https://latex.codecogs.com/png.latex?%5Ctext%7BVIF%7D"> above. As shown in Figure&nbsp;3, the ACF decays fast enough to justify using the simplified formula above.</li>
</ul>
<p>In both cases, accounting for autocorrelation is essential to avoid underestimating uncertainty in sample-based inference.</p>
<div class="callout callout-style-default callout-tip callout-titled" title="Example. Comparing VIF in two-state and four-state MCs">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Example. Comparing VIF in two-state and four-state MCs
</div>
</div>
<div class="callout-body-container callout-body">
<p>Let us consider two different Markov models generating a binary sequence <img src="https://latex.codecogs.com/png.latex?%7BX_t%7D">:</p>
<ul>
<li><p>two-state MC directly over <img src="https://latex.codecogs.com/png.latex?%5C%7B0,1%5C%7D">,</p></li>
<li><p>four-state MC, which overlaps bigrams <img src="https://latex.codecogs.com/png.latex?(X_%7Bt-1%7D,%20X_t)%20%5Cin%20%5C%7B00,01,10,11%5C%7D">, where the actual sequence is recovered by projecting on the second element of each pair.</p></li>
</ul>
<p>The two-state MC has transition parameters:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cleft%5C%7B%0A%5Cbegin%7Baligned%7D%0Ap_0&amp;=0.665%5C%5C%0Ap_1&amp;=0.115%0A%5Cend%7Baligned%7D%0A%5Cright.%0A"></p>
<p>Hence, the stationary distribution is given by:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cleft%5C%7B%0A%5Cbegin%7Baligned%7D%0A%5Ctext%7BPr%7D(X_t=0)&amp;=%5Cdfrac%7Bp_0%7D%7B1-(p_1-p_0)%7D=0.429%5C%5C%0A%5Ctext%7BPr%7D(X_t=1)&amp;=%5Cdfrac%7B1-p_1%7D%7B1-(p_1-p_0)%7D=0.571%0A%5Cend%7Baligned%7D%0A%5Cright.%0A"></p>
<p>The four-state MC has transition parameters:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cleft%5C%7B%0A%5Cbegin%7Baligned%7D%0Ap_%7B00%7D&amp;=%200.86%5C%5C%0Ap_%7B01%7D&amp;=%200.12%5C%5C%0Ap_%7B10%7D&amp;=%200.56%5C%5C%0Ap_%7B11%7D&amp;=%200.12%0A%5Cend%7Baligned%7D%0A%5Cright.%0A"></p>
<p>The stationary distribution of the binary sequence is computed by projecting on the second digit of each pair:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cleft%5C%7B%0A%5Cbegin%7Baligned%7D%0A%5Ctext%7BPr%7D(X_t=0)&amp;=%20%5Cpi_0+%5Cpi_2%5Capprox%200.429%5C%5C%0A%5Ctext%7BPr%7D(X_t=1)&amp;=%20%5Cpi_1+%5Cpi_3%5Capprox%200.571%5C%5C%0A%5Cend%7Baligned%7D%0A%5Cright.%0A"></p>
<p>where <img src="https://latex.codecogs.com/png.latex?%5Cboldsymbol%7B%5Cpi%7D%20=%20%5B%5Cpi_0,%20%5Cpi_1,%20%5Cpi_2,%20%5Cpi_3%5D"> is the stationary distribution of the four-state MC (obtained from, e.g., <code>compute_acf_four_state()</code>).</p>
<p>Even if the marginal distributions are almost identical, the two models may produce very different autocorrelation structures, and hence different values of the <img src="https://latex.codecogs.com/png.latex?%5Ctext%7BVIF%7D">:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cleft%5C%7B%0A%5Cbegin%7Baligned%7D%0A%5Ctext%7BVIF%7D_%7B%5Ctext%7Btwo-state%7D%7D&amp;=%5Cdfrac%7B1+(p_1-p_0)%7D%7B1-(p_1-p_0)%7D=0.290%5C%5C%0A%5Ctext%7BVIF%7D_%7B%5Ctext%7Bfour-state%7D%7D&amp;=0.196%0A%5Cend%7Baligned%7D%0A%5Cright.%0A"></p>
<p>where the value of <img src="https://latex.codecogs.com/png.latex?%5Ctext%7BVIF%7D_%7B%5Ctext%7Bfour-state%7D%7D"> is obtained from <code>compute_acf_four_state()</code>).</p>
<p>As shown by the negative ACF at lag 1 (–0.55 for the two-state MC, –0.54 for the four-state MC), both chains tend to promote alternation rather than persistence. When computing the SE, this alternation leads to an overestimation if one naively applies the i.i.d. formula. In both cases, the <img src="https://latex.codecogs.com/png.latex?%5Ctext%7BVIF%7D"> is smaller than 1, indicating anti-correlation. Moreover, since a smaller <img src="https://latex.codecogs.com/png.latex?%5Ctext%7BVIF%7D"> implies longer memory, we can conclude that the four-state MC retains information more persistently than the two-state one, despite having the same marginal distribution.</p>
</div>
</div>
<p>This example illustrates how two Markov models generating binary sequences with identical marginal distributions can nevertheless lead to different effective sample sizes, due to distinct autocorrelation structures that significantly impact inference.</p>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Tip
</div>
</div>
<div class="callout-body-container callout-body">
<p>To achieve the same standard error in both settings, one would need to inflate the sample size in the less autocorrelated case by a factor approximately equal to the ratio of the corresponding <img src="https://latex.codecogs.com/png.latex?%5Ctext%7BVIF%7D">s. In the example above, since <img src="https://latex.codecogs.com/png.latex?%5Ctext%7BVIF%7D_%7B%5Ctext%7Btwo-state%7D%7D%20=%200.290"> and <img src="https://latex.codecogs.com/png.latex?%5Ctext%7BVIF%7D_%7B%5Ctext%7Bfour-state%7D%7D%20=%200.196">, the required sample size under the two-state model should be roughly 1.5 times larger to achieve the same standard error as under the four-state model.</p>
</div>
</div>
<blockquote class="blockquote">
<p><strong>In short, correlation matters—even when proportions look the same.</strong> These insights remind us that dependencies in data—often subtle—can have major consequences for statistical inference. Understanding and quantifying them is essential, even in the simplest of models.</p>
</blockquote>


</section>

 ]]></description>
  <category>probability</category>
  <category>statistics</category>
  <guid>https://amsabatini.netlify.app/posts/markov_chain_acf/</guid>
  <pubDate>Sun, 08 Jun 2025 22:00:00 GMT</pubDate>
  <media:content url="https://amsabatini.netlify.app/posts/markov_chain_acf/2-4-state-MC.png" medium="image" type="image/png" height="188" width="144"/>
</item>
<item>
  <title>Backwards through the model</title>
  <dc:creator>Angelo Maria Sabatini</dc:creator>
  <link>https://amsabatini.netlify.app/posts/calibration/</link>
  <description><![CDATA[ 




<p>Calibrating a transducer means establishing a functional relationship between a physical input (e.g., pressure, temperature, force) and a measured output. In many real-world applications, however, the actual objective lies elsewhere: once the system is calibrated, the focus shifts to model inversion. Given an observed output, the task is to determine which input value could plausibly have produced it. This is precisely the challenge faced during deployment, when the transducer is integrated into an operational system.</p>
<p>This post explores — through a simple but realistic example — the conceptual limits of direct model inversion in regression. The discussion also includes a brief note on orthogonal regression and introduces a Monte Carlo simulation strategy for addressing inverse prediction.</p>
<section id="simulating-a-calibration-scenario" class="level2 unnumbered">
<h2 class="unnumbered anchored" data-anchor-id="simulating-a-calibration-scenario">Simulating a calibration scenario</h2>
<p>A simplified yet technically plausible calibration scenario is considered. The system under calibration is a nonlinear transducer — for instance, a sensor whose output voltage varies smoothly with a physical input quantity such as pressure or displacement. The underlying (noiseless) response function is assumed to be injective, meaning that each output corresponds to exactly one input value. In functional terms, the response curve is monotonic, ensuring that inversion remains well-defined in the absence of noise.</p>
<p>The true input–output relationship is assumed to follow a smooth nonlinear curve, here modeled as a fourth-degree polynomial (truth model). Measurement noise is introduced by adding zero-mean Gaussian noise with standard deviation <img src="https://latex.codecogs.com/png.latex?%5Csigma"> to the target outputs.</p>
<p>The R code below simulates 25 calibration data points from the reference model. A distinction is drawn between the transducer’s full operating range, <img src="https://latex.codecogs.com/png.latex?%5B0,12%5D">, and the actual calibration interval, <img src="https://latex.codecogs.com/png.latex?%5B1,11%5D"> — henceforth referred to as the measurement interval. This setup reflects common practice, where calibration is limited to a central portion of the device’s range. Within this interval, an operating point <img src="https://latex.codecogs.com/png.latex?x%5E*=3.5"> is selected, corresponding to a target output <img src="https://latex.codecogs.com/png.latex?y%5E*=11">. All variables are expressed in arbitrary units.</p>
<div class="cell">
<details class="code-fold">
<summary>Simulate the calibration dataset</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">123</span>)</span>
<span id="cb1-3"></span>
<span id="cb1-4">x_full <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length.out =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>)</span>
<span id="cb1-5"></span>
<span id="cb1-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Coefficients for a strictly increasing polynomial on [0, 10]</span></span>
<span id="cb1-7">beta <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.681125</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.2</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.002</span>)</span>
<span id="cb1-8"></span>
<span id="cb1-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define the operating point ...</span></span>
<span id="cb1-10">x_star <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.5</span></span>
<span id="cb1-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ... the corresponding target output</span></span>
<span id="cb1-12">y_star <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span></span>
<span id="cb1-13"></span>
<span id="cb1-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Truth model function</span></span>
<span id="cb1-15">f_true <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(x) {</span>
<span id="cb1-16">  beta[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> beta[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>x <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> beta[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>x<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> beta[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>x<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> beta[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>x<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span>
<span id="cb1-17">}</span>
<span id="cb1-18"></span>
<span id="cb1-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># True outputs</span></span>
<span id="cb1-20">y_true <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">f_true</span>(x_full)</span>
<span id="cb1-21"></span>
<span id="cb1-22">sigma <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-23">y <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> y_true <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(x_full), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mean =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sd =</span> sigma)</span>
<span id="cb1-24"></span>
<span id="cb1-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Build full dataset</span></span>
<span id="cb1-26">df_full <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x_full, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> y, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y_true =</span> y_true)</span>
<span id="cb1-27"></span>
<span id="cb1-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Subset for calibration: (1, 11)</span></span>
<span id="cb1-29">df_calib <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">subset</span>(df_full, x <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> x <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>)</span></code></pre></div>
</details>
</div>
<p><strong>Cautionary note</strong>: The noise added to the simulated outputs assumes constant standard deviation and Gaussian distribution — a deliberate simplification. In reality, calibration is often performed under carefully controlled laboratory conditions, which minimize thermal drift, power supply variations, and other environmental effects.</p>
<p>Once deployed, however, the transducer is left to “breathe” — it operates in a dynamic environment, subject to factors that were effectively considered constant during calibration. As a result, the actual variability in output readings is typically greater than what the calibration model suggests.</p>
<p>Moreover, it is not uncommon for the noise standard deviation to depend on the input value itself — for instance, in thermocouples or strain gauge sensors, measurement variability often increases with temperature or applied force due to physical nonlinearities and sensitivity drift and/or drop.</p>
</section>
<section id="fitting-the-calibration-model" class="level2 unnumbered">
<h2 class="unnumbered anchored" data-anchor-id="fitting-the-calibration-model">Fitting the calibration model</h2>
<p>Calibration is performed by fitting a polynomial regression model to the observed data — restricted to the measurement interval, as would typically be the case in practice to avoid excessive extrapolation at the boundaries. A fourth-degree polynomial is fitted using least squares, which coincides with the true data-generating mechanism adopted in the simulation (though in real applications, such knowledge would not be available).</p>
<div class="cell">
<details class="code-fold">
<summary>Fit a 4th-degree polynomial model</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Fit the calibration model only within (1, 11)</span></span>
<span id="cb2-2">model_poly4 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">poly</span>(x, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> df_calib)</span>
<span id="cb2-3"></span>
<span id="cb2-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Predict over the full domain for visualization</span></span>
<span id="cb2-5">df_full<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>y_pred <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(model_poly4, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">newdata =</span> df_full)</span></code></pre></div>
</details>
</div>
<p>To better understand the validity range of the model, we plot the full dataset along with the fitted curve, highlighting the measurement interval.</p>
<p>To assess the validity domain of the fitted model, the entire dataset is visualized alongside the estimated regression curve Figure&nbsp;1. The measurement interval is explicitly marked, highlighting the region where data were actually used for model fitting. Outside this interval, the model operates in extrapolation mode, relying on limited or no information — a situation in which prediction accuracy and reliability can rapidly deteriorate.</p>
<div id="fig-1" class="quarto-float quarto-figure quarto-figure-center anchored" data-fig-align="center">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://amsabatini.netlify.app/posts/calibration/fig1.png" class="img-fluid quarto-figure quarto-figure-center figure-img" style="width:75.0%">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;1: The red points represent noisy measurements, the dotted black line indicates the true model, and the solid blue line shows the fitted polynomial curve. The dashed vertical lines mark the boundaries of the measurement interval.
</figcaption>
</figure>
</div>
</section>
<section id="from-direct-prediction-to-inversion" class="level2 unnumbered">
<h2 class="unnumbered anchored" data-anchor-id="from-direct-prediction-to-inversion">From direct prediction to inversion</h2>
<p>Now suppose the calibrated system is to be used in the field. For a new observed target output <img src="https://latex.codecogs.com/png.latex?y%5E*">, the goal is to estimate the corresponding input <img src="https://latex.codecogs.com/png.latex?x"> under the fitted model. This task is known as <strong>inverse prediction</strong>. A common misunderstanding is to simply reverse the roles of input and output and fit a new regression model of the form <img src="https://latex.codecogs.com/png.latex?x%20%5Csim%20y">. This “reversed regression” approach, however, lacks a solid statistical foundation and yields incorrect uncertainty estimates — especially when measurement noise affects the output, not the input.</p>
<p>In most calibration settings, the values of the input variable are assumed to be known with negligible uncertainty, while the output is subject to measurement noise. This asymmetry is foundational: classical regression assumes uncertainty in the response, not in the predictor. Swapping their roles invalidates that assumption and leads to biased estimates. The underlying statistical inconsistency is further discussed below in the context of orthogonal regression.</p>
<p>Instead, the correct formulation requires solving the equation</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Chat%7By%7D(x)%20=%20y%5E*%0A"></p>
<p>i.e., finding the value of <img src="https://latex.codecogs.com/png.latex?x"> for which the predicted output equals the observed measurement. In general, this equation cannot be solved in closed form for a polynomial of degree greater than two, unless specific simplifying conditions apply. However, since the fitted polynomial is strictly increasing over the full input domain <img src="https://latex.codecogs.com/png.latex?%5B0,%2012%5D">, the solution exists and is unique for any <img src="https://latex.codecogs.com/png.latex?y%5E*"> in the measurement interval, where reliable inverse predictions can thus be expected.</p>
<p>The inversion can be carried out numerically — for example, using <code>uniroot()</code> in R, which implements the bisection method. This approach is robust and well-suited to continuous, monotonic functions like the fitted polynomial. Below, the inversion is performed for the chosen target output.</p>
<div class="cell">
<details class="code-fold">
<summary>Invert the calibration model</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define the target output</span></span>
<span id="cb3-2">y_star <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span></span>
<span id="cb3-3"></span>
<span id="cb3-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define the prediction function from the model</span></span>
<span id="cb3-5">predict_poly <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(x) {</span>
<span id="cb3-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(model_poly4, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">newdata =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x))</span>
<span id="cb3-7">}</span>
<span id="cb3-8"></span>
<span id="cb3-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define the function to solve: f(x) = y_pred(x) - y_star</span></span>
<span id="cb3-10">f_inversion <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(x) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict_poly</span>(x) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> y_star</span>
<span id="cb3-11"></span>
<span id="cb3-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Solve numerically in the interval [1, 11] (calibration zone)</span></span>
<span id="cb3-13">x_hat <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">uniroot</span>(f_inversion, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lower =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">upper =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>root</span></code></pre></div>
</details>
</div>
<p>An target output of 11 corresponds to an estimated input of 3.499, based on the fitted calibration model.</p>
<div id="fig-2" class="quarto-float quarto-figure quarto-figure-center anchored" data-fig-align="center">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-2-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://amsabatini.netlify.app/posts/calibration/fig2.png" class="img-fluid quarto-figure quarto-figure-center figure-img" style="width:75.0%">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-2-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;2: The fitted regression curve (blue line) is inverted numerically for the target output <img src="https://latex.codecogs.com/png.latex?y%5E*%20=%2011"> (horizontal red dashed line), yielding the corresponding estimate <img src="https://latex.codecogs.com/png.latex?%5Chat%7Bx%7D"> of the operating point (vertical dotted line). The point <img src="https://latex.codecogs.com/png.latex?(%5Chat%7Bx%7D,%20y%5E*)"> is marked on the curve to illustrate the solution.
</figcaption>
</figure>
</div>
<p>This kind of inverse prediction relies entirely on the deterministic structure of the fitted model and does not account for uncertainty. In the next section, a Monte Carlo approach will be introduced to estimate the distribution of plausible inputs given an observed output.</p>
<p>Before proceeding, it is useful to reflect on the geometry of the problem — in particular, on the fact that ordinary least-squares regression minimizes the sum of squared vertical distances from the data points to the fitted curve. This choice is justified when the input variable is regarded as fixed and known without error, and all uncertainty is attributed to the output. When this assumption no longer holds — as is often the case in inverse usage — minimizing vertical deviations may no longer be the most appropriate strategy.</p>
<section id="a-geometric-note-vertical-vs-orthogonal-residuals" class="level3 unnumbered">
<h3 class="unnumbered anchored" data-anchor-id="a-geometric-note-vertical-vs-orthogonal-residuals">A geometric note: vertical vs orthogonal residuals</h3>
<p>In classical regression, the output variable <img src="https://latex.codecogs.com/png.latex?y"> is modeled as random, while treating the input <img src="https://latex.codecogs.com/png.latex?x"> as fixed or measured without error — or equivalently, as a random variable with <strong>zero standard deviation</strong>. This modeling choice is what justifies minimizing the <em>vertical distance</em> between the observed <img src="https://latex.codecogs.com/png.latex?y"> values and the fitted curve <img src="https://latex.codecogs.com/png.latex?%5Chat%7By%7D(x)"> in least-squares estimation.</p>
<p>However, when using the model in reverse — i.e., to estimate <img src="https://latex.codecogs.com/png.latex?x"> given <img src="https://latex.codecogs.com/png.latex?y"> — this assumption becomes questionable. In real-world settings, the input itself is subject to measurement uncertainty, or the roles of input and output may conceptually reverse (e.g., in calibration vs deployment).</p>
<p>This motivates the idea of orthogonal regression, or total least squares, where the residuals are measured perpendicularly to the curve, taking into account errors in both variables.</p>
<p>Although not implemented here, orthogonal regression serves as an important conceptual reminder: the least-squares fit is geometrically asymmetric. Direct prediction (forward use) is naturally supported; inverse prediction must be handled with care, especially in nonlinear settings like the one examined here.</p>
<div class="callout callout-style-default callout-important callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Orthogonal regression in practice
</div>
</div>
<div class="callout-body-container callout-body">
<p>A practical method for regression with errors in both x and y is Deming regression, which minimizes the sum of squared orthogonal distances to the fitted line, assuming a known error variance ratio.</p>
<p>While classical regression assumes the input x is known precisely — or has negligible variance — this is often not the case in calibration tasks, particularly when inputs are indirectly observed or reversed during deployment.</p>
<p>Deming regression has two key limitations here:</p>
<ol type="1">
<li><p>It applies only to linear models — not to polynomials like the one used above;</p></li>
<li><p>It requires the specification of the error variance ratio between <img src="https://latex.codecogs.com/png.latex?x"> and <img src="https://latex.codecogs.com/png.latex?y">. In practice, this ratio must be inferred from physical knowledge of the system, including the intrinsic noise of the transducer and the propagation of input uncertainty through the calibration curve.</p></li>
</ol>
</div>
</div>
<p>While orthogonal regression becomes numerically complex in nonlinear settings, the next section takes a different route — not to improve the regression fit, but to explore how output noise affects the inference of input values. The goal is to simulate, under known conditions, how a calibrated system behaves when used in reverse.</p>
</section>
</section>
<section id="inverse-prediction-under-different-noise-levels" class="level2 unnumbered">
<h2 class="unnumbered anchored" data-anchor-id="inverse-prediction-under-different-noise-levels">Inverse prediction under different noise levels</h2>
<p>This section illustrates a simulation-based strategy for inverse prediction. Given a target output, the goal is to characterize the distribution of input values <img src="https://latex.codecogs.com/png.latex?x"> that could plausibly have generated it, under the assumption that the noise affecting the output is Gaussian and matches the standard deviation used during calibration.</p>
<p>The procedure is as follows:</p>
<ol type="1">
<li><p>Fix a target output <img src="https://latex.codecogs.com/png.latex?y%5E*">;</p></li>
<li><p>Generate samples of random noise <img src="https://latex.codecogs.com/png.latex?%5Cvarepsilon_i%20%5Csim%20%5Cmathcal%7BN%7D(0,%20%5Csigma%5E2)">, using the known standard deviation;</p></li>
<li><p>For each sample, solve the perturbed equation:</p></li>
</ol>
<p><img src="https://latex.codecogs.com/png.latex?%0Ay(x_i)=y%5E*+%5Cvarepsilon_i%0A"></p>
<p>using the truth model (i.e., the exact polynomial coefficients), to obtain a sample of input values consistent with the observed output.</p>
<p>This approach provides a probabilistic reconstruction of the likely inputs that could have produced a given output under a known model with output noise. It highlights how variability in the output propagates backward through the system, inducing uncertainty in the inferred inputs.</p>
<p>To illustrate how noise affects inverse estimation, two scenarios are compared. The first replicates the controlled conditions of the calibration process, where the noise level is low and well-characterized. The second represents a more realistic deployment setting, where the same transducer operates in a less stable environment, leading to larger variability in the output. By repeating the Monte Carlo simulation under both conditions, it becomes possible to observe how increased noise distorts the distribution of plausible input values — including shifts in bias, widening of confidence intervals, and an increase in failed inversion attempts due to extrapolation beyond the calibrated domain Figure&nbsp;3.</p>
<div class="cell">
<details class="code-fold">
<summary>Compare two noise scenarios for inverse prediction</summary>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">n_sim <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5000</span></span>
<span id="cb4-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># First scenario: sigma = 1</span></span>
<span id="cb4-3">sigma_A <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> sigma</span>
<span id="cb4-4">eps_A   <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(n_sim, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, sigma_A)</span>
<span id="cb4-5">x_inv_A <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sapply</span>(y_star <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> eps_A, <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(y_t) {</span>
<span id="cb4-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tryCatch</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">uniroot</span>(<span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(x) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">f_true</span>(x) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> y_t, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lower =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">upper =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>root, </span>
<span id="cb4-7">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">error =</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(e) <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA_real_</span>)</span>
<span id="cb4-8">})</span>
<span id="cb4-9">x_emp_A  <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(x_inv_A, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb4-10">bias_A   <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> x_emp_A <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> x_hat</span>
<span id="cb4-11">ci_emp_A <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">quantile</span>(x_inv_A, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">probs =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.025</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.975</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb4-12">n_NA_A   <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(x_inv_A))</span>
<span id="cb4-13"></span>
<span id="cb4-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Second scenario: sigma = 2</span></span>
<span id="cb4-15">sigma_B <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb4-16">eps_B   <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(n_sim, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, sigma_B)</span>
<span id="cb4-17">x_inv_B <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sapply</span>(y_star <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> eps_B, <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(y_t) {</span>
<span id="cb4-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tryCatch</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">uniroot</span>(<span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(x) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">f_true</span>(x) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> y_t, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lower =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">upper =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>root, </span>
<span id="cb4-19">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">error =</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(e) <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA_real_</span>)</span>
<span id="cb4-20">})</span>
<span id="cb4-21">x_emp_B  <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(x_inv_B, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb4-22">bias_B   <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> x_emp_B <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> x_hat</span>
<span id="cb4-23">ci_emp_B <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">quantile</span>(x_inv_B, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">probs =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.025</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.975</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb4-24">n_NA_B   <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(x_inv_B))</span>
<span id="cb4-25"></span>
<span id="cb4-26">df_plot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(</span>
<span id="cb4-27">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(x_inv_A, x_inv_B),</span>
<span id="cb4-28">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scenario =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Calibration (σ = 1)"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Deployment (σ = 2)"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">each =</span> n_sim)))</span></code></pre></div>
</details>
</div>
<div class="cell" data-tbl-caption="Monte Carlo simulation: distribution of input values consistent with the observed output">
<div class="cell-output-display">
<table quarto-disable-processing="true" class="table table-condensed table-bordered" style="font-size: 14px; width: auto !important; margin-left: auto; margin-right: auto;">
<caption style="font-size: initial !important;">Monte Carlo simulation under two noise scenarios. The table summarizes the distribution of input values consistent with the target output. The number of failed inversions (NA) indicates the samples falling outside the measurement interval.</caption>
 <thead>
  <tr>
   <th style="text-align:left;"> Scenario </th>
   <th style="text-align:right;"> Monte Carlo mean (x̄) </th>
   <th style="text-align:right;"> Bias </th>
   <th style="text-align:left;"> 95% CI (quantiles) </th>
   <th style="text-align:right;"> Failed inversions (NA) </th>
  </tr>
 </thead>
<tbody>
  <tr>
   <td style="text-align:left;"> σ = 1 (calibration) </td>
   <td style="text-align:right;"> 3.494 </td>
   <td style="text-align:right;"> -0.005 </td>
   <td style="text-align:left;"> [3.112, 3.837] </td>
   <td style="text-align:right;"> 0 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> σ = 2 (deployment) </td>
   <td style="text-align:right;"> 3.474 </td>
   <td style="text-align:right;"> -0.024 </td>
   <td style="text-align:left;"> [2.663, 4.136] </td>
   <td style="text-align:right;"> 0 </td>
  </tr>
</tbody>
</table>

</div>
</div>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Notation key
</div>
</div>
<div class="callout-body-container callout-body">
<p><img src="https://latex.codecogs.com/png.latex?y%5E*">: target output to be inverted (deployment phase)</p>
<p><img src="https://latex.codecogs.com/png.latex?%5Chat%7Bx%7D">: input estimate obtained by inverting the fitted model</p>
<p><img src="https://latex.codecogs.com/png.latex?x_i">: individual input values sampled via Monte Carlo simulation</p>
<p><img src="https://latex.codecogs.com/png.latex?%5Cbar%7Bx%7D">: empirical mean of the Monte Carlo input distribution</p>
<p>Bias: computed as <img src="https://latex.codecogs.com/png.latex?%5Cbar%7Bx%7D%20-%20%5Chat%7Bx%7D"></p>
</div>
</div>
<div id="fig-3" class="quarto-float quarto-figure quarto-figure-center anchored" data-fig-align="center">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-3-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://amsabatini.netlify.app/posts/calibration/fig3.png" class="img-fluid quarto-figure quarto-figure-center figure-img" style="width:75.0%">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-3-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;3: Monte Carlo density estimates of input values consistent with the target output under two noise conditions. Blue: calibration scenario (<img src="https://latex.codecogs.com/png.latex?%5Csigma%20=%201">). Red: deployment scenario (<img src="https://latex.codecogs.com/png.latex?%5Csigma%20=%202">). The vertical dashed line marks <img src="https://latex.codecogs.com/png.latex?%5Chat%7Bx%7D">, the input estimate obtained by inverting the fitted model. As noise increases, the density skews leftward — a consequence of the fact that sensitivity (i.e., the slope of the calibration curve) tends to increase with input value. This results in asymmetric confidence intervals, with heavier tails toward lower <img src="https://latex.codecogs.com/png.latex?x"> values.
</figcaption>
</figure>
</div>
<p>This method illustrates how even a fixed output measurement may correspond to a range of plausible inputs. The spread of this distribution depends on the noise level, the local slope of the calibration curve near <img src="https://latex.codecogs.com/png.latex?y%5E*">, and the model’s nonlinearity.</p>
<p>In linear settings, Monte Carlo inversion recovers the classical prediction interval for <img src="https://latex.codecogs.com/png.latex?x%5E*"> derived from theory. In nonlinear cases, however, simulation becomes essential to reveal the actual shape and spread of the inverse uncertainty.</p>
<p><strong>Key observations:</strong></p>
<p>The peak of the simulated density typically does not align with <img src="https://latex.codecogs.com/png.latex?%5Chat%7Bx%7D">, the inverse prediction from the fitted model. This reflects a small bias introduced by the asymmetry of the transformation <img src="https://latex.codecogs.com/png.latex?x%20%5Crightarrow%20y">, which distorts symmetric output noise into skewed input uncertainty.</p>
<p>Despite Gaussian noise on the output, the resulting distribution of plausible <img src="https://latex.codecogs.com/png.latex?x"> values is not normal. Nonlinear calibration curves map symmetric errors into asymmetric input spreads, especially in regions with varying slope or curvature.</p>
<p>As noise increases, the inverse distribution becomes wider and increasingly left-skewed. This behavior is consistent with the increasing sensitivity of the model at higher <img src="https://latex.codecogs.com/png.latex?x"> values and results in confidence intervals that shift and become asymmetric — as clearly shown in Figure&nbsp;3. However, the use of numerical solvers like <code>uniroot()</code> comes with important caveats near the edges of the calibration domain. When the slope of the model becomes very small — as it often does at low input values — the inversion becomes ill-conditioned: small variations in output may correspond to large variations in input, or even result in multiple or no real-valued solutions. In such cases, the solver may return only one of several possible roots, typically the one closer to the lower boundary. This effect contributes to the asymmetric shape and heavy left tail of the inverse distribution shown in Figure&nbsp;3, even when the output noise itself is symmetric.</p>
<p>A further complication arises from the fitted polynomial model used for inversion. While the interpolating polynomial approximates the calibration curve well over central regions, it tends to oscillate or flatten toward the boundaries, particularly in higher-order fits. These edge effects can amplify instability in the inverse prediction — both for numerical solvers and for lookup-table interpolation — unless the prediction range is appropriately restricted or the model complexity reduced.</p>
</section>
<section id="a-final-word-this-is-the-optimistic-case" class="level2 unnumbered">
<h2 class="unnumbered anchored" data-anchor-id="a-final-word-this-is-the-optimistic-case">A final word: this is the optimistic case</h2>
<p>The Monte Carlo simulations shown so far illustrate a powerful approach to inverse prediction — but under conditions that are more optimistic than most real-world applications. In particular, the numerical solver was applied to the truth model, i.e., the same polynomial function used to generate the data. This means that, although noise was present in the output, the model structure was assumed to be perfectly known and invertible. In reality, due to computational constraints at deployment time or industrial protocols that can prevent real-time inversion via numerical methods, inverse prediction is rarely implemented via numerical solvers — more often, it relies on lookup tables derived from synthetic calibration curves.</p>
<section id="a-first-step-toward-table-based-inverse-prediction" class="level3 unnumbered">
<h3 class="unnumbered anchored" data-anchor-id="a-first-step-toward-table-based-inverse-prediction">A first step toward table-based inverse prediction</h3>
<p>Lookup tables link input values to their expected outputs based on the fitted model, enabling fast and resource-efficient retrieval of approximate inverses during deployment.</p>
<p>The idea is simple:</p>
<ul>
<li>Step 1: Generate a synthetic grid of input values over the calibration interval;</li>
<li>Step 2: Evaluate the fitted model on each input to obtain corresponding outputs;</li>
<li>Step 3: Store the resulting pairs <img src="https://latex.codecogs.com/png.latex?(x_j,%20%5Chat%7By%7D_j)"> in a lookup table;</li>
<li>Step 4: At deployment, when an output <img src="https://latex.codecogs.com/png.latex?y%5E*"> is observed, find the two closest values in the table and return the associated <img src="https://latex.codecogs.com/png.latex?%5Chat%7Bx%7D"> (possibly via linear interpolation between adjacent points). Of course, this step can work only if the table columns are strictly monotonic.</li>
</ul>
<p>It is worth noting that the requirement of monotonicity is shared with the numerical solver: non-monotonic regions in the model may lead to multiple valid solutions or to failed inversions when the output falls outside the achievable range. However, the problem is often more acute with lookup tables. Unlike solvers, which can dynamically refine their search and isolate a valid root, lookup tables are constrained to a discrete grid of stored values — and interpolation may become unstable or misleading near flat or turning regions of the model.</p>
<p>This limitation highlights a trade-off between computational efficiency and robustness of inversion. It also suggests that, before deploying lookup-based inverse prediction, one should:</p>
<ol type="1">
<li>carefully inspect the fitted model for monotonicity;</li>
<li>possibly restrict the input range to regions where inversion is well-defined;</li>
<li>or simplify the model structure (e.g., reducing polynomial degree) to avoid non-monotonic behavior.</li>
</ol>
</section>
</section>
<section id="test-with-a-lookup-table-under-deployment-conditions" class="level2 unnumbered">
<h2 class="unnumbered anchored" data-anchor-id="test-with-a-lookup-table-under-deployment-conditions">Test with a lookup table under deployment conditions</h2>
<p>To evaluate inverse prediction under realistic deployment conditions, I simulate noisy output observations centered at the target output, with a standard deviation of <img src="https://latex.codecogs.com/png.latex?%5Csigma=2">.</p>
<p>A lookup table is constructed from the fitted model, but only over a restricted interval where monotonicity has been both visually and numerically verified. This ensures that the inversion procedure remains well-defined and avoids regions where multiple or unstable solutions might occur.</p>
<div id="fig-4" class="quarto-float quarto-figure quarto-figure-center anchored" data-fig-align="center">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-4-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://amsabatini.netlify.app/posts/calibration/fig4.png" class="img-fluid quarto-figure quarto-figure-center figure-img" style="width:75.0%">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-4-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;4: Density of inverse input values obtained via a lookup table. Because of the good quality of the table in terms of monotonicity and range, the distribution closely resembles that obtained using the numerical solver in Figure&nbsp;3. No inversion failures occurred in the Monte Carlo simulation. The 95% confidence interval is <img src="https://latex.codecogs.com/png.latex?%5B2.652,%204.126%5D">, with a Monte Carlo mean <img src="https://latex.codecogs.com/png.latex?%5Cbar%7Bx%7D%20=%203.471"> and a bias of approximately <img src="https://latex.codecogs.com/png.latex?-0.028">.
</figcaption>
</figure>
</div>
</section>
<section id="conclusion-and-outlook" class="level2 unnumbered">
<h2 class="unnumbered anchored" data-anchor-id="conclusion-and-outlook">Conclusion and outlook</h2>
<p>This post has explored the challenge of inverse prediction in static calibration, highlighting the often-overlooked asymmetry of uncertainty when working backward from output to input. Using both numerical solvers and lookup tables, I showed how Monte Carlo simulation can quantify the resulting variability — even in optimistic settings where the model is perfectly known and the only uncertainty comes from measurement noise.</p>
<p>Along the way, I emphasized that inverse prediction is more sensitive than forward prediction to model structure, output noise, and edge behavior. In particular, it should be remarked that:</p>
<ol type="1">
<li><p>confidence intervals become skewed and asymmetric as noise increases;</p></li>
<li><p>the numerical solver can fail silently near the domain boundaries;</p></li>
<li><p>lookup tables, while efficient and interpretable, require monotonicity and careful grid design.</p></li>
</ol>
<p>I deliberately kept the noise levels moderate and the model structure well-behaved. This allowed us to isolate key phenomena without introducing unnecessary complications. But real-world problems are rarely so kind: noise and non-monotonicity are recurring nightmares — not just in calibration, but in data-driven projects, where transducers often serve as the gateway to the information we rely on.</p>
<p>The next post in this series will dive deeper into these complications. I’ll explore what happens when the true model structure is unknown or misestimated, when noise levels are high enough to push the inverse prediction outside the measurement interval, and when the forward function is non-monotonic. These “edge cases” pose significant risks — but also offer valuable opportunities to rethink how calibration is designed and implemented in practice.</p>


</section>

 ]]></description>
  <category>measurement</category>
  <category>statistics</category>
  <guid>https://amsabatini.netlify.app/posts/calibration/</guid>
  <pubDate>Wed, 28 May 2025 22:00:00 GMT</pubDate>
  <media:content url="https://amsabatini.netlify.app/posts/calibration/calibration.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Statistics and Machine Learning: A shared landscape</title>
  <dc:creator>Angelo Maria Sabatini</dc:creator>
  <link>https://amsabatini.netlify.app/posts/statistics_vs_ML/</link>
  <description><![CDATA[ 




<p>One of the most important similarities between statistics and machine learning (ML) is that both rely heavily on models. While this connection is sometimes overlooked, it forms the backbone of how we organize and analyze data. Regardless of the number and type of variables involved—whether explanatory or response variables, continuous or categorical—statistical modeling remains at the core of the process. Whether our goal is to predict outcomes, uncover relationships, or assess differences, modeling gives structure and meaning to the patterns we observe. ML, too, builds on this idea of modeling, but with a slightly different emphasis. Here, the focus is often more explicitly on defining a mathematical mapping between inputs and outputs—a modeling aspect that tends to be more immediately visible than in traditional statistical practice.</p>
<p>Several practical factors make a full overlap between the two approaches less straightforward. One is the sheer difference in the size of datasets: classical statistical analyses often rely on relatively small samples, especially in fields such as medicine or social sciences. This distinction, however, is beginning to blur: modern applications in fields like digital health, education technology, or online behavioral studies increasingly generate larger datasets, enabling the use of ML-inspired methods even in traditionally small-sample domains. ML, by contrast, tends to operate in contexts where large datasets are available—or at least assumed. Another difference lies in the typical workflow: in ML, it is standard practice to split data into training, validation, and testing sets, managing the trade-off between fitting well and generalizing. This concern, central to ML, is less explicitly present in traditional statistical workflows.</p>
<p>Despite these differences, statistics and ML increasingly share common objectives and approaches: building models that capture meaningful patterns while balancing complexity against generalization.(For readers unfamiliar with some of the technical terms, a brief summary is provided in the Key Concepts sections below.)</p>
<section id="what-is-a-statistical-model" class="level2">
<h2 class="anchored" data-anchor-id="what-is-a-statistical-model">What is a statistical model?</h2>
<p>In classical statistics — for example, for methods introduced early in the training of sophomore students, such as simple linear regression and ANOVA (ANalysis Of VAriance) — the model is typically written in a very structured form. Let us suppose that <img src="https://latex.codecogs.com/png.latex?Y"> is the response variable (outcome) and <img src="https://latex.codecogs.com/png.latex?X_1,X_2,%5Ccdots,X_m"> are explanatory variables (predictors), collected into the vector <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BX%7D">; the model is the equation that we suppose relate together the predictors to the outcome, for any of a number <img src="https://latex.codecogs.com/png.latex?n"> of observational units, with an important element noticed in the formulation of the model-the random error term, <img src="https://latex.codecogs.com/png.latex?%5Cvarepsilon">:</p>
<p><span id="eq-model-general"><img src="https://latex.codecogs.com/png.latex?%0AY_%7Bi%7D=f(%5Cmathbf%7BX%7D_i;%5Ctheta)+%5Cvarepsilon_i,%5Cquad%20i=1,...,n%0A%5Ctag%7B1%7D"></span></p>
<p>where <img src="https://latex.codecogs.com/png.latex?%5Ctheta"> are the parameters to be estimated. This decomposition highlights two essential ideas:</p>
<ul>
<li>There is an underlying systematic component (<img src="https://latex.codecogs.com/png.latex?f(%5Cmathbf%7BX%7D_i;%5Ctheta)">),</li>
<li>Plus an error component (<img src="https://latex.codecogs.com/png.latex?%5Cvarepsilon_i">), which captures variability not explained by the model.</li>
</ul>
<p>The classical statistical inferential procedures—whether hypothesis testing or interval estimation—are fundamentally designed around the behavior of this error term. It is also important to realize that we can never observe the error term, but we can infer its behavior from the analysis of the model residual — the difference between observed and predicted values.</p>
<p>In classical parametric inference, crucial assumptions are made about the behavior of the error terms <img src="https://latex.codecogs.com/png.latex?%5Cvarepsilon_i"> in the general model Equation&nbsp;1.</p>
<p>To ensure analytical tractability and valid inference, it is common to summarize these assumptions using the acronym LINE — Linearity, Independence, Normality, and Equality of variance:</p>
<ol type="1">
<li><p><strong>Linearity</strong>: The model is linear in the parameters <img src="https://latex.codecogs.com/png.latex?%5Ctheta">; that is, the expected value of the outcome variable <img src="https://latex.codecogs.com/png.latex?Y"> can be expressed as a linear combination of the parameters, possibly through transformations of the predictors <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BX%7D">.</p></li>
<li><p><strong>Independence</strong>: The error terms are independent across observations. In particular, for time series data, consecutive errors are assumed to be uncorrelated. In cross-sectional data, failure of independence often reflects issues in experimental design, such as inadequate random assignment or hidden confounding. Detecting such problems can be challenging and typically requires careful planning at the data collection stage.</p></li>
<li><p><strong>Normality</strong>: The error terms are normally distributed with mean zero.</p></li>
<li><p><strong>Equality of variance (Homoscedasticity)</strong>: The error terms have constant variance across the range of the predictors.</p></li>
</ol>
<p>These assumptions provide the theoretical foundation for estimating parameters, constructing confidence intervals, and performing hypothesis tests in a coherent analytical framework. Understanding how residuals behave is not only crucial in classical inference, but also serves as a bridge toward modern predictive approaches, as discussed in the note below.</p>
<div class="callout callout-style-default callout-note callout-titled" title="Residuals and ML">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Residuals and ML
</div>
</div>
<div class="callout-body-container callout-body">
<p>The concept of residuals — as discrepancies between observed outcomes and model predictions — remains central in ML as well. Although the term “residual” is less frequently emphasized explicitly, the analysis of prediction errors underpins critical tasks such as model evaluation, hyperparameter tuning, and post-hoc diagnostics across supervised learning workflows.</p>
<p>Understanding residuals provides a natural bridge between classical inferential thinking and modern predictive modeling practices.</p>
</div>
</div>
<p>This careful structure is what allows classical statistics to calibrate confidence intervals, compute p-values, and estimate statistical power, all based on theoretically derived sampling distributions. However, when these assumptions are violated, the inferential reliability may break down — often in unpredictable ways. Modern approaches like <strong>bootstrap resampling</strong> offer alternatives that reduce dependency on strong theoretical assumptions, and interestingly, align closely with resampling strategies widely used in ML (such as cross-validation for hyperparameter tuning). In a sense, bootstrapping can be seen as a bridge: a classical method moving closer to the data-driven, flexible spirit that characterizes much of modern ML practice.</p>
</section>
<section id="key-concepts" class="level2">
<h2 class="anchored" data-anchor-id="key-concepts">Key Concepts</h2>
<div class="callout callout-style-default callout-important callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Statistics-Based Key Concepts
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li><p><strong>Estimator</strong>: A function of sample data used to infer the value of an unknown population parameter. Estimators form the basis for constructing confidence intervals and conducting hypothesis tests.</p></li>
<li><p><strong>Sampling Distribution</strong>: The probability distribution of an estimator over many hypothetical repeated samples from the same population.</p></li>
<li><p><strong>Confidence Interval</strong>: An estimated range, derived from an estimator, that likely contains the true value of the population parameter with a given level of confidence.</p></li>
<li><p><strong>p-value</strong>: The probability, under the null hypothesis, of obtaining a test statistic at least as extreme as the one observed.</p></li>
<li><p><strong>Statistical Power</strong>: The probability that a statistical test correctly rejects the null hypothesis when the alternative hypothesis is true.</p></li>
<li><p><strong>Type I Error</strong>: Incorrectly rejecting a true null hypothesis (false positive).</p></li>
<li><p><strong>Type II Error</strong>: Failing to reject a false null hypothesis (false negative).</p></li>
<li><p><strong>Residual</strong>: The difference between the observed value and the corresponding predicted value from a statistical model. Residuals are empirical proxies for the unobservable error terms, enabling diagnostic analyses of model fit and assumptions.</p></li>
<li><p><strong>Degrees of Freedom</strong>: The number of independent values in a calculation that are free to vary. In statistical inference, degrees of freedom determine the shape of sampling distributions (e.g., t or F) and reflect the amount of information available to estimate variability.</p></li>
</ul>
</div>
</div>
<div class="callout callout-style-default callout-important callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
ML-based key concepts
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li><p><strong>Confusion Matrix</strong>: a table showing true positives, false positives, true negatives, and false negatives.</p></li>
<li><p><strong>ROC Curve</strong>: a plot of true positive rate vs false positive rate across different thresholds.</p></li>
<li><p><strong>ROC AUC</strong>: a single-number summary of a model’s discrimination ability across thresholds.</p></li>
<li><p><strong>Operating Point (Threshold Selection)</strong>: the decision threshold balancing false positives and false negatives, based on context.</p></li>
<li><p><strong>Class Imbalance</strong>: a condition where the categories in the outcome variable are unequally represented. It can lead to biased models, misleading performance metrics, and poor generalization — especially when one class dominates. Common remedies include resampling, weighting, and using metrics like ROC AUC instead of raw accuracy. Although widely addressed in ML, class imbalance also affects classical inference, where low-prevalence categories can distort p-values and test power.</p></li>
</ul>
</div>
</div>
<div class="callout callout-style-default callout-important callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Advanced key concepts
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li><p><strong>Cross-Entropy Loss</strong>: measures the dissimilarity between predicted probabilities and true labels.</p></li>
<li><p><strong>Regularization</strong>: techniques (e.g., L1, L2) to prevent overfitting by penalizing model complexity.</p></li>
<li><p><strong>Gradient Descent</strong>: an optimization method for minimizing loss functions.</p></li>
<li><p><strong>Overfitting and Underfitting</strong>: learning too much noise (overfitting) or missing the signal (underfitting).</p></li>
</ul>
</div>
</div>
</section>
<section id="from-hypothesis-testing-to-predictive-modeling" class="level2">
<h2 class="anchored" data-anchor-id="from-hypothesis-testing-to-predictive-modeling">From Hypothesis Testing to Predictive Modeling</h2>
<p>Let us now illustrate the modeling perspective starting with a classical example: the independent-samples t-test. First, the neded libraries are uploaded.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load required libraries</span></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidymodels)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(broom)</span>
<span id="cb1-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(kableExtra)</span></code></pre></div>
</details>
</div>
<section id="simulating-data-for-classical-inference" class="level3">
<h3 class="anchored" data-anchor-id="simulating-data-for-classical-inference">Simulating Data for Classical Inference</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Simulate two groups with slightly different means</span></span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">123</span>)</span>
<span id="cb2-3">group1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mean =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5.0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sd =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>)</span>
<span id="cb2-4">group2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mean =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5.5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sd =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>)</span>
<span id="cb2-5"></span>
<span id="cb2-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Combine data into a single data frame</span></span>
<span id="cb2-7">df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(</span>
<span id="cb2-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span>), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span>))),</span>
<span id="cb2-9">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">outcome =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(group1, group2)</span>
<span id="cb2-10">)</span></code></pre></div>
</div>
<p>We simulate two groups, randomly drawn from two normally distributed populations, with means <img src="https://latex.codecogs.com/png.latex?%5Cmu_A%20=%205.0"> and <img src="https://latex.codecogs.com/png.latex?%5Cmu_B%20=%205.5">, and standard deviations <img src="https://latex.codecogs.com/png.latex?%5Csigma_A%20=%20%5Csigma_B%20=%201.0">. Each group contains <img src="https://latex.codecogs.com/png.latex?n%20=%2064"> observations. In the spirit of a real experiment, the population parameters are unknown — the only information we have comes from the observed data. Our inferential task is to test whether a difference exists between the group means, under the standard null and alternative hypotheses:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AH_0:%20%5Cmu_A%20=%20%5Cmu_B%20%5Cquad%5Cquad%20H_1:%20%5Cmu_A%20%5Cne%20%5Cmu_B%0A"></p>
<p>In this example, we simulate 64 observations per group — a total of 128 — to achieve 80% statistical power for detecting a medium effect size (<img src="https://latex.codecogs.com/png.latex?d%20=%200.5">) with a two-sided t-test at the conventional 5% significance level. This decision is not arbitrary: in a well-planned experiment, the sample size should be defined <em>before</em> data collection, based on acceptable error rates, either of Type I or Type II. Surprisingly, many — even published — experimental studies skip this crucial planning step, treating sample size as an afterthought rather than a design parameter.</p>
<p>This consideration can be visualized by examining how statistical power varies with the sample size and the effect size. The plot in Figure&nbsp;1 shows the power curves for three typical values of Cohen’s effect size (<img src="https://latex.codecogs.com/png.latex?d%20=%200.2">, <img src="https://latex.codecogs.com/png.latex?0.5">, <img src="https://latex.codecogs.com/png.latex?0.8">), representing small, medium, and large effects. The dashed line marks the conventional threshold of 80% power.</p>
<p>As the plot shows, detecting a medium effect with 80% reliability requires at least 64 observations <em>per group</em>. Informal rules of thumb such as “30 is enough” may drastically underestimate the sample size needed for meaningful results.</p>
<div class="cell" data-layout-align="center">
<div class="cell-output-display">
<div id="fig-power-curve" class="quarto-float quarto-figure quarto-figure-center anchored" data-fig-align="center">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-power-curve-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://amsabatini.netlify.app/posts/statistics_vs_ML/power_curve_ttest.png" class="img-fluid quarto-figure quarto-figure-center figure-img" style="width:80.0%">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-power-curve-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;1: Power curves for two-sample t-tests at significance level (= 0.05), across three common effect sizes ((d = 0.2), (0.5), (0.8)). The dashed horizontal line marks the conventional 80% power threshold, often adopted as a design goal. The plot shows how detecting even a moderate effect requires at least 64 observations <em>per group</em> — far more than suggested by popular heuristics.
</figcaption>
</figure>
</div>
</div>
</div>
</section>
<section id="performing-a-t-test-and-fitting-a-regression-model" class="level3">
<h3 class="anchored" data-anchor-id="performing-a-t-test-and-fitting-a-regression-model">Performing a t-test and Fitting a Regression Model</h3>
<p>In the snippet below, we perform a t-test and fit a regression model on the <em>same</em> simulated dataset. The outputs are produced by different functions but convey equivalent statistical information — all centered on testing whether the two group means differ. This equivalence is not accidental: it arises from how categorical variables are treated in regression models. Specifically, dummy (or indicator) coding when doing ANOVA translates group membership into a numeric predictor, allowing the regression coefficient to represent the mean difference between groups — exactly as tested by the t-test.</p>
<div class="cell">
<details class="code-fold">
<summary>Analysis code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Perform an independent-samples t-test</span></span>
<span id="cb3-2">t_test_res <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t.test</span>(outcome <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> group, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> df, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">var.equal =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb3-3"></span>
<span id="cb3-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Fit a linear model with group as a predictor</span></span>
<span id="cb3-5">lm_model <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(outcome <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> group, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> df)</span>
<span id="cb3-6"></span>
<span id="cb3-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Apply ANOVA to the linear model</span></span>
<span id="cb3-8">anova_res <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">anova</span>(lm_model)</span></code></pre></div>
</details>
</div>
</section>
<section id="display-results" class="level3">
<h3 class="anchored" data-anchor-id="display-results">Display results</h3>
<div class="cell">
<div class="cell-output cell-output-stdout">
<pre><code>
→ t-test
──────────────</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>
    Two Sample t-test

data:  outcome by group
t = -2.8597, df = 126, p-value = 0.004964
alternative hypothesis: true difference in means between group A and group B is not equal to 0
95 percent confidence interval:
 -0.7629029 -0.1388665
sample estimates:
mean in group A mean in group B 
       5.038478        5.489362 </code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>
→ ANOVA
──────────────</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>Analysis of Variance Table

Response: outcome
           Df  Sum Sq Mean Sq F value   Pr(&gt;F)   
group       1   6.506  6.5055  8.1781 0.004964 **
Residuals 126 100.231  0.7955                    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>
→ Linear Model (summary)
──────────────</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>
Call:
lm(formula = outcome ~ group, data = df)

Residuals:
     Min       1Q   Median       3Q      Max 
-2.29853 -0.59548 -0.05597  0.53407  2.19797 

Coefficients:
            Estimate Std. Error t value Pr(&gt;|t|)    
(Intercept)   5.0385     0.1115   45.19  &lt; 2e-16 ***
groupB        0.4509     0.1577    2.86  0.00496 ** 
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 0.8919 on 126 degrees of freedom
Multiple R-squared:  0.06095,   Adjusted R-squared:  0.0535 
F-statistic: 8.178 on 1 and 126 DF,  p-value: 0.004964</code></pre>
</div>
</div>
<p>How should we interpret these numbers? The goal of our analysis was to assess whether the two groups differ in their mean outcome. Both the t-test and the regression model provide consistent answers to this question.</p>
<p>In the regression output, the coefficient <code>groupB = 0.4509</code> represents the estimated difference in means between the two groups. The associated p-value (0.00496) indicates that this difference is statistically significant at the conventional 5% level — strong evidence against the null hypothesis <img src="https://latex.codecogs.com/png.latex?(H_0:%5Cmu_A=%5Cmu_B)">.</p>
<p>The F-statistic from the ANOVA table (8.178) confirms this result, and it is numerically equal to the square of the t-statistic from the regression output <img src="https://latex.codecogs.com/png.latex?(F=t%5E2)">, as expected when comparing two groups using a linear model.</p>
<p>The residual standard error (0.8919) provides an estimate of the variability within groups, and the degrees of freedom (126) reflect that all available data were used for estimation. This is typical in classical inference, where no data is held out for validation — in contrast with ML practice.</p>
<div class="callout callout-style-default callout-tip callout-titled" title="🎯 Interpretation">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
🎯 Interpretation
</div>
</div>
<div class="callout-body-container callout-body">
<p>As expected, the t-statistic and the p-value from the t-test correspond exactly to the t-statistic and p-value for the group coefficient in the regression model.</p>
</div>
</div>
<div class="callout callout-style-default callout-tip callout-titled" title="t, F and the language of models">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
t, F and the language of models
</div>
</div>
<div class="callout-body-container callout-body">
<p>Although <code>t.test()</code> and <code>lm()</code> appear to be different tools, they both test the same hypothesis — that the group means differ. The t-statistic for the group coefficient in the regression is identical to the one returned by the t-test. Furthermore, the <code>anova()</code> function applied to the linear model produces an F-statistic equal to the square of the t-statistic: <img src="https://latex.codecogs.com/png.latex?(F%20=%20t%5E2)">. Different outputs, same logic.</p>
</div>
</div>
<div class="callout callout-style-default callout-note callout-titled" title="Normality and sample size">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Normality and sample size
</div>
</div>
<div class="callout-body-container callout-body">
<p>The values of the t and F statistics shown in the tables are derived from the Student’s t and Fisher’s F distributions, respectively. These distributions — and the reliability of the associated inference — rely on the assumption that residuals follow a normal distribution.</p>
<p>This assumption is especially critical when sample sizes are small. As sample size increases, the central limit theorem ensures that the sampling distribution of the test statistic becomes approximately normal, even if the underlying data are not. With 64 observations per group, the inference is considered robust to moderate departures from normality.</p>
</div>
</div>
<p>The p-value expresses the degree of statistical surprise associated with the observed value of the test statistic — under the assumption that the null hypothesis is true. In other words, it quantifies how incompatible the data are with what would be expected from the sampling distribution under the null. Paradoxically, in statistical practice we often look for surprise: the lower the p-value, the more tempted we are to conclude that <strong>the null hypothesis may not hold</strong>.</p>
<p>The degrees of freedom associated with a statistical model offer a practical indication of its vulnerability to overfitting. Since they increase with the amount of data and decrease with the number of parameters estimated, a low number of degrees of freedom is a warning signal: the model may be too complex relative to the information available. In traditional statistical practice, this aspect is often underappreciated — yet it plays a critical role in determining the stability and generalizability of inferential results.</p>
<p>This example shows how seemingly different statistical tools — a t-test, a linear model, and an ANOVA — all converge toward the same conclusion, using distinct but mathematically connected representations. What may appear at first as separate techniques are, in fact, different expressions of the same modeling logic.</p>
<p>It is also worth noting that, in this classical setting, all available observations — 64 per group, for a total of 128 — are used entirely for model estimation. No data is reserved for model validation. All degrees of freedom are “spent” in fitting and inference, with no external check on how well the model might generalize to new data. This design choice — to use all data for estimation — is rooted in the assumptions and goals of classical inference. In contrast, ML workflows routinely reserve part of the data for validation, tuning, and performance assessment.</p>
</section>
</section>
<section id="from-inference-to-prediction-a-first-machine-learning-example" class="level2">
<h2 class="anchored" data-anchor-id="from-inference-to-prediction-a-first-machine-learning-example">From Inference to Prediction: A First Machine Learning Example</h2>
<p>We now shift from inference to prediction. In supervised ML, model validation is built into the workflow — often using separate training and testing sets — to evaluate how well the model generalizes.</p>
<p>Before diving deeper, it’s worth highlighting that although ML is often associated with “algorithms,” the core idea remains modeling. Algorithms are tools to find models — representations of patterns in the data — much as in statistics. The shift lies in the greater flexibility and adaptability expected of models built via ML.</p>
<p>Let’s now construct a simple classification example using simulated data. To keep the comparison with the previous example meaningful, we simulate two equally sized groups — 64 observations each — and generate two continuous predictors for classification. As with the t-test setting, the balanced design is not strictly necessary, but it remains highly advisable. Severe class imbalance can distort statistical inference and degrade the performance of classifiers, especially when probabilistic calibration is involved.</p>
<p>Wherever possible, experimental design should strive for balanced or near-balanced group sizes. In statistical inference, imbalance may reduce the precision of estimates or distort p-values. In ML, it can lead to biased classifiers, especially when the outcome classes are highly skewed. While techniques exist to handle imbalance — such as weighting, oversampling, or downsampling, it is good experimental practice to minimize it at the design stage whenever possible.</p>
<section id="simulating-data-for-binary-classification" class="level3">
<h3 class="anchored" data-anchor-id="simulating-data-for-binary-classification">Simulating Data for Binary Classification</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Simulate data</span></span>
<span id="cb10-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">123</span>)</span>
<span id="cb10-3">n <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span></span>
<span id="cb10-4">x1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(n, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(n, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.75</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))</span>
<span id="cb10-5">x2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(n, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(n, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.75</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))</span>
<span id="cb10-6">class <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, n), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, n)), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">levels =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1"</span>))</span>
<span id="cb10-7"></span>
<span id="cb10-8">df_ml <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x1 =</span> x1, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x2 =</span> x2, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">class =</span> class)</span></code></pre></div>
</div>
<p>The two classes are linearly separable, by design — each group was generated from a distinct bivariate Gaussian distribution, Figure&nbsp;2. This separation facilitates learning and allows us to explore classification behavior in a clean, controlled setting.</p>
<div class="cell" data-layout-align="center">
<div class="cell-output-display">
<div id="fig-bivariate-dataset" class="quarto-float quarto-figure quarto-figure-center anchored" data-fig-align="center">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-bivariate-dataset-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://amsabatini.netlify.app/posts/statistics_vs_ML/index_files/figure-html/fig-bivariate-dataset-1.png" class="img-fluid quarto-figure quarto-figure-center figure-img" style="width:80.0%">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-bivariate-dataset-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;2: Simulated dataset with two linearly separable classes, used to illustrate binary classification.
</figcaption>
</figure>
</div>
</div>
</div>
</section>
<section id="fitting-a-logistic-regression-model" class="level3">
<h3 class="anchored" data-anchor-id="fitting-a-logistic-regression-model">Fitting a Logistic Regression Model</h3>
<p>Although the name might suggest otherwise, logistic regression is not a method for modeling continuous outcomes. It is, in fact, one of the simplest and most widely used algorithms for <strong>binary classification</strong>. Given its solid statistical foundations, efficiency, and interpretability, logistic regression often serves as a reliable first choice in many applied ML workflows.</p>
<p>Rather than predicting a numeric value, the model estimates the <strong>probability that each observation belongs to a given class</strong> — typically class 1. The model learns a relationship between the features and this probability, and a threshold (usually 0.5) is then applied to assign class labels.</p>
<p>Here we use the <a href="https://www.tidymodels.org/"><code>tidymodels</code></a> framework to fit the model. Tidymodels provides a unified and expressive syntax for specifying, training, and evaluating models in R, following the tidyverse principles.</p>
<p>To keep the example simple but realistic, we perform a basic train/test split before fitting the model. This reflects a fundamental aspect of the ML workflow: models are expected to generalize to new, unseen data. In contrast to traditional statistical modeling — where inference is often based on the full dataset, with uncertainty captured via confidence intervals or p-values — ML emphasizes predictive performance on held-out data.</p>
<p>Since logistic regression has no tunable hyperparameters, and our example involves just two features, we do not perform cross-validation or model tuning. A single split suffices to illustrate the predictive logic.</p>
<div class="cell">
<details class="code-fold">
<summary>Analysis code</summary>
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Split and annotate</span></span>
<span id="cb11-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">123</span>)</span>
<span id="cb11-3">split <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">initial_split</span>(df_ml, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prop =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.75</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">strata =</span> class)</span>
<span id="cb11-4">train_df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">training</span>(split) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">set =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Train"</span>)</span>
<span id="cb11-5">test_df  <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">testing</span>(split)  <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">set =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Test"</span>)</span>
<span id="cb11-6"></span>
<span id="cb11-7">df_all   <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_rows</span>(train_df, test_df)</span>
<span id="cb11-8"></span>
<span id="cb11-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Fit logistic regression on training set</span></span>
<span id="cb11-10">model_ml <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">logistic_reg</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb11-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set_engine</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"glm"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb11-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fit</span>(class <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> x1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> x2, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> train_df)</span></code></pre></div>
</details>
</div>
</section>
<section id="visualizing-the-decision-boundary" class="level3">
<h3 class="anchored" data-anchor-id="visualizing-the-decision-boundary">Visualizing the Decision Boundary</h3>
<p>In classical statistical testing, the choice of an operational point is often driven by conventions: a significance level of 0.05 and a power of 0.80 are typically adopted without extensive reflection. In ML, however, this decision is more explicitly tied to the ROC curve. The model provides estimated probabilities, and it is up to the practitioner — in consultation with stakeholders — to choose a classification threshold that reflects real-world priorities: minimizing false positives, false negatives, or some balanced trade-off. In the example discussed here, the boundary decision is plotted as a line over the point distributions of the two classes, as shown in Figure&nbsp;3.</p>
<div class="cell">
<div class="cell-output-display">
<div id="fig-bivariate-decision" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-bivariate-decision-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://amsabatini.netlify.app/posts/statistics_vs_ML/index_files/figure-html/fig-bivariate-decision-1.png" class="img-fluid figure-img" width="672">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-bivariate-decision-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;3: Decision boundary produced by a logistic regression classifier fitted on the training set (circles). Points in the test set are shown as triangles. Class 0 and Class 1 are represented in blue and red, respectively. The model learns to separate the two classes by estimating a probability of class membership and applying a threshold (here, 0.5). This visualization helps assess how well the model generalizes, especially when overlaid on unseen test data.
</figcaption>
</figure>
</div>
</div>
</div>
</section>
<section id="evaluating-performance-roc-curve-and-auc" class="level3">
<h3 class="anchored" data-anchor-id="evaluating-performance-roc-curve-and-auc">Evaluating Performance: ROC Curve and AUC</h3>
<p>We now evaluate model performance using the ROC curve, introduced earlier in the <em>ML-based key concepts</em> callout.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Predict and evaluate</span></span>
<span id="cb12-2">test_df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> test_df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb12-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_cols</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(model_ml, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">new_data =</span> test_df, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"prob"</span>))</span>
<span id="cb12-4"></span>
<span id="cb12-5">roc_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">roc_curve</span>(test_df, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">truth =</span> class, .pred_0)</span>
<span id="cb12-6">auc_val  <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">roc_auc</span>(test_df, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">truth =</span> class, .pred_0)</span>
<span id="cb12-7"></span>
<span id="cb12-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Predict on training set (add probabilities + class prediction)</span></span>
<span id="cb12-9">train_df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> train_df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb12-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_cols</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(model_ml, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">new_data =</span> ., <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"prob"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb12-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pred_class =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">if_else</span>(.pred_1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">levels =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1"</span>)))</span>
<span id="cb12-12"></span>
<span id="cb12-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Ensure predicted class exists on test set</span></span>
<span id="cb12-14">test_df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> test_df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb12-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pred_class =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">if_else</span>(.pred_1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">levels =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1"</span>)))</span></code></pre></div>
</details>
</div>
<p>This curve, shown in Figure&nbsp;4, summarizes the trade-off between sensitivity and specificity across all possible thresholds, and provides a basis for threshold-independent comparison between classifiers.</p>
<div class="cell">
<div class="cell-output-display">
<div id="fig-roc" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-roc-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://amsabatini.netlify.app/posts/statistics_vs_ML/index_files/figure-html/fig-roc-1.png" class="img-fluid figure-img" width="672">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-roc-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;4: ROC curve for the logistic regression model, evaluated on the test set. The curve shows how sensitivity (true positive rate) and specificity (1 - false positive rate) evolve as the decision threshold varies. This version reproduces the staircase structure typical of ROC curves, using a step plot with cleaned and ordered data. The dashed line represents chance-level performance. The area under the curve (AUC) summarizes overall discriminative ability.
</figcaption>
</figure>
</div>
</div>
</div>
<p>The ROC curve provides a global view of model discrimination across all possible thresholds, but model decisions are ultimately made at specific thresholds. This is where the confusion matrix (Figure&nbsp;5) and the classification metrics table come into play: they reveal how a fixed cutoff — here 0.5 — translates into concrete outcomes in terms of correct and incorrect predictions. Such threshold-dependent evaluations are essential when aligning models with real-world decision-making contexts.</p>
<div class="cell">
<div class="cell-output-display">
<div id="fig-confmat" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-confmat-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://amsabatini.netlify.app/posts/statistics_vs_ML/index_files/figure-html/fig-confmat-1.png" class="img-fluid figure-img" width="672">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-confmat-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;5: Confusion matrix for the logistic regression model on the test set (threshold = 0.5). The matrix summarizes the number of correct and incorrect predictions, broken down by actual and predicted class. It highlights how model decisions play out at a specific threshold, complementing the global view offered by the ROC curve.
</figcaption>
</figure>
</div>
</div>
</div>
<p>To complement the confusion matrix, we report key performance metrics in Table&nbsp;1. These include accuracy, sensitivity (recall for the positive class), and specificity (true negative rate), computed separately on the training and test sets.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Compute each metric separately, then combine</span></span>
<span id="cb13-2">metrics_train <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(</span>
<span id="cb13-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">set =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Train"</span>,</span>
<span id="cb13-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">accuracy =</span> yardstick<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">accuracy</span>(train_df, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">truth =</span> class, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">estimate =</span> pred_class) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pull</span>(.estimate),</span>
<span id="cb13-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sensitivity =</span> yardstick<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sens</span>(train_df, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">truth =</span> class, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">estimate =</span> pred_class) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pull</span>(.estimate),</span>
<span id="cb13-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">specificity =</span> yardstick<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">spec</span>(train_df, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">truth =</span> class, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">estimate =</span> pred_class) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pull</span>(.estimate)</span>
<span id="cb13-7">)</span>
<span id="cb13-8"></span>
<span id="cb13-9">metrics_test <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(</span>
<span id="cb13-10">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">set =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Test"</span>,</span>
<span id="cb13-11">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">accuracy =</span> yardstick<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">accuracy</span>(test_df, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">truth =</span> class, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">estimate =</span> pred_class) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pull</span>(.estimate),</span>
<span id="cb13-12">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sensitivity =</span> yardstick<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sens</span>(test_df, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">truth =</span> class, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">estimate =</span> pred_class) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pull</span>(.estimate),</span>
<span id="cb13-13">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">specificity =</span> yardstick<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">spec</span>(test_df, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">truth =</span> class, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">estimate =</span> pred_class) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pull</span>(.estimate)</span>
<span id="cb13-14">)</span></code></pre></div>
</details>
</div>
<p>This summary highlights how well the model generalizes and reinforces the idea that threshold selection — while often fixed by convention in statistical testing — plays a pivotal role in applied ML.</p>
<div class="cell">
<div id="tbl-performance-metrics" class="cell quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-tbl figure">
<figcaption class="quarto-float-caption-top quarto-float-caption quarto-float-tbl" id="tbl-performance-metrics-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Table&nbsp;1: Summary of classification metrics at threshold 0.5 for training and test sets. Reported metrics include accuracy, sensitivity (recall for class 1), and specificity (true negative rate). These help interpret model performance beyond the AUC, and illustrate how different metrics depend on the choice of decision threshold.
</figcaption>
<div aria-describedby="tbl-performance-metrics-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div class="cell-output-display">
<table quarto-disable-processing="true" class="table table-condensed table-bordered" style="font-size: 14px; width: auto !important; margin-left: auto; margin-right: auto;">
<caption style="font-size: initial !important;"></caption>
 <thead>
  <tr>
   <th style="text-align:left;"> set </th>
   <th style="text-align:right;"> accuracy </th>
   <th style="text-align:right;"> sensitivity </th>
   <th style="text-align:right;"> specificity </th>
  </tr>
 </thead>
<tbody>
  <tr>
   <td style="text-align:left;"> Train </td>
   <td style="text-align:right;"> 0.76 </td>
   <td style="text-align:right;"> 0.787 </td>
   <td style="text-align:right;"> 0.733 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> Test </td>
   <td style="text-align:right;"> 0.74 </td>
   <td style="text-align:right;"> 0.680 </td>
   <td style="text-align:right;"> 0.800 </td>
  </tr>
</tbody>
</table>

</div>
</div>
</figure>
</div>
</div>
</section>
</section>
<section id="concluding-remarks" class="level2">
<h2 class="anchored" data-anchor-id="concluding-remarks">Concluding remarks</h2>
<p>The performance table above reveals not just how well the model generalizes from training to test data, but also highlights a deeper contrast between traditional <em>statistical inference</em> and <em>machine learning</em> practice. In classical statistics, the choice of a decision threshold — say, a significance level <img src="https://latex.codecogs.com/png.latex?%5Calpha=0.05"> — is often fixed by convention, serving as a gatekeeper for hypothesis testing. In ML, by contrast, the threshold (<img src="https://latex.codecogs.com/png.latex?0.5"> in our case) is not sacred: it can and should be <em>adapted</em> depending on context, cost, and stakeholder priorities.</p>
<p>The ROC curve offers a <em>global view</em> of the model’s discriminative ability across all thresholds, while the confusion matrix and the table of metrics make concrete the implications of a <em>specific threshold</em>. Together, they illustrate that prediction is not just about <em>accuracy</em>. It’s about <em>decisions</em>, <em>trade-offs</em>, and the <em>flexibility to adapt</em> models to real-world needs. And that’s precisely where statistical reasoning and ML begin to meet — not in opposition, but in <em>dialogue</em>.</p>
<p>The tension between theoretical rigor and empirical adaptability will continue to shape the evolving relationship between statistics and ML. In future explorations, we will examine how models behave when ideal conditions break down, and how different strategies — from regularization to robust modeling — attempt to meet the timeless challenge of separating signal from noise.</p>
</section>
<section id="further-reading" class="level2">
<h2 class="anchored" data-anchor-id="further-reading">Further Reading</h2>
<p>If you’d like to dig deeper into the ideas behind inference, prediction, and modern data modeling, here are some recommended readings — ranging from foundational texts to more advanced perspectives:</p>
<p><strong><em>All of Statistics</em></strong> — Larry Wasserman (2004)<br> A concise and mathematically grounded guide to statistical reasoning, ideal for those transitioning into data science.</p>
<p><strong><em>Statistics</em></strong> — Freedman, Pisani, Purves (2007)<br> A clear and accessible introduction to the logic and language of statistics.</p>
<p><strong><em>Applied Predictive Modeling</em></strong> — Kuhn &amp; Johnson (2013)<br> A hands-on resource focused on practical machine learning with a statistical backbone.</p>
<p><strong><em>Deep Learning</em></strong> — Goodfellow, Bengio, Courville (2016)<br> The reference text for deep learning, covering theory and implementation.</p>
<p><strong><em>Computer Age Statistical Inference</em></strong> — Efron &amp; Hastie (2016)<br> A beautifully written journey through the convergence of statistics and algorithmic thinking.</p>


</section>

 ]]></description>
  <category>statistics</category>
  <category>machine learning</category>
  <guid>https://amsabatini.netlify.app/posts/statistics_vs_ML/</guid>
  <pubDate>Sun, 04 May 2025 22:00:00 GMT</pubDate>
  <media:content url="https://amsabatini.netlify.app/posts/statistics_vs_ML/roc-thumb.png" medium="image" type="image/png" height="115" width="144"/>
</item>
<item>
  <title>Supercharge Deep Learning in R with a hybrid R–Colab workflow</title>
  <dc:creator>Angelo Maria Sabatini</dc:creator>
  <link>https://amsabatini.netlify.app/posts/parallel_processing_GPU/</link>
  <description><![CDATA[ 




<p>Exploring deep learning in R with the Keras and tensorflow packages reveals an intuitive and powerful interface. With just a few lines of R code, deep neural networks can be built, trained, and evaluated for tasks such as image recognition, time series forecasting, or natural language processing—all while maintaining the efficiency and flexibility of a tidyverse-powered workflow.</p>
<p>But here’s the catch: training deep learning models on a typical laptop or single-CPU machine can be painfully slow. GPUs are built to handle the massive parallelism required for deep learning, but most R users don’t have one sitting idle in their local setup.</p>
<p>Enter Google Colab—a free, cloud-based environment that provides access to powerful NVIDIA GPUs, without the need for installation or cost. It offers the experience of renting a high-performance machine for deep learning, directly from a browser. For many R users, this opens up a new realm of possibilities, enabling models that would take hours to train on a local machine to run in mere minutes.</p>
<p>But there’s one little twist: Colab speaks Python. The environment is built for the Python ecosystem, especially tools like TensorFlow, PyTorch, and Keras—all in their native Python form.</p>
<p>This doesn’t mean R users are excluded. Instead, it offers an opportunity to combine the strengths of both environments. All data preparation, exploration, and evaluation can be done in R using tools like dplyr, ggplot2, and yardstick, while the deep learning model training can be delegated to Colab. Colab serves as an outsourced training assistant—working seamlessly in Python.</p>
<p>This hybrid approach requires some initial setup, but once established, it becomes smooth, scalable, and remarkably efficient. R can be used for data wrangling, visualization, and model evaluation—leveraging the power of the tidyverse. When it’s time to train the model, the heavy lifting can be offloaded to Colab, with its GPU handling the computations. The two environments—R and Python—communicate through shared files, ensuring a flexible, fast, and efficient workflow.</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Google Colab
</div>
</div>
<div class="callout-body-container callout-body">
<p>Google Colab (short for Colaboratory) is a free, cloud-based platform designed for executing Python code with minimal setup. It provides access to high-performance hardware accelerators, including GPUs and TPUs, making it especially valuable for deep learning tasks that would otherwise be time-consuming on a standard CPU.</p>
<p>Although Colab is Python-native, it can be seamlessly integrated into an R-based workflow. Data preprocessing, visualization, and evaluation can remain in R, while model training is delegated to Colab, leveraging its GPU capabilities. This hybrid approach combines the strengths of both environments—tidyverse-friendly development and accelerated training performance.</p>
</div>
</div>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Connecting Google Colab to Google Drive
</div>
</div>
<div class="callout-body-container callout-body">
<p>Google Colab offers a powerful, cloud-based environment with access to free GPU acceleration. However, Colab notebooks run in a temporary virtual machine, meaning any files saved during a session are lost when the session ends.</p>
<p>To support reproducibility and a hybrid R–Python workflow, it’s essential to connect Colab to Google Drive. This enables persistent storage, shared access to data and model outputs, and smooth integration between Colab and local R projects.</p>
<p>In order to connect the following code is added at the top of the Colab notebook:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> google.colab <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> drive</span>
<span id="cb1-2">drive.mount(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/content/drive'</span>)</span></code></pre></div>
</div>
<p>The user is then prompted to authorize access to her/his Google account. Once mounted, the Drive will be available at:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>content<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>drive<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>MyDrive<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span></span></code></pre></div>
</div>
<p>The user can now read from and write to any project folder shared via Google Drive.</p>
</div>
</div>
<section id="full-mnist-classification-pipeline-in-r" class="level2">
<h2 class="anchored" data-anchor-id="full-mnist-classification-pipeline-in-r">Full MNIST Classification Pipeline in R</h2>
<p>The MNIST (Modified National Institute of Standards and Technology) dataset is a widely used benchmark for testing machine learning algorithms, particularly in the field of deep learning. It consists of 70,000 handwritten digit images, each labeled with the corresponding digit (0-9). The images are 28x28 pixels in grayscale, making them a relatively simple task for modern machine learning models, though still an effective tool for evaluating model performance.</p>
<p>The following R code snippet presents the entire pipeline for the MNIST classification task using Keras for deep learning. This pipeline includes:</p>
<ul>
<li><strong>Data Preparation</strong>: Loading and preprocessing the MNIST dataset, including normalization and reshaping of image data to fit the model.</li>
<li><strong>Model Definition</strong>: Constructing a deep neural network (DNN) using Keras, with layers for dense processing, dropout regularization, and softmax output.</li>
<li><strong>Model Training</strong>: Compiling and fitting the model to the training data, while using a validation split for model evaluation.</li>
<li><strong>Performance Evaluation</strong>: Timing the training process and calculating the overall duration.</li>
<li><strong>Exporting Data</strong>: Saving both the training and test datasets, as well as predictions, for further analysis or use in external systems.</li>
</ul>
<p>The implementation also ensures reproducibility by setting a fixed random seed across the entire workflow, and leverages the tidyverse for data manipulation and visualization, alongside the Keras library for deep learning.</p>
<p>This pipeline provides a streamlined approach to model development, training, and evaluation while integrating seamlessly with Python-based environments (such as Google Colab) for GPU-accelerated training.</p>
<p><strong>Minimal setup</strong></p>
<p>This section outlines the essential libraries for the project and specifies the base directory path at which Google Drive is mounted, enabling file access within both R and Colab-based Python environments.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tensorflow)</span>
<span id="cb3-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(keras)</span>
<span id="cb3-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(reticulate)</span>
<span id="cb3-4"></span>
<span id="cb3-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb3-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(yardstick)</span>
<span id="cb3-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(readr)</span>
<span id="cb3-8"></span>
<span id="cb3-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define Google Drive base path</span></span>
<span id="cb3-10">gdrive_base <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"~/Library/CloudStorage/GoogleDrive-&lt;your-mail&gt;@gmail.com/My Drive/&lt;your-project-folder&gt;"</span></span></code></pre></div>
</details>
</div>
<p><strong>Load and preprocess the MNIST dataset</strong></p>
<p>The dataset is reshaped to match the input requirements of a fully connected (dense) neural network architecture. Additionally, class labels are one-hot encoded to facilitate categorical classification during model training.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">mnist <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dataset_mnist</span>()</span>
<span id="cb4-2"></span>
<span id="cb4-3">x_train <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> mnist<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>train<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>x <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span></span>
<span id="cb4-4">x_test  <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> mnist<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>test<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>x <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span></span>
<span id="cb4-5">y_train <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> mnist<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>train<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>y</span>
<span id="cb4-6">y_test  <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> mnist<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>test<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>y</span>
<span id="cb4-7"></span>
<span id="cb4-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Reshape for dense model (flatten 28x28 images)</span></span>
<span id="cb4-9">x_train <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">array_reshape</span>(x_train, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(x_train), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">784</span>))</span>
<span id="cb4-10">x_test  <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">array_reshape</span>(x_test, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(x_test), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">784</span>))</span>
<span id="cb4-11"></span>
<span id="cb4-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># One-hot encode labels</span></span>
<span id="cb4-13">y_train_cat <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">to_categorical</span>(y_train, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span>
<span id="cb4-14">y_test_cat  <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">to_categorical</span>(y_test, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span></code></pre></div>
</details>
</div>
<p><strong>Define model</strong></p>
<p>The model is defined using the Keras API as a sequential architecture composed of fully connected layers. Following its construction, the model is compiled by specifying the loss function, optimization algorithm, and evaluation metrics, thereby preparing it for training.</p>
<p>Dropout is used to help the model generalize better and avoid overfitting. During training, it randomly turns off a portion of the neurons in the network. This forces the model to learn more robust features instead of relying too heavily on any one part of the network.</p>
<p><code>tf$keras$optimizers$legacy$Adam()</code> is used to maintain the original behavior of the Adam optimizer, which can be especially valuable on M1/M2 MacBook architectures where newer versions might encounter compatibility issues. Newer versions changed how optimizers work, so the legacy version ensures compatibility with older code and stable training results.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">model <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">keras_model_sequential</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb5-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">layer_dense</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">units =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">activation =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"relu"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">input_shape =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">784</span>),</span>
<span id="cb5-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">layer_dropout</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">rate =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4</span>),</span>
<span id="cb5-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">layer_dense</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">units =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">activation =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"relu"</span>),</span>
<span id="cb5-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">layer_dropout</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">rate =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>),</span>
<span id="cb5-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">layer_dense</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">units =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">activation =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"softmax"</span>)</span>
<span id="cb5-7">))</span>
<span id="cb5-8"></span>
<span id="cb5-9">model <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">compile</span>(</span>
<span id="cb5-10">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">loss =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"categorical_crossentropy"</span>,</span>
<span id="cb5-11">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">optimizer =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"adam"</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#tf$keras$optimizers$legacy$Adam(),</span></span>
<span id="cb5-12">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">metrics =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"accuracy"</span></span>
<span id="cb5-13">)</span></code></pre></div>
</details>
</div>
<p><strong>Training and time the training</strong></p>
<p>Setting a seed ensures reproducibility of training results, while timing the training process helps assess the efficiency of the model’s learning and optimization.</p>
<p>The validation split refers to the portion of the training data set aside during training to evaluate model performance on unseen data, helping to detect overfitting (and tune hyperparameters, though not considered in this post).</p>
<p>The number of epochs is set to 10. For the purposes of this post, I will not address whether the training process adequately accounts for the issue of overfitting and generalization.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set seed for reproducibility across R, TensorFlow, NumPy</span></span>
<span id="cb6-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">123</span>)</span>
<span id="cb6-3">tensorflow<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set_random_seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">123</span>)</span>
<span id="cb6-4"></span>
<span id="cb6-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Time the training</span></span>
<span id="cb6-6">start_time <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Sys.time</span>()</span>
<span id="cb6-7"></span>
<span id="cb6-8">model <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fit</span>(</span>
<span id="cb6-9">  x_train, y_train_cat,</span>
<span id="cb6-10">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">epochs =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>,</span>
<span id="cb6-11">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">batch_size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">256</span>,</span>
<span id="cb6-12">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">validation_split =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>,</span>
<span id="cb6-13">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">verbose =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span></span>
<span id="cb6-14">)</span>
<span id="cb6-15"></span>
<span id="cb6-16">end_time <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Sys.time</span>()</span>
<span id="cb6-17"></span>
<span id="cb6-18">duration <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>()</span>
<span id="cb6-19">x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> end_time<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>start_time</span>
<span id="cb6-20">duration[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">regmatches</span>(x,<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">regexpr</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">d*</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.?</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">d+"</span>,x)))</span></code></pre></div>
</details>
</div>
<p><strong>Export training and testing sets to Drive</strong></p>
<p>The training and testing sets saved to Drive will be used later in a Colab notebook for GPU-based training of the same model defined in Keras above.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert data to data frames with labels</span></span>
<span id="cb7-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(x_train) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pixel_"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq_len</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ncol</span>(x_train)))</span>
<span id="cb7-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(x_test)  <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pixel_"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq_len</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ncol</span>(x_test)))</span>
<span id="cb7-4"></span>
<span id="cb7-5">train_df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as_tibble</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cbind</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> y_train, x_train))</span>
<span id="cb7-6">test_df  <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as_tibble</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cbind</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> y_test, x_test))</span>
<span id="cb7-7"></span>
<span id="cb7-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">write_csv</span>(train_df, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.path</span>(gdrive_base, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mnist_train.csv"</span>))</span>
<span id="cb7-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">write_csv</span>(test_df, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.path</span>(gdrive_base, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mnist_test.csv"</span>))</span></code></pre></div>
</details>
</div>
<p><strong>Predict in R and export</strong></p>
<p>After making predictions in R, we can export the results and visualize the confusion matrix to evaluate the model’s performance. We also compute and export the accuracy, along with the training time, to track the model’s efficiency.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Only needed if you want to compare R vs Colab predictions.</span></span>
<span id="cb8-2"></span>
<span id="cb8-3">preds_r <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> model <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(x_test, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">verbose =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">k_argmax</span>()</span>
<span id="cb8-4">preds_df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(</span>
<span id="cb8-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">actual =</span> y_test,</span>
<span id="cb8-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">predicted =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.array</span>(preds_r)</span>
<span id="cb8-7">)</span>
<span id="cb8-8"></span>
<span id="cb8-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert to factors</span></span>
<span id="cb8-10">preds_df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> preds_df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb8-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb8-12">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">actual =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(actual),</span>
<span id="cb8-13">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">predicted =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(predicted, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">levels =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">levels</span>(actual))</span>
<span id="cb8-14">  )</span>
<span id="cb8-15"></span>
<span id="cb8-16">acc <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>()</span>
<span id="cb8-17">acc[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">accuracy</span>(preds_df, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">truth =</span> actual, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">estimate =</span> predicted)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>.estimate</span>
<span id="cb8-18"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">conf_mat</span>(preds_df, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">truth =</span> actual, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">estimate =</span> predicted) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb8-19">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">autoplot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"heatmap"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-20">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggtitle</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"R-based DNN confusion matrix for the MNIST dataset"</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://amsabatini.netlify.app/posts/parallel_processing_GPU/index_files/figure-html/unnamed-chunk-13-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">write_csv</span>(preds_df, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.path</span>(gdrive_base, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"predictions_r.csv"</span>))</span></code></pre></div>
</details>
</div>
<p><strong>(Later) Compare with Colab predictions</strong></p>
<p>The predictions made in R can be compared with those generated in Colab to assess the consistency and performance of the model across different environments.</p>
<ol type="1">
<li>Open the notebook in <a href="colab.research.google.com">Google Colab</a>.</li>
<li>At the top menu bar, click “Runtime”</li>
<li>Select “Change runtime type”</li>
<li>In the “Hardware accelerator” dropdown menu, choose:</li>
</ol>
<ul>
<li>GPU to enable GPU support</li>
<li>TPU if you want to experiment with TPU acceleration (more advanced)</li>
<li>None to use CPU only</li>
</ul>
<ol start="5" type="1">
<li>Click “Save”</li>
<li>Colab will restart the kernel and launch an environment with the selected hardware.</li>
</ol>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># After Colab finishes and saves 'predictions_colab.csv':</span></span>
<span id="cb10-2">preds_colab <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_csv</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.path</span>(gdrive_base, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"predictions_colab.csv"</span>))</span>
<span id="cb10-3"></span>
<span id="cb10-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert to factors</span></span>
<span id="cb10-5">preds_colab <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> preds_colab <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb10-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb10-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">actual =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(actual),</span>
<span id="cb10-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">predicted =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(predicted, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">levels =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">levels</span>(actual))</span>
<span id="cb10-9">  )</span>
<span id="cb10-10"></span>
<span id="cb10-11">acc[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">accuracy</span>(preds_colab, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">truth =</span> actual, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">estimate =</span> predicted)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>.estimate</span>
<span id="cb10-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">conf_mat</span>(preds_colab, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">truth =</span> actual, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">estimate =</span> predicted) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb10-13">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">autoplot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"heatmap"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb10-14">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggtitle</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Python-based DNN confusion matrix for the MNIST dataset"</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://amsabatini.netlify.app/posts/parallel_processing_GPU/index_files/figure-html/unnamed-chunk-16-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Optionally print Colab training time (if saved)</span></span>
<span id="cb11-2">duration[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_lines</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.path</span>(gdrive_base, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"colab_duration.txt"</span>))</span></code></pre></div>
</details>
</div>
<p><strong>Comparative analysis</strong></p>
<p>After running the model for 10 epochs—with all other elements of the pipeline held constant—I repeated the classification task using the DNN trained for 50 and 100 epochs. The results, in terms of accuracy and training time, are presented in the table below. Although not strictly necessary — or even correct — I used three decimal places to highlight subtle differences in accuracy observed in the experiments. Moreover, I chose to round the training time to the nearest integer.</p>
<div class="cell">
<div class="cell-output-display">
<table quarto-disable-processing="true" class="table table-condensed table-bordered" style="font-size: 16px; width: auto !important; margin-left: auto; margin-right: auto;">
<caption style="font-size: initial !important;">Comparative analysis</caption>
 <thead>
  <tr>
   <th style="text-align:left;"> Method </th>
   <th style="text-align:right;"> Epoch </th>
   <th style="text-align:right;"> Accuracy, % </th>
   <th style="text-align:right;"> Time, s </th>
  </tr>
 </thead>
<tbody>
  <tr>
   <td style="text-align:left;"> R-based </td>
   <td style="text-align:right;"> 10 </td>
   <td style="text-align:right;"> 0.972 </td>
   <td style="text-align:right;"> 5 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> R-based </td>
   <td style="text-align:right;"> 50 </td>
   <td style="text-align:right;"> 0.977 </td>
   <td style="text-align:right;"> 26 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> R-based </td>
   <td style="text-align:right;"> 100 </td>
   <td style="text-align:right;"> 0.979 </td>
   <td style="text-align:right;"> 54 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> Python-based </td>
   <td style="text-align:right;"> 10 </td>
   <td style="text-align:right;"> 0.974 </td>
   <td style="text-align:right;"> 33 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> Python-based </td>
   <td style="text-align:right;"> 50 </td>
   <td style="text-align:right;"> 0.979 </td>
   <td style="text-align:right;"> 72 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> Python-based </td>
   <td style="text-align:right;"> 100 </td>
   <td style="text-align:right;"> 0.979 </td>
   <td style="text-align:right;"> 128 </td>
  </tr>
</tbody>
</table>

</div>
</div>
<p>Even with matching seeds, data splits, architectures, and all the same training settings in R and Python, small differences in accuracy still appeared (compare the confusion matrices above). These are likely due to subtle differences in weight initialization, batch shuffling, and dropout masking between the two frameworks. Such variations are common in deep learning and typically don’t affect overall performance trends.</p>
<p><strong>Why MacBook CPUs (M1/M2) can beat Colab GPUs for MNIST</strong></p>
<ul>
<li><p><em>Model + Dataset are too small for GPU to shine</em>: MNIST has only 60,000 grayscale 28×28 images, and the DNN models used here have a relatively limited number of parameters to learn (109386). With only 100k parameters, each training step is very fast on modern CPUs and the overhead of using a GPU — loading the data, launching kernels, moving data around — starts to outweigh the benefits of parallelism.</p></li>
<li><p><em>Apple Silicon (M1/M2) is extremely optimized</em>: M1/M2 chips have Unified Memory (RAM + GPU share memory), fast memory access, and dedicated matrix multiplication engines (AMX). TensorFlow and PyTorch now have native Metal backends or use Accelerate.framework under the hood on macOS, enabling them to be blazingly fast even without explicit GPU use.</p></li>
<li><p><em>Colab GPUs aren’t top-tier GPUs</em>: Colab’s free tier provides K80 or T4 GPUs, which are relatively old or mid-tier and often shared among users. Their performance can fluctuate depending on server load, whereas a MacBook runs everything locally without such interruptions.</p></li>
<li><p><em>Overhead on the GPU pipeline</em>: the GPU has to load the data, transfer it to GPU memory, perform the computation, and then transfer the results back. This overhead adds latency unless the batch size and model complexity are large enough to justify the transfer.</p></li>
</ul>
</section>
<section id="mnist-classification-training-in-python" class="level2">
<h2 class="anchored" data-anchor-id="mnist-classification-training-in-python">MNIST Classification Training in Python</h2>
<p>In the snippet below, I present an example of a *.ipynb notebook that facilitates the sharing of input and output files with a local R project via a Google Drive synced folder.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Mount Google Drive</span></span>
<span id="cb12-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> google.colab <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> drive</span>
<span id="cb12-3">drive.mount(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/content/drive'</span>)</span>
<span id="cb12-4"></span>
<span id="cb12-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Imports</span></span>
<span id="cb12-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb12-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb12-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> tensorflow <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> tf</span>
<span id="cb12-9"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tensorflow <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> keras</span>
<span id="cb12-10"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tensorflow.keras.models <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Sequential</span>
<span id="cb12-11"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tensorflow.keras.layers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Dense, Dropout</span>
<span id="cb12-12"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tensorflow.keras.utils <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> to_categorical</span>
<span id="cb12-13"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.metrics <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> accuracy_score, confusion_matrix</span>
<span id="cb12-14"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> time</span>
<span id="cb12-15"></span>
<span id="cb12-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set seed</span></span>
<span id="cb12-17">np.random.seed(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">123</span>)</span>
<span id="cb12-18">tf.random.set_seed(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">123</span>)</span>
<span id="cb12-19"></span>
<span id="cb12-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load training and testing data from Drive</span></span>
<span id="cb12-21">gdrive_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/content/drive/MyDrive/parallel_processing_colab/data"</span></span>
<span id="cb12-22">train_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>gdrive_path<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/mnist_train.csv"</span>)</span>
<span id="cb12-23">test_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>gdrive_path<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/mnist_test.csv"</span>)</span>
<span id="cb12-24"></span>
<span id="cb12-25">x_train <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> train_df.drop(columns <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"label"</span>]).values.astype(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"float32"</span>)</span>
<span id="cb12-26">y_train <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> to_categorical(train_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"label"</span>].values, num_classes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span>
<span id="cb12-27"></span>
<span id="cb12-28">x_test <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> test_df.drop(columns <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"label"</span>]).values.astype(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"float32"</span>)</span>
<span id="cb12-29">y_test <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> test_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"label"</span>].values</span>
<span id="cb12-30"></span>
<span id="cb12-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define the same model as in R</span></span>
<span id="cb12-32">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Sequential([</span>
<span id="cb12-33">    Dense(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span>, activation <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'relu'</span>, input_shape <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">784</span>, )),</span>
<span id="cb12-34">    Dropout(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4</span>),</span>
<span id="cb12-35">    Dense(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span>, activation <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'relu'</span>),</span>
<span id="cb12-36">    Dropout(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>),</span>
<span id="cb12-37">    Dense(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, activation <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'softmax'</span>)</span>
<span id="cb12-38">])</span>
<span id="cb12-39"></span>
<span id="cb12-40">model.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">compile</span>(</span>
<span id="cb12-41">    loss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'categorical_crossentropy'</span>,</span>
<span id="cb12-42">    optimizer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"adam"</span>,</span>
<span id="cb12-43">    metrics <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'accuracy'</span>]</span>
<span id="cb12-44">)</span>
<span id="cb12-45"></span>
<span id="cb12-46"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Time the training</span></span>
<span id="cb12-47">start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> time.time()</span>
<span id="cb12-48"></span>
<span id="cb12-49">model.fit(</span>
<span id="cb12-50">    x_train, y_train,</span>
<span id="cb12-51">    epochs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>,</span>
<span id="cb12-52">    batch_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span>,</span>
<span id="cb12-53">    validation_split <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>,</span>
<span id="cb12-54">    verbose <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb12-55">)</span>
<span id="cb12-56"></span>
<span id="cb12-57">end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> time.time()</span>
<span id="cb12-58">duration <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> start</span>
<span id="cb12-59"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Training time (seconds):"</span>, duration)</span>
<span id="cb12-60"></span>
<span id="cb12-61"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Save Colab training time to Google Drive</span></span>
<span id="cb12-62"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/content/drive/MyDrive/parallel_processing_colab/data/colab_duration.txt'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'w'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb12-63">    f.write(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(duration))</span>
<span id="cb12-64">    </span>
<span id="cb12-65"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Predict on test set and export predictions</span></span>
<span id="cb12-66">preds <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.predict(x_test)</span>
<span id="cb12-67">pred_labels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.argmax(preds, axis <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb12-68"></span>
<span id="cb12-69"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Save predictions to Drive</span></span>
<span id="cb12-70">preds_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame({</span>
<span id="cb12-71">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"actual"</span>: y_test,</span>
<span id="cb12-72">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"predicted"</span>: pred_labels</span>
<span id="cb12-73">})</span>
<span id="cb12-74">preds_df.to_csv(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>gdrive_path<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/predictions_colab.csv"</span>, index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb12-75"></span>
<span id="cb12-76"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Evaluate metrics (optional here)</span></span>
<span id="cb12-77"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Accuracy:"</span>, accuracy_score(y_test, pred_labels))</span>
<span id="cb12-78"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Confusion matrix:</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, confusion_matrix(y_test, pred_labels))</span></code></pre></div>
</details>
</div>
</section>
<section id="summary" class="level2">
<h2 class="anchored" data-anchor-id="summary">Summary</h2>
<p>When working with deep learning tasks, timing considerations between R and Python (especially in Colab) can significantly impact performance.</p>
<ol type="1">
<li><em>Hardware acceleration</em></li>
</ol>
<ul>
<li>R: limited GPU support unless utilizing packages like tensorflow, often relying on the CPU for training, leading to longer processing times for complex models.</li>
<li>Python (Colab): seamless GPU support accelerates training dramatically, reducing training times from hours to minutes.</li>
</ul>
<ol start="2" type="1">
<li><em>Execution times</em></li>
</ol>
<ul>
<li>R: training on a CPU can be slow for deep learning tasks. Execution time can be measured using system.time().</li>
<li>Python (Colab): with GPU enabled, training times are drastically reduced. Timing can be monitored using Python’s time module.</li>
</ul>
<ol start="3" type="1">
<li><em>Colab overheads</em></li>
</ol>
<ul>
<li>Initialization time: setting up Colab (mounting Drive, loading data, GPU setup) adds some overhead, especially when starting a new session.</li>
<li>Session limitations: free GPU access has time limits and potential disconnects, requiring reinitialization.</li>
<li>File access delays: reading and writing to Google Drive in Colab can slow down the workflow compared to local file systems.</li>
<li>Cold start for GPU: initializing GPU resources adds delay when starting a session.</li>
</ul>
<ol start="4" type="1">
<li><p><em>Hybrid workflow</em>: a hybrid R-Python workflow maximizes the strengths of both ecosystems. R handles data preprocessing, feature engineering, evaluation, and visualization, while Python in Colab handles heavy-duty model training with GPU support. This combination offers a flexible and efficient solution, especially for large models and datasets.</p></li>
<li><p><em>Total execution time</em>: while Colab’s GPU accelerates training, overheads like initialization and session limitations can add to the overall time. For simpler models or smaller datasets, running everything locally may be more efficient, but for larger models, the speedup from Colab’s GPU outweighs the overheads.</p></li>
</ol>
<p>What I’ve shown here is how to leverage Colab’s GPU support for deep learning while staying within the comfort of R, taking full advantage of the tidyverse ecosystem for analysis and visualization. In a future post, I’ll circle back to this topic—probably with a hands-on example using LSTM for time series forecasting, where Colab’s GPU support will really get a chance to shine compared to single-CPU runs.</p>
<blockquote class="blockquote">
<p>In summary, the hybrid R + Python approach offers a balance of computational power (via Colab’s GPUs) and flexibility (using R for preprocessing and evaluation), though the Colab overheads should be considered when designing the workflow.</p>
</blockquote>
<p><a href="https://www.flaticon.com/free-icons/parallel" title="parallel icons">Parallel icons created by juicy_fish - Flaticon</a></p>


</section>

 ]]></description>
  <category>machine learning</category>
  <guid>https://amsabatini.netlify.app/posts/parallel_processing_GPU/</guid>
  <pubDate>Tue, 22 Apr 2025 22:00:00 GMT</pubDate>
  <media:content url="https://amsabatini.netlify.app/posts/parallel_processing_GPU/processing.png" medium="image" type="image/png" height="144" width="144"/>
</item>
<item>
  <title>Unleashing the power of Apple Silicon for R: Parallel processing on M1/M2</title>
  <dc:creator>Angelo Maria Sabatini</dc:creator>
  <link>https://amsabatini.netlify.app/posts/parallel_processing/</link>
  <description><![CDATA[ 




<p>Parallel computation is a big deal in machine learning (ML), especially when working with large datasets, complex models (like deep neural networks), or intensive tasks like hyperparameter tuning. Parallel computation refers to executing multiple calculations or processes simultaneously.</p>
<p>In ML, this helps speed up training and inference by utilizing multiple processing units (CPU cores, GPUs, TPUs, clusters). For my (small) projects in ML, I run everything on a single-CPU machine, an M2 MacBook Air, and write my code in R. Calculations can be excruciatingly slow; however, many tasks are also considered <em>embarrassingly parallel</em>. For example, models created during resampling are independent of each other and can be fit simultaneously without issue. Right now I’m running everything sequentially, but I want to switch to parallel processing to speed things up. In this post, I will review popular methods that are available in R <em>to go parallel</em> with MacBooks equipped with M1 and M2 chips.</p>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Apple M1 and M2 Macs: A quick overview
</div>
</div>
<div class="callout-body-container callout-body">
<p>Apple’s M1 and M2 chips are custom-designed ARM-based processors that mark Apple’s move away from Intel. These chips power Macs and iPads, offering significant boosts in performance and efficiency.</p>
<p>M1 Chip (2020):</p>
<ul>
<li>First Apple Silicon chip.</li>
<li>5nm process, 8-core CPU (4 performance + 4 efficiency), up to 8-core GPU.</li>
<li>Unified memory architecture (up to 16 GB).</li>
<li>High performance per watt; fanless in MacBook Air.</li>
<li>Found in MacBook Air, MacBook Pro 13”, Mac Mini, and iMac 24”.</li>
</ul>
<p>M2 Chip (2022):</p>
<ul>
<li>Second-generation chip.</li>
<li>Improved 5nm design, up to 18% faster CPU and 35% faster GPU than M1.</li>
<li>Supports up to 24 GB of unified memory.</li>
<li>Enhanced media engine and ProRes acceleration.</li>
<li>Used in updated MacBook Air, MacBook Pro 13”, and newer Macs.</li>
</ul>
</div>
</div>
<p>For computations conducted on a single computer, the number of possible worker processes is determined by the parallel package:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The number of physical cores in the hardware:</span></span>
<span id="cb1-2">parallel<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">detectCores</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">logical =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The number of possible independent processes that can </span></span>
<span id="cb1-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># be simultaneously used:  </span></span>
<span id="cb1-6">parallel<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">detectCores</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">logical =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span></code></pre></div>
</div>
<p>My MacBook Air has:</p>
<ul>
<li>4 Performance Cores (P-cores)</li>
<li>4 Efficiency Cores (E-cores)</li>
</ul>
<p>When training models, especially with resampling (like cross-validation, bootstrapping), I want consistency and high throughput, which is best achieved on the performance cores. So:</p>
<ul>
<li>Choosing 4 cores ensures only the P-cores are used</li>
<li>Avoids overloading the system, leaving E-cores and other system resources free for background tasks or RStudio</li>
</ul>
<p>Using all 8 logical cores (4P + 4E) can lead to inconsistent performance, because efficiency cores are slower and not ideal for heavy computational tasks.</p>
<section id="overview" class="level2">
<h2 class="anchored" data-anchor-id="overview">Overview</h2>
<p>R supports three popular parallel processing methods that work well on M1/M2 MacBooks. Programming hints on how to set up/activate and deactivate/reset each of the three methods are provided in the table below.</p>
<table class="caption-top table">
<colgroup>
<col style="width: 33%">
<col style="width: 33%">
<col style="width: 33%">
</colgroup>
<thead>
<tr class="header">
<th><strong>Method</strong></th>
<th><strong>Setup / Activate</strong></th>
<th><strong>Deactivate / Reset</strong></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><strong>doParallel</strong></td>
<td><code>library(doParallel)</code> <br> <code>cl &lt;- makeCluster(4)</code> <br> <code>registerDoParallel(cl)</code></td>
<td><code>stopCluster(cl)</code></td>
</tr>
<tr class="even">
<td><strong>doMC</strong></td>
<td><code>library(doMC)</code> <br> <code>registerDoMC(cores = 4)</code></td>
<td><code>registerDoSEQ()</code></td>
</tr>
<tr class="odd">
<td><strong>furrr + future</strong></td>
<td><code>library(furrr)</code> <br> <code>library(future)</code> <br> <code>plan(multisession, workers = 4)</code></td>
<td><code>plan(sequential)</code></td>
</tr>
</tbody>
</table>
<p>The table below summarizes the key pros and cons of each method.</p>
<table class="caption-top table">
<colgroup>
<col style="width: 33%">
<col style="width: 33%">
<col style="width: 33%">
</colgroup>
<thead>
<tr class="header">
<th><strong>Method</strong></th>
<th><strong>Pros</strong></th>
<th><strong>Cons</strong></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><strong>doParallel</strong></td>
<td>✅ Cross-platform (Mac/Linux/Windows) <br> ✅ Works with <code>foreach</code>, <code>caret</code>, <code>tidymodels</code></td>
<td>❌ Verbose setup <br> ❌ Full R sessions increase memory</td>
</tr>
<tr class="even">
<td><strong>doMC</strong></td>
<td>✅ Simple &amp; fast on macOS <br> ✅ Lightweight (uses forked processes)</td>
<td>❌ Not Windows-compatible <br> ❌ Not safe for GUI/Shiny apps</td>
</tr>
<tr class="odd">
<td><strong>furrr + future</strong></td>
<td>✅ Clean tidyverse integration <br> ✅ Works with <code>future_map()</code> <br> ✅ Scales to cloud</td>
<td>❌ More overhead <br> ❌ Full R sessions</td>
</tr>
</tbody>
</table>
<div id="exm-exm1" class="theorem example">
<p><span class="theorem-title"><strong>Example 1 (The Ames housing dataset)</strong></span> The Ames housing dataset is a well-known real estate dataset used for regression modeling, especially as an improved alternative to the Boston Housing dataset. It contains detailed information about residential homes in Ames, Iowa, sold between 2006 and 2010 (<a href="https://www.tmwr.org">here</a>).</p>
<p>Here’s a clean and minimal setup to load the essential libraries for working with the Ames Housing dataset using a tidymodels regression workflow.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Data handling and wrangling</span></span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb2-3"></span>
<span id="cb2-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># For the Ames Housing dataset</span></span>
<span id="cb2-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(modeldata)</span>
<span id="cb2-6"></span>
<span id="cb2-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Modeling and resampling</span></span>
<span id="cb2-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidymodels)</span>
<span id="cb2-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tidymodels_prefer</span>()</span></code></pre></div>
</details>
</div>
<p>The dataset can be loaded easily in R using the modeldata package.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data</span>(ames, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">package =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"modeldata"</span>)</span>
<span id="cb3-2">ames <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> ames <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Sale_Price =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log10</span>(Sale_Price))</span></code></pre></div>
</details>
</div>
<p>Suppose a regression model is to be fit to the pre-logged sale prices (Sale_Price). In this post, we will focus on a small subset of the predictors available in the Ames housing dataset:</p>
<ul>
<li>The neighborhood-(qualitative): physical locations within Ames city limits</li>
<li>The gross above-grade-living area-(continuous): the standard measure for determining the amount of space in residential properties)</li>
<li>The year built (Year_Built)-(discrete): original construction date</li>
<li>The type of building (Bldg_Type)-(nominal): type of dwelling</li>
</ul>
<p>I set up my regression modeling using tidymodels, including:</p>
<ul>
<li>Data splitting</li>
<li>Recipe for preprocessing</li>
<li>Model specification</li>
<li>Workflow combining recipe + model</li>
</ul>
<p>My workflow fits together with v-fold cross-validation in the tidymodels framework. Using the <code>strata = Sale_Price</code> argument in <code>initial_split()</code> or <code>vfold_cv()</code>, I use stratified sampling, which helps ensure that the distribution of the response variable (<code>Sale_Price</code>) remains balanced across splits.</p>
<p>The recipe defines the preprocessing steps applied to the dataset before modeling, via <code>step_*()</code> functions without immediately executing them; it is only a specification of what should be done.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">502</span>)</span>
<span id="cb4-2">ames_split <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">initial_split</span>(ames, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prop =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.80</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">strata =</span> Sale_Price) </span>
<span id="cb4-3">ames_train <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">training</span>(ames_split)</span>
<span id="cb4-4">ames_test  <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">testing</span>(ames_split)</span>
<span id="cb4-5"></span>
<span id="cb4-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1004</span>)</span>
<span id="cb4-7">ames_folds <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">vfold_cv</span>(ames_train, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">v =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">strata =</span> Sale_Price) </span>
<span id="cb4-8"></span>
<span id="cb4-9">ames_rec <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb4-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">recipe</span>(Sale_Price <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> Neighborhood <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> Gr_Liv_Area <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> Year_Built <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> Bldg_Type,</span>
<span id="cb4-11">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> ames_train) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb4-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">step_log</span>(Gr_Liv_Area, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">base =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb4-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">step_dummy</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">all_nominal_predictors</span>())</span></code></pre></div>
</details>
</div>
<p>I fit a random forest model to the training set using the ranger engine, which uses the ranger package for fast computation. Random forests are very powerful — they can learn complex patterns in the data with high accuracy. One big advantage is that they don’t need much preprocessing, so they’re easy to use. The tradeoff is that they can be slower to train, especially on large datasets.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">rf_model <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rand_forest</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">trees =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb5-2">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set_engine</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ranger"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb5-3">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set_mode</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"regression"</span>)</span>
<span id="cb5-4"></span>
<span id="cb5-5">rf_wflow <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">workflow</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb5-6">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">add_recipe</span>(ames_rec) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb5-7">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">add_model</span>(rf_model)</span></code></pre></div>
</details>
</div>
<p>The <code>control_resamples()</code> function is used to customize how results are saved during cross-validation. <code>save_pred = TRUE</code> saves the predictions from each fold, so we can analyze or plot them later; <code>save_workflow = TRUE</code> saves the workflow used in each fold, which is helpful if we want to inspect the model or preprocessing steps afterward.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">keep_pred <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">control_resamples</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">save_pred =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">save_workflow =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span></code></pre></div>
</details>
</div>
<p><strong>Sequential approach</strong></p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1003</span>) </span>
<span id="cb7-2"></span>
<span id="cb7-3">start_time <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Sys.time</span>() </span>
<span id="cb7-4"></span>
<span id="cb7-5">rf_res <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> rf_wflow <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb7-6">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fit_resamples</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">resamples =</span> ames_folds, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">control =</span> keep_pred) </span>
<span id="cb7-7"></span>
<span id="cb7-8">end_time <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Sys.time</span>() </span>
<span id="cb7-9"></span>
<span id="cb7-10">metrics <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">collect_metrics</span>(rf_res) </span>
<span id="cb7-11">performance <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>()</span>
<span id="cb7-12">performance[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> metrics <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb7-13">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(.metric <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rmse"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rsq"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb7-14">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pull</span>(mean)</span>
<span id="cb7-15"></span>
<span id="cb7-16">duration <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>()</span>
<span id="cb7-17">x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> end_time<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>start_time</span>
<span id="cb7-18">duration[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">regmatches</span>(x,<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">regexpr</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">d*</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.?</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">d+"</span>,x)))</span></code></pre></div>
</details>
</div>
<p><strong>Approach using doParallel</strong></p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(doParallel) </span>
<span id="cb8-2"></span>
<span id="cb8-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1003</span>) </span>
<span id="cb8-4"></span>
<span id="cb8-5">cl <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">makeCluster</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>) </span>
<span id="cb8-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">registerDoParallel</span>(cl) </span>
<span id="cb8-7"></span>
<span id="cb8-8">start_time <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Sys.time</span>() </span>
<span id="cb8-9">rf_res <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> rf_wflow <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb8-10">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fit_resamples</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">resamples =</span> ames_folds, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">control =</span> keep_pred) </span>
<span id="cb8-11">end_time <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Sys.time</span>()</span>
<span id="cb8-12"></span>
<span id="cb8-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stopCluster</span>(cl)</span>
<span id="cb8-14"></span>
<span id="cb8-15">metrics <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">collect_metrics</span>(rf_res)  </span>
<span id="cb8-16">performance[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> metrics <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb8-17">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(.metric <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rmse"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rsq"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb8-18">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pull</span>(mean)</span>
<span id="cb8-19"></span>
<span id="cb8-20">x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> end_time <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> start_time</span>
<span id="cb8-21">duration[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">regmatches</span>(x,<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">regexpr</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">d*</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.?</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">d+"</span>,x)))</span></code></pre></div>
</details>
</div>
<p><strong>Approach using doMC</strong></p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1003</span>) </span>
<span id="cb9-2"></span>
<span id="cb9-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(doMC) </span>
<span id="cb9-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">registerDoMC</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cores =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>) </span>
<span id="cb9-5"></span>
<span id="cb9-6">start_time <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Sys.time</span>() </span>
<span id="cb9-7"></span>
<span id="cb9-8">rf_res <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> rf_wflow <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb9-9">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fit_resamples</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">resamples =</span> ames_folds, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">control =</span> keep_pred) </span>
<span id="cb9-10"></span>
<span id="cb9-11">end_time <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Sys.time</span>()</span>
<span id="cb9-12"></span>
<span id="cb9-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">registerDoSEQ</span>()</span>
<span id="cb9-14"></span>
<span id="cb9-15">metrics <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">collect_metrics</span>(rf_res)  </span>
<span id="cb9-16">performance[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> metrics <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb9-17">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(.metric <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rmse"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rsq"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb9-18">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pull</span>(mean)</span>
<span id="cb9-19"></span>
<span id="cb9-20">x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> end_time <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> start_time</span>
<span id="cb9-21">duration[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">regmatches</span>(x,<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">regexpr</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">d*</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.?</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">d+"</span>,x)))</span></code></pre></div>
</details>
</div>
<p><strong>Approach using furrr + future</strong></p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(furrr) </span>
<span id="cb10-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(future) </span>
<span id="cb10-3"></span>
<span id="cb10-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1003</span>) </span>
<span id="cb10-5"></span>
<span id="cb10-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plan</span>(multisession, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">workers =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>) </span>
<span id="cb10-7"></span>
<span id="cb10-8">start_time <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Sys.time</span>() </span>
<span id="cb10-9"></span>
<span id="cb10-10">rf_res <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> rf_wflow <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb10-11">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fit_resamples</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">resamples =</span> ames_folds, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">control =</span> keep_pred) </span>
<span id="cb10-12"></span>
<span id="cb10-13">end_time <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Sys.time</span>()</span>
<span id="cb10-14"></span>
<span id="cb10-15"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plan</span>(sequential)</span>
<span id="cb10-16"></span>
<span id="cb10-17">metrics <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">collect_metrics</span>(rf_res)  </span>
<span id="cb10-18">performance[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> metrics <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb10-19">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(.metric <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rmse"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rsq"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb10-20">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pull</span>(mean)</span>
<span id="cb10-21"></span>
<span id="cb10-22">x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> end_time <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> start_time</span>
<span id="cb10-23">duration[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">regmatches</span>(x,<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">regexpr</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">d*</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.?</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">d+"</span>,x)))</span></code></pre></div>
</details>
</div>
<p><strong>Comparative analysis</strong></p>
<p>Training time (in seconds) for each method is shown below.</p>
<div class="cell">
<div class="cell-output-display">
<table quarto-disable-processing="true" class="table table-condensed table-bordered" style="font-size: 16px; width: auto !important; margin-left: auto; margin-right: auto;">
<caption style="font-size: initial !important;">Timing results</caption>
 <thead>
  <tr>
   <th style="text-align:left;"> Method </th>
   <th style="text-align:right;"> Time, s </th>
  </tr>
 </thead>
<tbody>
  <tr>
   <td style="text-align:left;"> doMC </td>
   <td style="text-align:right;"> 6.06 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> doParallel </td>
   <td style="text-align:right;"> 7.94 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> purrr + future </td>
   <td style="text-align:right;"> 10.26 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> sequential </td>
   <td style="text-align:right;"> 13.34 </td>
  </tr>
</tbody>
</table>

</div>
</div>
</div>
</section>
<section id="recommended-core-use-on-m1m2-macs" class="level2">
<h2 class="anchored" data-anchor-id="recommended-core-use-on-m1m2-macs">Recommended core use on M1/M2 Macs</h2>
<blockquote class="blockquote">
<p>Use <strong>4 cores</strong> to target the <strong>performance cores</strong> only. This choice offers a good balance between performance and system responsiveness.</p>
</blockquote>
</section>
<section id="summary" class="level2">
<h2 class="anchored" data-anchor-id="summary">Summary</h2>
<ul>
<li>Use <code>doMC</code> for lightweight, fast, Mac-only workflows.</li>
<li>Use <code>doParallel</code> if you need Windows compatibility or more control.</li>
<li>Use <code>furrr + future</code> for a modern, tidyverse-friendly setup and future scalability.</li>
</ul>
<p><a href="https://www.flaticon.com/free-icons/parallel" title="parallel icons">Parallel icons created by juicy_fish - Flaticon</a></p>


</section>

 ]]></description>
  <category>machine learning</category>
  <guid>https://amsabatini.netlify.app/posts/parallel_processing/</guid>
  <pubDate>Mon, 21 Apr 2025 22:00:00 GMT</pubDate>
  <media:content url="https://amsabatini.netlify.app/posts/parallel_processing/processing.png" medium="image" type="image/png" height="144" width="144"/>
</item>
<item>
  <title>Using Long Short Term Memory (LSTM) in R for time series forecasting</title>
  <dc:creator>Angelo Maria Sabatini</dc:creator>
  <link>https://amsabatini.netlify.app/posts/lstm/</link>
  <description><![CDATA[ 




<p>Long Short Term Memory (LSTM) networks are special kind of Recurrent Neural Networks (RNNs). LSTM networks can be used for time series forecasting, because of their ability to capture and learn the long-term dependencies, such as trends or patterns persisting over time, that are frequently exhibited by time series. In particular, LSTM networks can retain such information on long term behavior of time series much better than ordinary RNNs can do.</p>
<p>Figure&nbsp;1 shows the cell of an ordinary RNN, <img src="https://latex.codecogs.com/png.latex?A">, which outputs a value <img src="https://latex.codecogs.com/png.latex?h_t"> in response to the input <img src="https://latex.codecogs.com/png.latex?x_t">.</p>
<div id="fig-fig1" class="quarto-float quarto-figure quarto-figure-center anchored" data-fig-align="center">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-fig1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://amsabatini.netlify.app/posts/lstm/RNN_cell_1.png" class="img-fluid quarto-figure quarto-figure-center figure-img" width="134">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-fig1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;1: Cell of an ordinary RNN.
</figcaption>
</figure>
</div>
<p>Since the cell has a loop into it, information is allowed to persist through multiple steps of the network. An RNN can be thought as multiple copies of this cell, each copy passing a message to the next one, as shown in Figure&nbsp;2. It is exactly this ability to retain information over multiple steps of the network that provides an RNN with the ability, in principle, to learn long-term dependencies of the input sequence.</p>
<div id="fig-fig2" class="quarto-float quarto-figure quarto-figure-center anchored" data-fig-align="center">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-fig2-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://amsabatini.netlify.app/posts/lstm/RNN_cell_2.png" class="img-fluid quarto-figure quarto-figure-center figure-img" width="576">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-fig2-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;2: An unrolled RNN.
</figcaption>
</figure>
</div>
<p>LSTM are, in this regard, just a special kind of RNN, with much better capabilities to learn the long-term dependencies, compared with an ordinary RNN. Figure&nbsp;3 shows that each repeating cell in an LSTM has four neural network layers (sigmoid <img src="https://latex.codecogs.com/png.latex?%5Csigma"> and hyperbolic tangent <img src="https://latex.codecogs.com/png.latex?%5Ctext%7Btanh%7D">). In this figure each line carries a vector, from the output of one node to the input of others. Pointwise operations of multiplication and addition coexist with the learned neural network layers.</p>
<div id="fig-fig3" class="quarto-float quarto-figure quarto-figure-center anchored" data-fig-align="center">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-fig3-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://amsabatini.netlify.app/posts/lstm/LSTM_cell.png" class="img-fluid quarto-figure quarto-figure-center figure-img" width="720">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-fig3-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;3: Cell of an LSTM network.
</figcaption>
</figure>
</div>
<p>The cell state is the horizontal line at the top of the diagram. The flow of information along the cell state is controlled by the neural network layers, which learn which information to pass and which information to forget through a number of gates:</p>
<ul>
<li>The <strong>forget gate</strong> decides what information to discard from the cell state:</li>
</ul>
<p><img src="https://latex.codecogs.com/png.latex?%0Af_t=%5Csigma%5Cleft%5Bw_f%5Ccdot(h_%7Bt-1%7D,x_t)+b_f%5Cright%5D%0A"></p>
<ul>
<li>The <strong>input gate</strong> decides what new information to store in the cell state:</li>
</ul>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cleft%5C%7B%0A%5Cbegin%7Balign%7D%0Ai_t&amp;=%5Csigma%5Cleft%5Bw_i%5Ccdot(h_%7Bt-1%7D,x_t)+b_i%5Cright%5D%5C%5C%0A%5Ctilde%7Bc%7D_t&amp;=%5Ctanh%5Cleft%5Bw_c%5Ccdot(h_%7Bt-1%7D,x_t)+b_c%5Cright%5D%0A%5Cend%7Balign%7D%0A%5Cright.%0A"></p>
<ul>
<li>The <strong>cell state update</strong> is based on the following equations:</li>
</ul>
<p><img src="https://latex.codecogs.com/png.latex?%0Ac_t=f_t%5Ccdot%20c_%7Bt-1%7D+i_t%5Ccdot%20%5Ctilde%7Bc%7D_t%0A"></p>
<ul>
<li>The <strong>output gate</strong> computes the output <img src="https://latex.codecogs.com/png.latex?h_t"> based on the updated cell state <img src="https://latex.codecogs.com/png.latex?c_t">.</li>
</ul>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cleft%5C%7B%0A%5Cbegin%7Balign%7D%0Ao_t&amp;=%5Csigma%5Cleft%5Bw_o%5Ccdot(h_%7Bt-1%7D,x_t)+b_o%5Cright%5D%5C%5C%0Ah_t&amp;=o_t%5Ccdot%20%5Ctanh(%7Bc_t%7D)%0A%5Cend%7Balign%7D%0A%5Cright.%0A"></p>
<p>It is worth noting that the structure of the LSTM cell indicated in Figure&nbsp;3 is just one of many variants that have been proposed in the literature.</p>
<section id="load-the-libraries-and-the-dataset" class="level2">
<h2 class="anchored" data-anchor-id="load-the-libraries-and-the-dataset">Load the libraries and the dataset</h2>
<p>For demonstration purposes, the historical end-of-day stock price data <img src="https://latex.codecogs.com/png.latex?p_t"> for Apple Inc.&nbsp;are considered (period: 01/01/2022-06/30/2024). The <code>quantmod</code> package in R can be used to download this data from Yahoo Finance.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(quantmod)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(keras)</span>
<span id="cb1-4"></span>
<span id="cb1-5">tensorflow<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set_random_seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1234</span>)</span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define the stock symbol for Apple Inc. and specifiy the date range</span></span>
<span id="cb1-8">stock_symbol <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AAPL"</span></span>
<span id="cb1-9">start_date   <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.Date</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2021-12-31"</span>)</span>
<span id="cb1-10">end_date     <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.Date</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2024-06-30"</span>)</span>
<span id="cb1-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Download data from Yahoo Finance using quantmod</span></span>
<span id="cb1-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getSymbols</span>(stock_symbol, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">src =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"yahoo"</span>, </span>
<span id="cb1-13">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">from =</span> start_date, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">to =</span> end_date) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">-&gt;</span> a</span>
<span id="cb1-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set data as dataframe</span></span>
<span id="cb1-15">apple_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">date =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.Date</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">index</span>(AAPL)), </span>
<span id="cb1-16">                         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">close =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Cl</span>(AAPL)))</span>
<span id="cb1-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Compute log-returns from end-of-day stock price, adjusting for date</span></span>
<span id="cb1-18">log_return <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">diff</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(apple_data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>close))</span>
<span id="cb1-19">date <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> apple_data <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-20">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pull</span>(date)</span>
<span id="cb1-21">date <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> date[<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb1-22">apple_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">date =</span> date, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">log_return =</span> log_return)</span></code></pre></div>
</details>
</div>
</section>
<section id="data-preparation" class="level2">
<h2 class="anchored" data-anchor-id="data-preparation">Data preparation</h2>
<section id="transform-data-to-stationary" class="level3">
<h3 class="anchored" data-anchor-id="transform-data-to-stationary">Transform data to stationary</h3>
<p>Usually, this is done by getting the difference between two consecutive values in the series. This transformation, commonly known as <em>differencing</em>, is considered in traditional time series models, such as ARIMA and GARCH. For a short discussion about non-stationarity in time series and statistical tests that can be used to detect whether a time series is stationary or not, see my previous post (<a href="https://amsabatini.netlify.app/posts/dickey_fuller/">here</a>). There are different approaches in the literature regarding whether LSTM networks can be applied to stationary or non-stationary time series (<a href="https://medium.com/@robinaiqbal/using-r-to-compare-the-applicability-of-long-short-term-memory-lstm-models-for-stock-prices-and-7a9b72250a95">here</a>). For the example discussed in this post, I decided to analyze the <strong>log-returns</strong> <img src="https://latex.codecogs.com/png.latex?z_t"> of the end-of-day stock prices:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0Az_t=%5Clog%5Cleft(%5Cdfrac%7Bp_t%7D%7Bp_%7Bt-1%7D%7D%5Cright)=%5Clog(p_t)-%5Clog(p_%7Bt-1%7D)%0A"></p>
<div class="cell">
<div class="cell-output-display">
<div id="fig-fig4" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-fig4-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://amsabatini.netlify.app/posts/lstm/index_files/figure-html/fig-fig4-1.png" class="img-fluid figure-img" width="672">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-fig4-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;4: Log-returns of end-of-day stock price.
</figcaption>
</figure>
</div>
</div>
</div>
<p>The time series of log-returns plotted in Figure&nbsp;4 is to be regarded as being stationary.</p>
</section>
<section id="data-normalization" class="level3">
<h3 class="anchored" data-anchor-id="data-normalization">Data normalization</h3>
<p>For better learning, LSTM needs normalized data, i.e., data that are centered by the mean and scaled by the standard deviation. This step can be implemented using the <code>scale()</code> function of base R; the function <code>get_scaling_factors()</code> stores the scaling factors used for data normalization. When the original data scale needs to be restored at the time of making predictions, the function <code>reverse_data()</code> can be used.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">get_scaling_factors <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(data) {</span>
<span id="cb2-2">  out <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mean =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(data), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sd =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sd</span>(data))</span>
<span id="cb2-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(out)</span>
<span id="cb2-4">}</span>
<span id="cb2-5"></span>
<span id="cb2-6">reverse_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(data, scaling_factors) {</span>
<span id="cb2-7">  temp <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> (data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>scaling_factors[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> scaling_factors[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb2-8">  out <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.matrix</span>(temp)</span>
<span id="cb2-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(out)</span>
<span id="cb2-10">}</span>
<span id="cb2-11"></span>
<span id="cb2-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Data processing using differencing with diff() and normalization with scale() </span></span>
<span id="cb2-13">scaling_factors <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_scaling_factors</span>(apple_data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>log_return)</span>
<span id="cb2-14">log_return      <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale</span>(apple_data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>log_return)</span>
<span id="cb2-15">log_return      <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(log_return)</span></code></pre></div>
</details>
</div>
</section>
<section id="split-dataset-in-training-and-testing-sets" class="level3">
<h3 class="anchored" data-anchor-id="split-dataset-in-training-and-testing-sets">Split dataset in training and testing sets</h3>
<p>LSTM works in a supervised learning mode, with a predictor <img src="https://latex.codecogs.com/png.latex?%5Ctextbf%7BX%7D"> and a target variable <img src="https://latex.codecogs.com/png.latex?Y">. The time series needs therefore to be transformed by lagging the series, so as to have the values at times <img src="https://latex.codecogs.com/png.latex?(t%E2%88%92k),k=1,%5Ccdots,L"> as the input and the value at time <img src="https://latex.codecogs.com/png.latex?t"> as the ouput, for a <img src="https://latex.codecogs.com/png.latex?L">-step lagged dataset: <img src="https://latex.codecogs.com/png.latex?%5Ctextbf%7BX%7D_t=%5Bx_%7Bt-L%7D,x_%7Bt-L+1%7D,%5Ccdots,x_%7Bt-1%7D%5D"> and <img src="https://latex.codecogs.com/png.latex?Y_t=x_t">. Here, I choose <img src="https://latex.codecogs.com/png.latex?L=7">. Moreover, unlike in most analysis where training and testing data sets are randomly sampled, with time series data the order of the observations does matter. The following code splits the first 80% of the series as training set and the remaining 20% as testing set.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define the train and test split</span></span>
<span id="cb3-2">split_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(series, lag) {</span>
<span id="cb3-3">    lag <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> lag<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb3-4">    data_raw <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.matrix</span>(series) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># convert to matrix (series is a data frame)</span></span>
<span id="cb3-5">    data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">array</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, lag, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ncol</span>(data_raw)))</span>
<span id="cb3-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create all possible sequences of length lag</span></span>
<span id="cb3-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (i <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(data_raw)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>lag)) {</span>
<span id="cb3-8">        data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbind</span>(data, data_raw[i<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>(i<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>lag<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span>), ])</span>
<span id="cb3-9">    }</span>
<span id="cb3-10">    train_set_size <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(data))</span>
<span id="cb3-11">    test_set_size  <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(data)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>train_set_size</span>
<span id="cb3-12">    x_train <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> data[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>train_set_size, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>(lag<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span>)]</span>
<span id="cb3-13">    y_train <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> data[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>train_set_size, lag]</span>
<span id="cb3-14">    x_test <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> data[(train_set_size<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(data), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>(lag<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span>)]</span>
<span id="cb3-15">    y_test <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> data[(train_set_size<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(data), lag]</span>
<span id="cb3-16">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x_train =</span> x_train, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y_train =</span> y_train,</span>
<span id="cb3-17">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x_test =</span> x_test, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y_test =</span> y_test))</span>
<span id="cb3-18">}</span>
<span id="cb3-19"></span>
<span id="cb3-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Divide data into train and test</span></span>
<span id="cb3-21">lag <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Choose sequence length</span></span>
<span id="cb3-22">split_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">split_data</span>(log_return, lag)</span>
<span id="cb3-23">x_train <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> split_data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>x_train</span>
<span id="cb3-24">y_train <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> split_data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>y_train</span>
<span id="cb3-25">x_test <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> split_data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>x_test</span>
<span id="cb3-26">y_test <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> split_data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>y_test</span>
<span id="cb3-27">n_train <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dim</span>(x_train)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb3-28">n_test <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dim</span>(x_test)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span></code></pre></div>
</details>
</div>
</section>
</section>
<section id="model-construction" class="level2">
<h2 class="anchored" data-anchor-id="model-construction">Model construction</h2>
<p>It is important to consider that the input to every LSTM layer must be three-dimensional. The three dimensions of the input are:</p>
<ul>
<li><p><strong>Samples</strong> This dimension indicates how many samples are included in each batch; in this example, we have 494 samples for the training data and 123 for the testing data.</p></li>
<li><p><strong>Time Steps</strong> This dimension indicates how many points of observation are included in each sample; in this example, we have 7 points.</p></li>
<li><p><strong>Features</strong> This dimension indicates how many features are in each observation at each time step; for a univariate case, like in this example, we have just one feature.</p></li>
</ul>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">input_dim <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb4-2"></span>
<span id="cb4-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Reshape the training and test data to have a 3D array</span></span>
<span id="cb4-4">x_train <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">array_reshape</span>(x_train, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(n_train, lag, input_dim))</span>
<span id="cb4-5">x_test  <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">array_reshape</span>(x_test, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(n_test, lag, input_dim))</span></code></pre></div>
</details>
</div>
<section id="define-the-model" class="level3">
<h3 class="anchored" data-anchor-id="define-the-model">Define the model</h3>
<p>A sequential model is defined using <code>keras_model_sequential()</code>:</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Decide structure</span></span>
<span id="cb5-2">hidden_dim <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span></span>
<span id="cb5-3">num_layers <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb5-4">output_dim <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb5-5"></span>
<span id="cb5-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define the LSTM model using Keras</span></span>
<span id="cb5-7">model <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">keras_model_sequential</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb5-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">layer_lstm</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">units =</span> hidden_dim, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">input_shape =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(lag, input_dim), </span>
<span id="cb5-9">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">return_sequences =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb5-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">layer_lstm</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">units =</span> hidden_dim) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb5-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">layer_dense</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">units =</span> output_dim) </span>
<span id="cb5-12">model</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>Model: "sequential"
________________________________________________________________________________
 Layer (type)                       Output Shape                    Param #     
================================================================================
 lstm_1 (LSTM)                      (None, 7, 32)                   4352        
 lstm (LSTM)                        (None, 32)                      8320        
 dense (Dense)                      (None, 1)                       33          
================================================================================
Total params: 12705 (49.63 KB)
Trainable params: 12705 (49.63 KB)
Non-trainable params: 0 (0.00 Byte)
________________________________________________________________________________</code></pre>
</div>
</div>
<p>The LSTM input layer is defined by the <code>input_shape</code> argument on the first hidden layer, which takes a tuple of two values that define the number of time steps and features.</p>
</section>
<section id="compile-and-fit-the-model" class="level3">
<h3 class="anchored" data-anchor-id="compile-and-fit-the-model">Compile and fit the model</h3>
<p>The model is compiled in-place using <code>compile()</code>, which specifies the loss function (mean squared error) and the optimizer (Adam), with learning rate assigned over each update. The model is then fit using the training data and validated on the testing data. The training history is stored in the <code>history</code> object.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">num_epochs <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">125</span></span>
<span id="cb7-2">batch      <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span></span>
<span id="cb7-3"></span>
<span id="cb7-4">model <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb7-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">compile</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">loss =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mean_squared_error"</span>, </span>
<span id="cb7-6">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">optimizer =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">optimizer_adam</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">learning_rate =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>))</span>
<span id="cb7-7"></span>
<span id="cb7-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Train the model on the training data</span></span>
<span id="cb7-9">history <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> model <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fit</span>(x_train, y_train, </span>
<span id="cb7-10">                         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">epochs =</span> num_epochs, </span>
<span id="cb7-11">                         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">batch_size =</span> batch, </span>
<span id="cb7-12">                         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">validation_data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(x_test, y_test),</span>
<span id="cb7-13">                         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">verbose =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>,</span>
<span id="cb7-14">                         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shuffle =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span></code></pre></div>
</details>
</div>
<div class="cell">
<div class="cell-output-display">
<div id="fig-fig5" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-fig5-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://amsabatini.netlify.app/posts/lstm/index_files/figure-html/fig-fig5-1.png" class="img-fluid figure-img" width="672">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-fig5-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;5: Loss over the number of epochs.
</figcaption>
</figure>
</div>
</div>
</div>
<p>The loss over the training epochs is shown in Figure&nbsp;5. The validation mean squared error is 1.2078.</p>
</section>
<section id="extract-predictions" class="level3">
<h3 class="anchored" data-anchor-id="extract-predictions">Extract predictions</h3>
<p>Figure&nbsp;6 shows the results of the forecasting exercise using LSTM.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract predictions from the estimated model</span></span>
<span id="cb8-2">y_train_pred <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> model <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(x_train, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">verbose =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span>
<span id="cb8-3">y_test_pred  <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> model <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(x_test, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">verbose =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span>
<span id="cb8-4"></span>
<span id="cb8-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Rescale the predictions and original values</span></span>
<span id="cb8-6">y_train_pred_orig <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reverse_data</span>(y_train_pred, scaling_factors)</span>
<span id="cb8-7">y_train_orig      <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reverse_data</span>(y_train, scaling_factors)</span>
<span id="cb8-8">y_test_pred_orig  <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reverse_data</span>(y_test_pred, scaling_factors)</span>
<span id="cb8-9">y_test_orig       <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reverse_data</span>(y_test, scaling_factors)</span>
<span id="cb8-10"></span>
<span id="cb8-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Shift the predicted values to start from where the training data predictions end</span></span>
<span id="cb8-12">y_test_pred_orig_shifted <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>, n_train), y_test_pred_orig[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])</span>
<span id="cb8-13">y_train_pred_orig        <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(y_train_pred_orig, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>, n_test))</span></code></pre></div>
</details>
</div>
<div class="cell">
<div class="cell-output-display">
<div id="fig-fig6" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-fig6-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://amsabatini.netlify.app/posts/lstm/index_files/figure-html/fig-fig6-1.png" class="img-fluid figure-img" width="672">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-fig6-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;6: LSTM predictions.
</figcaption>
</figure>
</div>
</div>
</div>
<p><a href="https://www.flaticon.com/free-icons/forecasting" title="forecasting icons">Forecasting icons created by zero_wing - Flaticon</a></p>


</section>
</section>

 ]]></description>
  <category>time series</category>
  <guid>https://amsabatini.netlify.app/posts/lstm/</guid>
  <pubDate>Mon, 10 Mar 2025 23:00:00 GMT</pubDate>
  <media:content url="https://amsabatini.netlify.app/posts/lstm/forecast-analytics.png" medium="image" type="image/png" height="144" width="144"/>
</item>
<item>
  <title>Frequency spectrum of a sine-wave tone burst</title>
  <dc:creator>Angelo Maria Sabatini</dc:creator>
  <link>https://amsabatini.netlify.app/posts/tone_burst/</link>
  <description><![CDATA[ 




<section id="sine-wave-tone-burst" class="level2">
<h2 class="anchored" data-anchor-id="sine-wave-tone-burst">Sine-wave tone burst</h2>
<p>A sine-wave tone burst signal is shown in Figure&nbsp;1.</p>
<div id="fig-fig1" class="quarto-float quarto-figure quarto-figure-center anchored" data-fig-align="center">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-fig1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://amsabatini.netlify.app/posts/tone_burst/fig_tone_burst.png" class="img-fluid quarto-figure quarto-figure-center figure-img" width="350">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-fig1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;1: Sine-wave tone burst of two cycles on, four cycles off.
</figcaption>
</figure>
</div>
<p>It is formed by “turning on and off” (gating) a sinusoidal signal (<a href="https://www.ietlabs.com/pdf/GR_Appnote/IN-105%20Frequency%20Spectrum%20of%20a%20Tone%20Burst.pdf">here</a>). The sinusoidal signal, with fundamental period <img src="https://latex.codecogs.com/png.latex?T_b"> (frequency: <img src="https://latex.codecogs.com/png.latex?f_b%20=%201/T_b">) and initial phase <img src="https://latex.codecogs.com/png.latex?%5Ctheta_b">, is assumed here to have unit amplitude:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0Ax_b(t)=%5Csin%5Cleft(2%5Cpi%5Cdfrac%7Bt%7D%7BT_b%7D+%5Ctheta_b%5Cright)%0A"></p>
<p>Gating amounts to multiply it by <img src="https://latex.codecogs.com/png.latex?x_p(t)">, which can be described as the time-delayed rectangular function <img src="https://latex.codecogs.com/png.latex?%5Ctext%7Brect%7D(t/T_g)">, periodized by the fundamental period <img src="https://latex.codecogs.com/png.latex?T_r">:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0Ax_p(t)=%5Csum_%7Bn=-%5Cinfty%7D%5E%7B+%5Cinfty%7D%5Ctext%7Brect%7D%5Cleft(%5Cdfrac%7Bt-%5Ctau_r-nT_r%7D%7BT_g%7D%5Cright)%0A"></p>
<p>where <img src="https://latex.codecogs.com/png.latex?%5Ctau_r"> is the time-shift of the rectangular function before submitting it to periodization. Henceforth, we assume that <img src="https://latex.codecogs.com/png.latex?T_r%3ET_b">, and a multiple integer of full cycles of <img src="https://latex.codecogs.com/png.latex?x_b(t)"> is captured in either the time interval <img src="https://latex.codecogs.com/png.latex?T_g"> or the time interval <img src="https://latex.codecogs.com/png.latex?T_r">: in Figure&nbsp;1, <img src="https://latex.codecogs.com/png.latex?T_g=2T_b"> (<img src="https://latex.codecogs.com/png.latex?N=2">) and <img src="https://latex.codecogs.com/png.latex?T_r=6T_b"> (<img src="https://latex.codecogs.com/png.latex?M=4">, hence <img src="https://latex.codecogs.com/png.latex?N+M=6">).</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Rectangular function
</div>
</div>
<div class="callout-body-container callout-body">
<p>The rectangular function (also known as the rect function, gate function) is defined as:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Ctext%7Brect%7D%5Cleft(%5Cdfrac%7Bt%7D%7BT%7D%5Cright)=%5Cleft%5C%7B%0A%5Cbegin%7Balign%7D%0A1,&amp;%5Cquad%5Cvert%20t%5Cvert%5Cleq%20T/2%5C%5C%0A1/2,&amp;%5Cquad%20t=T/2%5C%5C%0A0,&amp;%5Cquad%20t%3ET/2%0A%5Cend%7Balign%7D%0A%5Cright.%0A"></p>
<p>The Continuous Time Fourier Transform of the rectangular function <img src="https://latex.codecogs.com/png.latex?%5Ctext%7Brect%7D(t/T)"> is:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AX(f)=T%5C,%5Ctext%7Bsinc%7D(fT)%0A"></p>
</div>
</div>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Sinc function
</div>
</div>
<div class="callout-body-container callout-body">
<p>In digital signal processing and information theory, the <strong>sinc function</strong> is commonly defined for <img src="https://latex.codecogs.com/png.latex?x%5Cneq0"> by</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Ctext%7Bsinc%7D(x)=%5Cdfrac%7B%5Csin(%5Cpi%20x)%7D%7B%5Cpi%20x%7D%0A"></p>
</div>
</div>
<p>The duty-ratio factor is defined as the ratio of time the tone is ON compared to the total time when it is either ON or OFF, namely <img src="https://latex.codecogs.com/png.latex?D=N/(N+M)=N/L">. The duty-ratio factor approaches 0 for widely spaced, narrow bursts or 1 for closely spaced, wide bursts: when <img src="https://latex.codecogs.com/png.latex?D=1">, <img src="https://latex.codecogs.com/png.latex?x_r(t)=1"> and <img src="https://latex.codecogs.com/png.latex?x(t)=x_b(t)"> (pure sine-wave).</p>
<p>When the duty-ratio factor is a rational number, the sine-wave tone burst <img src="https://latex.codecogs.com/png.latex?x(t)"> can be modeled as the product of two periodical signals, namely <img src="https://latex.codecogs.com/png.latex?x_b(t)"> (with period <img src="https://latex.codecogs.com/png.latex?T_b">) and <img src="https://latex.codecogs.com/png.latex?x_r(t)"> (with period <img src="https://latex.codecogs.com/png.latex?T_r">):</p>
<p><img src="https://latex.codecogs.com/png.latex?%0Ax(t)=x_r(t)%5Ccdot%20x_b(t)%0A"></p>
<p>The fundamental period of <img src="https://latex.codecogs.com/png.latex?x(t)"> is <img src="https://latex.codecogs.com/png.latex?T=T_r">. We can appropriately choose the phase shift <img src="https://latex.codecogs.com/png.latex?%5Ctheta_b"> and the time delay <img src="https://latex.codecogs.com/png.latex?%5Ctau_r"> so as to yield a signal <img src="https://latex.codecogs.com/png.latex?x(t)"> without discontinuities and further endowed with odd symmetry (e.g., <img src="https://latex.codecogs.com/png.latex?%5Ctheta_b=0">, <img src="https://latex.codecogs.com/png.latex?%5Ctau_r=0">). Under these conditions, <img src="https://latex.codecogs.com/png.latex?x(t)"> can be regarded as composed by infinitely many replicas (with period <img src="https://latex.codecogs.com/png.latex?T_r">) of the time-limited signal <img src="https://latex.codecogs.com/png.latex?x_p(t)">:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0Ax_p(t)=%5Cleft%5C%7B%0A%5Cbegin%7Balign%7D%0A%5Csin%5Cleft(2%5Cpi%5Cdfrac%7Bt%7D%7BT_b%7D%5Cright),&amp;%5Cquad%5Cvert%20t%5Cvert%5Cleq%20T_g/2%5C%5C%0A0,&amp;%5Cquad%5Ctext%7Belsewhere%7D%0A%5Cend%7Balign%7D%0A%5Cright.%0A"></p>
</section>
<section id="fourier-analysis" class="level2">
<h2 class="anchored" data-anchor-id="fourier-analysis">Fourier analysis</h2>
<p>The Fourier series of <img src="https://latex.codecogs.com/png.latex?x(t)"> is defined as a trigonometric series of the form:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0Ax(t)=A_0+%5Csum_%7Bn=1%7D%5E%7B+%5Cinfty%7DA_n%5Ccos%5Cleft(2%5Cpi%20%5Cdfrac%7Bn%7D%7BT_r%7Dt%5Cright)+%5Csum_%7Bi=1%7D%5E%7B+%5Cinfty%7DB_n%5Csin%5Cleft(2%5Cpi%20%5Cdfrac%7Bn%7D%7BT_r%7Dt%5Cright)%0A"></p>
<p>where the Fourier series coefficients are defined by the integrals:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cleft%5C%7B%0A%5Cbegin%7Balign%7D%0AA_0&amp;=%5Cdfrac%7B1%7D%7BT_r%7D%5Cint_%7B-T_%7Br%7D/2%7D%5E%7BT_%7Br%7D/2%7Dx(t)%5C,dt%5C%5C%0AA_n&amp;=%5Cdfrac%7B2%7D%7BT_r%7D%5Cint_%7B-T_%7Br%7D/2%7D%5E%7BT_%7Br%7D/2%7Dx(t)%5Ccos%5Cleft(2%5Cpi%5Cdfrac%7Bnt%7D%7BT_r%7D%5Cright)%5C,dt%5C%5C%0AB_n&amp;=%5Cdfrac%7B2%7D%7BT_r%7D%5Cint_%7B-T_%7Br%7D/2%7D%5E%7BT_%7Br%7D/2%7Dx(t)%5Csin%5Cleft(2%5Cpi%5Cdfrac%7Bnt%7D%7BT_r%7D%5Cright)%5C,dt%0A%5Cend%7Balign%7D%0A%5Cright.%0A"></p>
<p>Since <img src="https://latex.codecogs.com/png.latex?x(t)"> is odd-symmetric, <img src="https://latex.codecogs.com/png.latex?A_0"> is null (i.e., the sine-wave tone burst has no DC component) and <img src="https://latex.codecogs.com/png.latex?A_n=0,n=1,%5Ccdots,+%5Cinfty">. The harmonic coefficients <img src="https://latex.codecogs.com/png.latex?B_n"> are given by:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AB_n=%5Cdfrac%7B4%7D%7BT_r%7D%5Cint_0%5E%7BT_g/2%7D%5Csin%5Cleft(2%5Cpi%5Cdfrac%7Bt%7D%7BT_b%7D%5Cright)%5Csin%5Cleft(2%5Cpi%5Cdfrac%7Bnt%7D%7BT_r%7D%5Cright)dt%0A"></p>
<p>where <img src="https://latex.codecogs.com/png.latex?T_r=LT_b"> (<img src="https://latex.codecogs.com/png.latex?L=N+M">) and <img src="https://latex.codecogs.com/png.latex?T_g=N%20T_b">. To make the notation lighter, <img src="https://latex.codecogs.com/png.latex?T_b=T"> in the following. The spectrum of the sine-wave tone burst requires the calculation of the Fourier integrals:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AB_n=%5Cdfrac%7B4%7D%7BLT%7D%5Cint_%7B0%7D%5E%7BN%20T/2%7D%5Csin%5Cleft(%5Cdfrac%7B2%5Cpi%7D%7BT%7Dt%5Cright)%5Csin%5Cleft(%5Cdfrac%7B2%5Cpi%7D%7BT%7D%5Cdfrac%7Bn%7D%7BL%7Dt%5Cright)dt%0A"></p>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Werner formulas
</div>
</div>
<div class="callout-body-container callout-body">
<p>The Werner formulas are the trigonometric product formulas:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Balign%7D%0A2%5Csin%5Calpha%5Ccos%5Cbeta&amp;=%5Csin(%5Calpha-%5Cbeta)+%5Csin(%5Calpha+%5Cbeta)%5C%5C%0A2%5Ccos%5Calpha%5Ccos%5Cbeta&amp;=%5Ccos(%5Calpha-%5Cbeta)+%5Ccos(%5Calpha+%5Cbeta)%5C%5C%0A2%5Ccos%5Calpha%5Csin%5Cbeta&amp;=%5Csin(%5Calpha+%5Cbeta)-%5Csin(%5Calpha-%5Cbeta)%5C%5C%0A2%5Csin%5Calpha%5Csin%5Cbeta&amp;=%5Ccos(%5Calpha-%5Cbeta)-%5Ccos(%5Calpha+%5Cbeta)%0A%5Cend%7Balign%7D%0A"></p>
</div>
</div>
<p>Applying the Werner formulas, the integrand can be written:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Csin%5Cleft(%5Cdfrac%7B2%5Cpi%7D%7BT%7Dt%5Cright)%5Csin%5Cleft(%5Cdfrac%7B2%5Cpi%7D%7BT%7D%5Cdfrac%7Bn%7D%7BL%7Dt%5Cright)=%5Cdfrac%7B1%7D%7B2%7D%5Cleft%5B%5Ccos%5Cleft(%5Cdfrac%7B2%5Cpi%7D%7BT%7D%5Cleft(1-%5Cdfrac%7Bn%7D%7BL%7D%5Cright)t%5Cright)-%5Ccos%5Cleft(%5Cdfrac%7B2%5Cpi%7D%7BT%7D%5Cleft(1+%5Cdfrac%7Bn%7D%7BL%7D%5Cright)t%5Cright)%5Cright%5D%0A"></p>
<p>Therefore:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Balign%7D%0AB_n%20&amp;=%20%5Cdfrac%7B2%7D%7BLT%7D%5Cdfrac%7B1%7D%7B%5Cdfrac%7B2%5Cpi%7D%7BT%7D%5Cleft(1-%5Cdfrac%7Bn%7D%7BL%7D%5Cright)%7D%5Csin%5Cleft(%5Cdfrac%7B2%5Cpi%7D%7BT%7D%5Cleft(1-%5Cdfrac%7Bn%7D%7BL%7D%5Cright)t%5Cright)%5Cbiggr%5Cvert_0%5E%7BNT/2%7D%5C%5C%0A&amp;-%5Cdfrac%7B2%7D%7BLT%7D%5Cdfrac%7B1%7D%7B%5Cdfrac%7B2%5Cpi%7D%7BT%7D%5Cleft(1+%5Cdfrac%7Bn%7D%7BL%7D%5Cright)%7D%5Csin%5Cleft(%5Cdfrac%7B2%5Cpi%7D%7BT%7D%5Cleft(1+%5Cdfrac%7Bn%7D%7BL%7D%5Cright)t%5Cright)%5Cbiggr%5Cvert_0%5E%7BNT/2%7D%0A%5Cend%7Balign%7D%0A"></p>
<p>and</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Balign%7D%0AB_n%20&amp;=%20%5Cdfrac%7B2%7D%7B%5Cpi%20L%7D%5Cdfrac%7B1%7D%7B%5Cleft(1-%5Cdfrac%7Bn%7D%7BL%7D%5Cright)%7D%5Csin%5Cleft(%5Cpi%20N%5Cleft(1-%5Cdfrac%7Bn%7D%7BL%7D%5Cright)%5Cright)-%5Cdfrac%7B2%7D%7B%5Cpi%20L%7D%5Cdfrac%7B1%7D%7B%5Cleft(1+%5Cdfrac%7Bn%7D%7BL%7D%5Cright)%7D%5Csin%5Cleft(%5Cpi%20N%5Cleft(1+%5Cdfrac%7Bn%7D%7BL%7D%5Cright)%5Cright)%5C%5C%0A&amp;=%5Cdfrac%7BN%7D%7BL%7D%5Cleft%5B%5Ctext%7Bsinc%7D%5Cleft(N%5Cleft(1-%5Cdfrac%7Bn%7D%7BL%7D%5Cright)%5Cright)-%5Ctext%7Bsinc%7D%5Cleft(N%5Cleft(1+%5Cdfrac%7Bn%7D%7BL%7D%5Cright)%5Cright)%5Cright%5D%0A%5Cend%7Balign%7D%0A"></p>
<p>Using the duty-ratio factor, we have:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AB_n=D%5Cleft%5B%5Ctext%7Bsinc%7D(D(L-n))-%5Ctext%7Bsinc%7D(D(L+n))%5Cright%5D%0A"></p>
<p>When <img src="https://latex.codecogs.com/png.latex?D=1"> (i.e., <img src="https://latex.codecogs.com/png.latex?x_r(t)=1">), we get <img src="https://latex.codecogs.com/png.latex?B_n%20=%200"> for all <img src="https://latex.codecogs.com/png.latex?n">, but <img src="https://latex.codecogs.com/png.latex?B_L=1">. Recall that the <img src="https://latex.codecogs.com/png.latex?L">th harmonic component in the spectrum of <img src="https://latex.codecogs.com/png.latex?x(t)"> corresponds to the fundamental frequency of the sine-wave, <img src="https://latex.codecogs.com/png.latex?f_b"> - as noted above, if <img src="https://latex.codecogs.com/png.latex?x_r(t)=1">, then <img src="https://latex.codecogs.com/png.latex?x(t)=x_b(t)">. For any value of <img src="https://latex.codecogs.com/png.latex?D"> different from 1, the maximum value of <img src="https://latex.codecogs.com/png.latex?B_n">, <img src="https://latex.codecogs.com/png.latex?B_%7B%5Ctext%7Bmax%7D%7D=D"> still occurs when <img src="https://latex.codecogs.com/png.latex?n=L">, however other lines are present in the spectrum. These lines are at the (analog) frequencies <img src="https://latex.codecogs.com/png.latex?f_n=f_b+(n-L)f_r">.</p>
</section>
<section id="examples" class="level2">
<h2 class="anchored" data-anchor-id="examples">Examples</h2>
<p>A sine-wave tone burst with duty-ratio factor <img src="https://latex.codecogs.com/png.latex?D=0.25"> (<img src="https://latex.codecogs.com/png.latex?f_b=3%5C,%5Ctext%7BHz%7D,f_r=0.25%5C,%5Ctext%7BHz%7D,T_b=1%5C,%5Ctext%7Bs%7D">) was simulated in MATLAB. The sampling frequency chosen for the simulation was <img src="https://latex.codecogs.com/png.latex?f_s=80%5C,%5Ctext%7BHz%7D">. The Fast Fourier Transform (FFT) algorithm was applied for spectrum computation. The guidelines discussed in one previous post of mine (<a href="https://amsabatini.netlify.app/posts/resolution/">here</a>) were followed to prevent spectral leakage and amplitude ambiguity. Superimposed on the values computed by the FFT (solid black points) is the envelope obtained by interpolating the discrete spectrum <img src="https://latex.codecogs.com/png.latex?B_n"> (see above), Figure&nbsp;2.</p>
<div id="fig-fig2" class="quarto-float quarto-figure quarto-figure-center anchored" data-fig-align="center">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-fig2-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://amsabatini.netlify.app/posts/tone_burst/fig_spectrum.png" class="img-fluid quarto-figure quarto-figure-center figure-img" width="400">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-fig2-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;2: The main part of the envelope of the spectrum of a sine-wave tone burst at 3 Hz.
</figcaption>
</figure>
</div>
<p>The MATLAB code was run again in a scenario where the frequency of the sine wave moved up to <img src="https://latex.codecogs.com/png.latex?f_b=60%5C,%5Ctext%7BHz%7D">, with a corresponding adjustment of the sampling frequency (<img src="https://latex.codecogs.com/png.latex?f_s=800%5C,%5Ctext%7BHz%7D">). The results of the FFT-based spectrum analysis are reported in Figure&nbsp;3.</p>
<div id="fig-fig3" class="quarto-float quarto-figure quarto-figure-center anchored" data-fig-align="center">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-fig3-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://amsabatini.netlify.app/posts/tone_burst/fig_spectrum_1.png" class="img-fluid quarto-figure quarto-figure-center figure-img" width="400">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-fig3-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;3: The main part of the envelope of the spectrum of a sine-wave tone burst at 60 Hz.
</figcaption>
</figure>
</div>
<p>The FFT-based spectrum can be also interpreted as the outcome of the following cascaded frequency-domain signal-processing operations:</p>
<ul>
<li><p><em>frequency sampling</em> the spectrum <img src="https://latex.codecogs.com/png.latex?T_g%5C,%5Ctext%7Bsinc%7D(f%5C,T_g)"> - this is explained by the time periodization of the rectangular function <img src="https://latex.codecogs.com/png.latex?%5Ctext%7Brect%7D(t/T_g)"> with period <img src="https://latex.codecogs.com/png.latex?T_r">.</p></li>
<li><p><em>frequency shifting</em> the frequency-sampled spectrum - this is explained by the amplitude modulation impressed on the periodized rectangular function when the latter is multiplied by the sine wave at frequency <img src="https://latex.codecogs.com/png.latex?f_b">.</p></li>
</ul>


</section>

 ]]></description>
  <category>signal processing</category>
  <guid>https://amsabatini.netlify.app/posts/tone_burst/</guid>
  <pubDate>Wed, 15 Jan 2025 23:00:00 GMT</pubDate>
  <media:content url="https://amsabatini.netlify.app/posts/tone_burst/fig_spectrum.png" medium="image" type="image/png" height="108" width="144"/>
</item>
<item>
  <title>Spell checking using hunspell</title>
  <dc:creator>Angelo Maria Sabatini</dc:creator>
  <link>https://amsabatini.netlify.app/posts/spell_checking/</link>
  <description><![CDATA[ 




<section id="spell-checking" class="level2">
<h2 class="anchored" data-anchor-id="spell-checking">Spell checking</h2>
<p>Spell checking text consists of the following steps:</p>
<ul>
<li>Parse a document by extracting (tokenizing) words that we want to check</li>
<li>Analyze each word by breaking it down in its root (stemming) and conjugation affix</li>
<li>Lookup in a dictionary if the word+affix combination if valid for the stated language</li>
<li>(optional) For incorrect words, suggest corrections by finding similar (correct) words in the dictionary</li>
</ul>
<section id="check-individual-words" class="level3">
<h3 class="anchored" data-anchor-id="check-individual-words">Check individual words</h3>
<p>Let us suppose that the text to be spell checked is composed of a char array, with each element of the array being a single word expressed in the specified language (Italian, here). A custom dictionary can be set in the <code>dict</code> parameter when functions hunspell_* are invoked.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(hunspell)</span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># check individual words</span></span>
<span id="cb1-4">words   <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"amore"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ammore"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"prof"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"professsore"</span>)</span>
<span id="cb1-5">correct <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hunspell_check</span>(words, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dict =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dictionary</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"it_IT"</span>))</span>
<span id="cb1-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(correct)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1]  TRUE FALSE  TRUE FALSE</code></pre>
</div>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># incorrect words</span></span>
<span id="cb3-2">incorrect.words <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> words[<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>correct]</span>
<span id="cb3-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># find suggestions for incorrect words</span></span>
<span id="cb3-4">suggested.words <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hunspell_suggest</span>(incorrect.words, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dict =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dictionary</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"it_IT"</span>))</span>
<span id="cb3-5">suggested.words <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unlist</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lapply</span>(suggested.words, <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(x) x[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]))</span></code></pre></div>
</div>
<p>Note that the outcome of the function <code>hunspell_suggest()</code> is a list. An array of corrected words can then be constructed for the corresponding misspelled words. Clearly, some words are not the best choice, and the first word is usually the best alternative. The quality of data can be improved by careful exploration of the list.</p>
<div class="cell">
<div class="cell-output-display">
<table quarto-disable-processing="true" class="table table-condensed table-bordered" style="width: auto !important; margin-left: auto; margin-right: auto;">
<caption>Spell checking text</caption>
 <thead>
  <tr>
   <th style="text-align:left;"> word </th>
   <th style="text-align:left;"> best alternative </th>
  </tr>
 </thead>
<tbody>
  <tr>
   <td style="text-align:left;"> ammore </td>
   <td style="text-align:left;"> amore </td>
  </tr>
  <tr>
   <td style="text-align:left;"> professsore </td>
   <td style="text-align:left;"> professore </td>
  </tr>
</tbody>
</table>

</div>
</div>
</section>
</section>
<section id="an-example" class="level2">
<h2 class="anchored" data-anchor-id="an-example">An example</h2>
<p>Let us suppose that we want to analyze the lyrics of the song titled “Il mio canto libero” (<a href="https://genius.com/Lucio-battisti-il-mio-canto-libero-lyrics">here</a>). One single occurrence of the words “emozioni”, “nuda” and “pianto” was intentionally misspelled, namely, “emozzioni”, “nudda”, “painto” were transcripted, respectively.</p>
<p>To get the list of words used in the lyrics, I first split the text into individual words. To do so, I use <code>unnest_tokens()</code> from the tidytext package.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb4-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(stringi)</span>
<span id="cb4-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidytext)</span>
<span id="cb4-4"></span>
<span id="cb4-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># data upload</span></span>
<span id="cb4-6">lyrics <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stri_read_lines</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Il mio canto libero.txt"</span>)</span>
<span id="cb4-7">df_pre <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">text =</span> lyrics) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb4-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">id =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">row_number</span>()) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb4-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(id, text)</span>
<span id="cb4-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># tokenization</span></span>
<span id="cb4-11">tokenized_text_pre <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df_pre <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb4-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unnest_tokens</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">output =</span> word, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">token =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"words"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">input =</span> text) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb4-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">count</span>(word, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sort =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb4-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># check spelling</span></span>
<span id="cb4-15">correct <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hunspell_check</span>(tokenized_text_pre<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>word, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dict =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dictionary</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"it_IT"</span>))</span>
<span id="cb4-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># incorrect words</span></span>
<span id="cb4-17">incorrect.words <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> tokenized_text_pre<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>word[<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>correct]</span>
<span id="cb4-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># find suggestions for incorrect words</span></span>
<span id="cb4-19">suggested.words <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hunspell_suggest</span>(incorrect.words, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dict =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dictionary</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"it_IT"</span>))</span>
<span id="cb4-20">suggested.words <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unlist</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lapply</span>(suggested.words, <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(x) x[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]))</span>
<span id="cb4-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># list of incorrect and suggested words</span></span>
<span id="cb4-22">word.list <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.data.frame</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cbind</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">word =</span> incorrect.words, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">best alternative</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> suggested.words))</span></code></pre></div>
</details>
</div>
<div class="cell">
<div class="cell-output-display">
<table quarto-disable-processing="true" class="table table-condensed table-bordered" style="width: auto !important; margin-left: auto; margin-right: auto;">
<caption>Spell checking text - 'Il mio canto libero'</caption>
 <thead>
  <tr>
   <th style="text-align:left;"> word </th>
   <th style="text-align:left;"> best alternative </th>
  </tr>
 </thead>
<tbody>
  <tr>
   <td style="text-align:left;"> emozzioni </td>
   <td style="text-align:left;"> emozioni </td>
  </tr>
  <tr>
   <td style="text-align:left;"> nudda </td>
   <td style="text-align:left;"> nuda </td>
  </tr>
  <tr>
   <td style="text-align:left;"> painto </td>
   <td style="text-align:left;"> pianto </td>
  </tr>
</tbody>
</table>

</div>
</div>
<p>The misspelled words in the song lyrics can be replaced with the suggested alternative using the code below.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">incorrect.whole.words <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">b"</span>, word.list<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>word, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">b"</span>)</span>
<span id="cb5-2">lyrics <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stri_replace_all_regex</span>(lyrics, incorrect.whole.words, suggested.words, </span>
<span id="cb5-3">                                 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">vectorize_all =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span></code></pre></div>
</details>
</div>
<p>The count of the words that were misspelled is correctly updated after spell checking and replacement.</p>
<div class="cell">
<div class="cell-output-display">
<table quarto-disable-processing="true" class="table table-condensed table-bordered" style="width: auto !important; margin-left: auto; margin-right: auto;">
<caption>Before spell checking</caption>
 <thead>
  <tr>
   <th style="text-align:left;"> word </th>
   <th style="text-align:right;"> n </th>
  </tr>
 </thead>
<tbody>
  <tr>
   <td style="text-align:left;"> emozioni </td>
   <td style="text-align:right;"> 1 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> emozzioni </td>
   <td style="text-align:right;"> 1 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> nuda </td>
   <td style="text-align:right;"> 1 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> nudda </td>
   <td style="text-align:right;"> 1 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> painto </td>
   <td style="text-align:right;"> 1 </td>
  </tr>
</tbody>
</table>

</div>
<div class="cell-output-display">
<table quarto-disable-processing="true" class="table table-condensed table-bordered" style="width: auto !important; margin-left: auto; margin-right: auto;">
<caption>After spell checking</caption>
 <thead>
  <tr>
   <th style="text-align:left;"> word </th>
   <th style="text-align:right;"> n </th>
  </tr>
 </thead>
<tbody>
  <tr>
   <td style="text-align:left;"> emozioni </td>
   <td style="text-align:right;"> 2 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> nuda </td>
   <td style="text-align:right;"> 2 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> pianto </td>
   <td style="text-align:right;"> 1 </td>
  </tr>
</tbody>
</table>

</div>
</div>
<p>The thumbnail image is credited to <a href="https://www.flaticon.com/free-icons/text-mining" title="text mining icons">Text mining icons created by Freepik - Flaticon</a></p>


</section>

 ]]></description>
  <category>text mining</category>
  <guid>https://amsabatini.netlify.app/posts/spell_checking/</guid>
  <pubDate>Wed, 01 Jan 2025 23:00:00 GMT</pubDate>
  <media:content url="https://amsabatini.netlify.app/posts/spell_checking/text-mining.png" medium="image" type="image/png" height="144" width="144"/>
</item>
<item>
  <title>Correspondence analysis: Part II</title>
  <dc:creator>Angelo Maria Sabatini</dc:creator>
  <link>https://amsabatini.netlify.app/posts/correspondence_analysis_2/</link>
  <description><![CDATA[ 




<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>In this post, we will briefly discuss an example of how Simple Correspondence Analysis (SCA) can be performed using the R programming language. Several functions from different packages are available in the R software for computing SCA. No matter what package we decide to use for the analysis (in this post, we will use the package FactoMineR), the package factoextra is great for producing ggplot2-based elegant visualizations of analysis results. A couple of other packages, namely gplots and corrplot, will also be used.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Libraries </span></span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(gplots)</span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(corrplot)</span>
<span id="cb1-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(FactoMineR)</span>
<span id="cb1-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(factoextra)</span>
<span id="cb1-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(kableExtra)</span></code></pre></div>
</details>
</div>
</section>
<section id="exemplary-dataset" class="level2">
<h2 class="anchored" data-anchor-id="exemplary-dataset">Exemplary dataset</h2>
<p><code>housetasks</code>, available in the package factoextra, is a data frame that contains the frequency of execution of 13 house tasks performed by the couple in four different ways: a) the wife only; b) alternatively; c) the husband only; d) jointly.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data</span>(housetasks)</span>
<span id="cb2-2">housetasks <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable</span>(</span>
<span id="cb2-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">align =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rrrr"</span>,</span>
<span id="cb2-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col.names =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Wife"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Alternating"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Husband"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Jointly"</span>),</span>
<span id="cb2-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">caption =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"House tasks contingency table"</span>,</span>
<span id="cb2-7">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable_classic</span>()</span></code></pre></div>
</details>
<div class="cell-output-display">
<table class="lightable-classic caption-top table table-sm table-striped small" data-quarto-postprocess="true">
<caption>House tasks contingency table</caption>
<thead>
<tr class="header">
<th style="text-align: left;" data-quarto-table-cell-role="th"></th>
<th style="text-align: right;" data-quarto-table-cell-role="th">Wife</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">Alternating</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">Husband</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">Jointly</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">Laundry</td>
<td style="text-align: right;">156</td>
<td style="text-align: right;">14</td>
<td style="text-align: right;">2</td>
<td style="text-align: right;">4</td>
</tr>
<tr class="even">
<td style="text-align: left;">Main_meal</td>
<td style="text-align: right;">124</td>
<td style="text-align: right;">20</td>
<td style="text-align: right;">5</td>
<td style="text-align: right;">4</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Dinner</td>
<td style="text-align: right;">77</td>
<td style="text-align: right;">11</td>
<td style="text-align: right;">7</td>
<td style="text-align: right;">13</td>
</tr>
<tr class="even">
<td style="text-align: left;">Breakfeast</td>
<td style="text-align: right;">82</td>
<td style="text-align: right;">36</td>
<td style="text-align: right;">15</td>
<td style="text-align: right;">7</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Tidying</td>
<td style="text-align: right;">53</td>
<td style="text-align: right;">11</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">57</td>
</tr>
<tr class="even">
<td style="text-align: left;">Dishes</td>
<td style="text-align: right;">32</td>
<td style="text-align: right;">24</td>
<td style="text-align: right;">4</td>
<td style="text-align: right;">53</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Shopping</td>
<td style="text-align: right;">33</td>
<td style="text-align: right;">23</td>
<td style="text-align: right;">9</td>
<td style="text-align: right;">55</td>
</tr>
<tr class="even">
<td style="text-align: left;">Official</td>
<td style="text-align: right;">12</td>
<td style="text-align: right;">46</td>
<td style="text-align: right;">23</td>
<td style="text-align: right;">15</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Driving</td>
<td style="text-align: right;">10</td>
<td style="text-align: right;">51</td>
<td style="text-align: right;">75</td>
<td style="text-align: right;">3</td>
</tr>
<tr class="even">
<td style="text-align: left;">Finances</td>
<td style="text-align: right;">13</td>
<td style="text-align: right;">13</td>
<td style="text-align: right;">21</td>
<td style="text-align: right;">66</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Insurance</td>
<td style="text-align: right;">8</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">53</td>
<td style="text-align: right;">77</td>
</tr>
<tr class="even">
<td style="text-align: left;">Repairs</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">3</td>
<td style="text-align: right;">160</td>
<td style="text-align: right;">2</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Holidays</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">6</td>
<td style="text-align: right;">153</td>
</tr>
</tbody>
</table>


</div>
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert the data frame to a table</span></span>
<span id="cb3-2">dt <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.table</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.matrix</span>(housetasks))</span>
<span id="cb3-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Graph</span></span>
<span id="cb3-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">balloonplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t</span>(dt), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main =</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"House tasks contingency table"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>,</span>
<span id="cb3-5">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">show.margins =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://amsabatini.netlify.app/posts/correspondence_analysis_2/index_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="implementation" class="level2">
<h2 class="anchored" data-anchor-id="implementation">Implementation</h2>
<p>The function <code>CA()</code> from the package FactoMineR is used. It performs the Singular Value Decomposition of the standardized residuals, see my previous post <a href="https://amsabatini.netlify.app/posts/correspondence_analysis_1/">here</a>. The first step of the analysis was done there in order to evaluate whether there was a significant dependency between the rows and columns using the chi-square statistic.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">res.ca <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CA</span>(housetasks, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">graph =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span>
<span id="cb4-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(res.ca)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>**Results of the Correspondence Analysis (CA)**
The row variable has  13  categories; the column variable has 4 categories
The chi square of independence between the two variables is equal to 1944.456 (p-value =  0 ).
*The results are available in the following objects:

   name              description                   
1  "$eig"            "eigenvalues"                 
2  "$col"            "results for the columns"     
3  "$col$coord"      "coord. for the columns"      
4  "$col$cos2"       "cos2 for the columns"        
5  "$col$contrib"    "contributions of the columns"
6  "$row"            "results for the rows"        
7  "$row$coord"      "coord. for the rows"         
8  "$row$cos2"       "cos2 for the rows"           
9  "$row$contrib"    "contributions of the rows"   
10 "$call"           "summary called parameters"   
11 "$call$marge.col" "weights of the columns"      
12 "$call$marge.row" "weights of the rows"         </code></pre>
</div>
</div>
</section>
<section id="visualization-and-interpretation" class="level2">
<h2 class="anchored" data-anchor-id="visualization-and-interpretation">Visualization and interpretation</h2>
<p>The following functions available the factoextra package can be used to help in the SCA interpretation and visualization:</p>
<div class="cell">
<div class="cell-output-display">
<table class="lightable-classic caption-top table table-sm table-striped small" data-quarto-postprocess="true">
<caption>Functions from FactoMineR package for SCA</caption>
<thead>
<tr class="header">
<th style="text-align: left;" data-quarto-table-cell-role="th">Function name</th>
<th style="text-align: left;" data-quarto-table-cell-role="th">Purpose</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">get_eigenvalue()</td>
<td style="text-align: left;">Extract the eigenvalues/variances retained by each dimension (axis)</td>
</tr>
<tr class="even">
<td style="text-align: left;">fviz_eig()</td>
<td style="text-align: left;">Visualize the eigenvalues</td>
</tr>
<tr class="odd">
<td style="text-align: left;">fviz_screeplot()</td>
<td style="text-align: left;">Scree plot</td>
</tr>
<tr class="even">
<td style="text-align: left;">get_ca_row()</td>
<td style="text-align: left;">Extract the results for rows</td>
</tr>
<tr class="odd">
<td style="text-align: left;">get_ca_col()</td>
<td style="text-align: left;">Extract the results for columns</td>
</tr>
<tr class="even">
<td style="text-align: left;">fviz_ca_row()</td>
<td style="text-align: left;">Visualize the results for rows</td>
</tr>
<tr class="odd">
<td style="text-align: left;">fviz_ca_col()</td>
<td style="text-align: left;">Visualize the results for columns</td>
</tr>
<tr class="even">
<td style="text-align: left;">fviz_ca_cos2()</td>
<td style="text-align: left;">Cos2 of rows on selected axes</td>
</tr>
<tr class="odd">
<td style="text-align: left;">fviz_ca_biplot()</td>
<td style="text-align: left;">Make a biplot of rows and columns</td>
</tr>
</tbody>
</table>


</div>
</div>
<section id="eigenvaluesvariance" class="level3">
<h3 class="anchored" data-anchor-id="eigenvaluesvariance">Eigenvalues/variance</h3>
<p>Eigenvalues correspond to the amount of information retained by each axis. Dimensions are ordered from largest to smallest and reported with the amount of variance each of them <em>explains</em> in the solution. Dimension 1 (Dim.1) explains the most variance in the solution, followed by dimension 2 (Dim.2) and so on. The cumulative percentage explained is obtained by adding the successive proportions of variance explained. For instance, 48.69% plus 39.91% equals 88.6%, and so forth. Therefore, about 88.6% of the variance is explained by the first two dimensions.</p>
<p>Eigenvalues can be used to determine the number of axes to retain. There is no “rule of thumb” to choose the number of dimensions to keep for the data interpretation. It depends on the research question and the need of the researcher. For example, if 80% of the total variation explained is believed satisfactory for the purpose of the analysis, then the number of dimensions necessary to achieve that goal will be considered. Generally, a good dimension reduction is achieved with the first few dimensions accounting for a large proportion of the variation. In the example in this post, the first two axes explain 88.6% of the variation.</p>
<p>An alternative method to determine the number of dimensions is to look at a Scree Plot, which is the plot of eigenvalues/variances ordered from largest to smallest. The number of components is determined at the point, beyond which the remaining eigenvalues are all relatively small and of comparable size.</p>
<p>In the example in this post, the house tasks contingency table contains 13 rows and 4 columns. If the data were random, the expected value of the eigenvalue for each axis would be 1/(nrow(housetasks)-1) (rows), and 1/(ncol(housetasks)-1) (columns). Any axis contributing more than the maximum of these two percentages, namely <img src="https://latex.codecogs.com/png.latex?33.33%5C%25"> in the example here, should be considered as important and included in the final solution.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">eig.val <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_eigenvalue</span>(res.ca)</span>
<span id="cb6-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(eig.val, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>      eigenvalue variance.percent cumulative.variance.percent
Dim.1       0.54            48.69                       48.69
Dim.2       0.45            39.91                       88.60
Dim.3       0.13            11.40                      100.00</code></pre>
</div>
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">v <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(housetasks)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ncol</span>(housetasks)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span></span>
<span id="cb8-2"></span>
<span id="cb8-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fviz_screeplot</span>(res.ca, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">addlabels =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb8-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_hline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yintercept =</span> v, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://amsabatini.netlify.app/posts/correspondence_analysis_2/index_files/figure-html/unnamed-chunk-5-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>According to the graph above, only Dim.1 and Dim.2 should be used in the solution. Dim.3 explains only 11.4% of the total variation, which is well below the stated threshold at 33.33%, hence it can be discarded. Dim.1 and Dim.2 explain approximately 48.7% and 39.9% of the total variation, respectively. This corresponds to a cumulative total of 88.6% of total variation retained by them.</p>
</section>
<section id="biplot" class="level3">
<h3 class="anchored" data-anchor-id="biplot">Biplot</h3>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># repel = TRUE to avoid text overlapping</span></span>
<span id="cb9-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fviz_ca_biplot</span>(res.ca, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">repel =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://amsabatini.netlify.app/posts/correspondence_analysis_2/index_files/figure-html/unnamed-chunk-6-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>The graph above is called symmetric plot, or biplot. The biplot is helpful to show global patterns existing within the data. Rows are represented by blue points and columns by red triangles. The distance between any pair of row points, or any pair of column points, gives a measure of their similarity (or dissimilarity). Row (column) points with similar profile are close in the biplot.</p>
<p>The biplot represents the row and column profiles simultaneously in a common space. It is worth stress that:</p>
<ul>
<li><em>the distance between any row and column items is not meaningful</em></li>
<li><em>only the distance between row points or the distance between column points can be interpreted</em>.</li>
</ul>
<p>In order to interpret the distance between column <em>and</em> row points, the column (row) profiles must be presented in row (column) space. The resulting type of map is called asymmetric biplot; it is not discussed in this post.</p>
</section>
<section id="graph-of-row-variables" class="level3">
<h3 class="anchored" data-anchor-id="graph-of-row-variables">Graph of row variables</h3>
<p>The function <code>get_ca_row()</code> is used to extract the results for row points. This function returns a list containing the coordinates, the squared cosine (cos2), the contribution and the inertia of row points:</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1">row <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_ca_row</span>(res.ca)</span>
<span id="cb10-2">row</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>Correspondence Analysis - Results for rows
 ===================================================
  Name       Description                
1 "$coord"   "Coordinates for the rows" 
2 "$cos2"    "Cos2 for the rows"        
3 "$contrib" "contributions of the rows"
4 "$inertia" "Inertia of the rows"      </code></pre>
</div>
</div>
<p>The components of the get_ca_row() function can be used in the plot of rows as follows:</p>
<ul>
<li><code>row$coord</code>: coordinates of each row point in each dimension (1, 2 and 3).</li>
<li><code>row$cos2</code>: quality of representation of rows.</li>
<li><code>var$contrib</code>: contribution of rows (in %) to the definition of the dimensions.</li>
</ul>
<p><strong>Coordinates of row points</strong></p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fviz_ca_row</span>(res.ca, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col.row =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blue"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shape.row =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">repel =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://amsabatini.netlify.app/posts/correspondence_analysis_2/index_files/figure-html/unnamed-chunk-8-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>The plot above shows the relationships between row points:</p>
<ul>
<li>Rows with a similar profile are grouped together.</li>
<li>Negatively correlated rows are positioned on opposite sides of the plot origin.</li>
<li>The distance between row points and the origin measures the quality of the row points on the scatter plot. The higher the distance, the better the quality.</li>
</ul>
<p><strong>Quality of representation of rows</strong></p>
<p>I recall that the quality of representation of the rows on the biplot is called the squared cosine (cos2) or the squared correlation. The cos2 measures the degree of association between rows and a particular axis. The values of the cos2 range in the interval between 0 and 1. The sum of the cos2 for rows on all the CA dimensions is equal to one. The quality of representation of a row in <img src="https://latex.codecogs.com/png.latex?n"> dimensions is simply the sum of the squared cosine of that row over the <img src="https://latex.codecogs.com/png.latex?n"> dimensions. If a row item is well represented by two dimensions, the sum of the cos2 should be close to one. For some of the row items, more than 2 dimensions may be required to perfectly represent the data.</p>
<p>It is possible to color row points by their cos2 values using the argument <code>col.row = "cos2"</code> in <code>fviz_ca_row()</code>. This produces a color gradient, which can be customized using the argument gradient.cols. For instance, <code>gradient.cols = c("white", "blue", "red")</code> means that:</p>
<ul>
<li>variables with low cos2 values will be colored in “white”</li>
<li>variables with mid cos2 values will be colored in “blue”</li>
<li>variables with high cos2 values will be colored in “red”</li>
</ul>
<p>The row variables with the larger value of cos2, contribute the most to the definition of the dimensions. Rows that contribute the most to the retained dimensions, i.e., Dim.1 and Dim.2, are the most important in the process of variance explanation. Rows that do not contribute much to the retained dimensions or that contribute to the last dimensions, i.e., Dim.3, are less important.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Color by cos2 values</span></span>
<span id="cb13-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fviz_ca_row</span>(res.ca, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col.row =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cos2"</span>,</span>
<span id="cb13-3">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">gradient.cols =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#00AFBB"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#E7B800"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#FC4E07"</span>), </span>
<span id="cb13-4">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">repel =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://amsabatini.netlify.app/posts/correspondence_analysis_2/index_files/figure-html/unnamed-chunk-9-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Cos2 of rows on Dim.1 and Dim.2</span></span>
<span id="cb14-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fviz_cos2</span>(res.ca, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">choice =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"row"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axes =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://amsabatini.netlify.app/posts/correspondence_analysis_2/index_files/figure-html/unnamed-chunk-9-2.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>The function <code>fviz_contrib()</code> can be used to draw a bar plot of row contributions. The red dashed line on the graph below indicates the expected average value, if the contributions were uniform.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Contributions of rows to dimension 1</span></span>
<span id="cb15-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fviz_contrib</span>(res.ca, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">choice =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"row"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axes =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">top =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://amsabatini.netlify.app/posts/correspondence_analysis_2/index_files/figure-html/unnamed-chunk-10-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Contributions of rows to dimension 2</span></span>
<span id="cb16-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fviz_contrib</span>(res.ca, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">choice =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"row"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axes =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">top =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://amsabatini.netlify.app/posts/correspondence_analysis_2/index_files/figure-html/unnamed-chunk-10-2.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Total contribution to dimension 1 and 2</span></span>
<span id="cb17-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fviz_contrib</span>(res.ca, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">choice =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"row"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axes =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">top =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://amsabatini.netlify.app/posts/correspondence_analysis_2/index_files/figure-html/unnamed-chunk-10-3.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>It can be seen that:</p>
<ul>
<li>The row items “Repairs”, “Laundry”, “Main_meal” and “Driving” are the most important in the definition of the first dimension.</li>
<li>The row items “Holidays” and “Repairs” contribute the most to the dimension 2.</li>
<li>The most important row points can be highlighted on the biplot, as explained above.</li>
</ul>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb18-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fviz_ca_row</span>(res.ca, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col.row =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"contrib"</span>,</span>
<span id="cb18-2">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">gradient.cols =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#00AFBB"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#E7B800"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#FC4E07"</span>), </span>
<span id="cb18-3">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">repel =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://amsabatini.netlify.app/posts/correspondence_analysis_2/index_files/figure-html/unnamed-chunk-11-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>The scatter plot gives an idea of what pole of the retained dimensions the row categories are contributing to. The row categories “Repair” and “Driving” have an important contribution to the positive pole of the first dimension, while the categories “Laundry” and “Main_meal” have an important contribution to the negative pole of the first dimension, and so forth. In other words, Dim.1 is mainly defined by the opposition of “Repair” and “Driving” (positive pole), and “Laundry” and “Main_meal” (negative pole).</p>
</section>
<section id="graph-of-column-variables" class="level3">
<h3 class="anchored" data-anchor-id="graph-of-column-variables">Graph of column variables</h3>
<p>The function <code>get_ca_col()</code> is used to extract the results for column variables. This function returns a list containing the coordinates, the squared cosine (cos2), the contribution and the inertia of column variables:</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb19-1">col <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_ca_col</span>(res.ca)</span>
<span id="cb19-2">col</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>Correspondence Analysis - Results for columns
 ===================================================
  Name       Description                   
1 "$coord"   "Coordinates for the columns" 
2 "$cos2"    "Cos2 for the columns"        
3 "$contrib" "contributions of the columns"
4 "$inertia" "Inertia of the columns"      </code></pre>
</div>
</div>
<p>The components of the <code>get_ca_col()</code> function can be used in the plot of columns as follows:</p>
<ul>
<li><code>col$coord</code>: coordinates of each column point in each dimension (1, 2 and 3).</li>
<li><code>col$cos2</code>: quality of representation of columns</li>
<li><code>var$contrib</code>: contribution of columns (in %) to the definition of the dimensions.</li>
</ul>
<p><strong>Coordinates of column points</strong></p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb21-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fviz_ca_col</span>(res.ca, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col.col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shape.col =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">17</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">repel =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://amsabatini.netlify.app/posts/correspondence_analysis_2/index_files/figure-html/unnamed-chunk-13-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>The plot above shows the relationships between column points:</p>
<ul>
<li>Columns with a similar profile are grouped together.</li>
<li>Negatively correlated columns are positioned on opposite sides of the plot origin.</li>
<li>The distance between column points and the origin measures the quality of the column points on the scatter polot. The higher the distance, the better the quality.</li>
</ul>
<p><strong>Quality of representation of columns</strong></p>
<p>I recall that the quality of representation of the columns on the biplot is called the squared cosine (cos2) or the squared correlation. The cos2 measures the degree of association between columns and a particular axis. The values of the cos2 range in the interval between 0 and 1. The sum of the cos2 for columns on all the CA dimensions is equal to one. The quality of representation of a column in <img src="https://latex.codecogs.com/png.latex?n"> dimensions is simply the sum of the squared cosine of that column over the <img src="https://latex.codecogs.com/png.latex?n"> dimensions. If a column item is well represented by two dimensions, the sum of the cos2 should be close to one. For some of the column items, more than 2 dimensions may be required to perfectly represent the data.</p>
<p>It is possible to color column points by their cos2 values using the argument <code>col.col = "cos2"</code> in <code>fviz_ca_col()</code>. This produces a color gradient, which can be customized using the argument gradient.cols. For instance, <code>gradient.cols = c("white", "blue", "red")</code> means that:</p>
<ul>
<li>variables with low cos2 values will be colored in “white”</li>
<li>variables with mid cos2 values will be colored in “blue”</li>
<li>variables with high cos2 values will be colored in “red”</li>
</ul>
<p>The column variables with the larger value of cos2, contribute the most to the definition of the dimensions. Columns that contribute the most to the retained dimensions, i.e., Dim.1 and Dim.2, are the most important in the process of variance explanation. Columns that do not contribute much to the retained dimensions or that contribute to the last dimensions, i.e., Dim.3, are less important.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb22-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Color by cos2 values</span></span>
<span id="cb22-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fviz_ca_col</span>(res.ca, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col.col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cos2"</span>,</span>
<span id="cb22-3">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">gradient.cols =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#00AFBB"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#E7B800"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#FC4E07"</span>), </span>
<span id="cb22-4">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">repel =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://amsabatini.netlify.app/posts/correspondence_analysis_2/index_files/figure-html/unnamed-chunk-14-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb23-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Cos2 of rows on Dim.1 and Dim.2</span></span>
<span id="cb23-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fviz_cos2</span>(res.ca, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">choice =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"col"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axes =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://amsabatini.netlify.app/posts/correspondence_analysis_2/index_files/figure-html/unnamed-chunk-14-2.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>The function <code>fviz_contrib()</code> can be used to draw a bar plot of column contributions. The red dashed line on the graph below indicates the expected average value, if the contributions were uniform.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb24-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Contributions of columns to dimension 1</span></span>
<span id="cb24-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fviz_contrib</span>(res.ca, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">choice =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"col"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axes =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">top =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://amsabatini.netlify.app/posts/correspondence_analysis_2/index_files/figure-html/unnamed-chunk-15-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb25-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Contributions of colums to dimension 2</span></span>
<span id="cb25-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fviz_contrib</span>(res.ca, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">choice =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"col"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axes =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">top =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://amsabatini.netlify.app/posts/correspondence_analysis_2/index_files/figure-html/unnamed-chunk-15-2.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb26-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Total contribution to dimension 1 and 2</span></span>
<span id="cb26-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fviz_contrib</span>(res.ca, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">choice =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"col"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axes =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">top =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://amsabatini.netlify.app/posts/correspondence_analysis_2/index_files/figure-html/unnamed-chunk-15-3.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>It can be seen that only the column item “Alternating” is not very well displayed on the first two dimensions. The position of this item must be interpreted with caution in the space formed by Dim.1 and Dim.2.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb27-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fviz_ca_col</span>(res.ca, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col.col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"contrib"</span>,</span>
<span id="cb27-2">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">gradient.cols =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#00AFBB"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#E7B800"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#FC4E07"</span>), </span>
<span id="cb27-3">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">repel =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://amsabatini.netlify.app/posts/correspondence_analysis_2/index_files/figure-html/unnamed-chunk-16-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="symmetric-biplot" class="level3">
<h3 class="anchored" data-anchor-id="symmetric-biplot">Symmetric biplot</h3>
<p>As mentioned above, the standard plot of SCAs is a symmetric biplot, in which both rows (blue points) and columns (red triangles) are represented in the same space using the principal coordinates. These coordinates represent the row and column profiles. In this case, only the distance between row points or the distance between column points can be interpreted.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb28-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fviz_ca_biplot</span>(res.ca, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">repel =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://amsabatini.netlify.app/posts/correspondence_analysis_2/index_files/figure-html/unnamed-chunk-17-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<blockquote class="blockquote">
<p>The series of two posts I have compiled so far concerning SCA just scratched the surface of their fascinating, and challenging, world. A lot more should be said to achieve a serious and meaningful interpretation of the results they can offer to the analyst. Maybe, in the future, I will continue the series with additional contributions. Up to now, that’s it.</p>
</blockquote>


</section>
</section>

 ]]></description>
  <category>multivariate statistics</category>
  <guid>https://amsabatini.netlify.app/posts/correspondence_analysis_2/</guid>
  <pubDate>Mon, 09 Dec 2024 23:00:00 GMT</pubDate>
  <media:content url="https://amsabatini.netlify.app/posts/correspondence_analysis_2/cover.png" medium="image" type="image/png" height="102" width="144"/>
</item>
<item>
  <title>Correspondence analysis: Part I</title>
  <dc:creator>Angelo Maria Sabatini</dc:creator>
  <link>https://amsabatini.netlify.app/posts/correspondence_analysis_1/</link>
  <description><![CDATA[ 




<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>Correspondence Analysis (CA) is a type of multidimensional scaling, one of several methods that are available for developing spatial models that reveal associations between two or more categorical variables. If data of only two variables are involved, the method is usually called <strong>Simple Correspondence Analysis</strong> (SCA); if data of more than two variables are considered in the dataset, then the method is usually called Multiple Correspondence Analysis (MCA).</p>
<p>SCA is often used in combination with a standard chi-squared test of independence for two categorical variables that form a contingency table. We recall that a contingency table displays frequencies for combinations of two categorical variables; analysts also refer to contingency tables as crosstabulation and two-way tables. Contingency tables classify outcomes for one variable in rows and the other in columns. The values at the row and column intersections are frequencies for each unique combination of the two variables. These values can suggest whether or not the two variables are correlated.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Libraries </span></span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(gplots)</span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(corrplot)</span>
<span id="cb1-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(factoextra)</span>
<span id="cb1-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(kableExtra) </span></code></pre></div>
</details>
</div>
</section>
<section id="exemplary-dataset" class="level2">
<h2 class="anchored" data-anchor-id="exemplary-dataset">Exemplary dataset</h2>
<p><code>housetasks</code>, available in the package factoextra, is a data frame that contains the frequency of execution of 13 house tasks performed by the couple in four different ways: a) the wife only; b) alternatively; c) the husband only; d) jointly.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data</span>(housetasks)</span>
<span id="cb2-2">housetasks <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable</span>(</span>
<span id="cb2-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">align =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rrrr"</span>,</span>
<span id="cb2-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col.names =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Wife"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Alternating"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Husband"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Jointly"</span>),</span>
<span id="cb2-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">caption =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"House tasks contingency table"</span>,</span>
<span id="cb2-7">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable_classic</span>()</span></code></pre></div>
</details>
<div class="cell-output-display">
<table class="lightable-classic caption-top table table-sm table-striped small" data-quarto-postprocess="true">
<caption>House tasks contingency table</caption>
<thead>
<tr class="header">
<th style="text-align: left;" data-quarto-table-cell-role="th"></th>
<th style="text-align: right;" data-quarto-table-cell-role="th">Wife</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">Alternating</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">Husband</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">Jointly</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">Laundry</td>
<td style="text-align: right;">156</td>
<td style="text-align: right;">14</td>
<td style="text-align: right;">2</td>
<td style="text-align: right;">4</td>
</tr>
<tr class="even">
<td style="text-align: left;">Main_meal</td>
<td style="text-align: right;">124</td>
<td style="text-align: right;">20</td>
<td style="text-align: right;">5</td>
<td style="text-align: right;">4</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Dinner</td>
<td style="text-align: right;">77</td>
<td style="text-align: right;">11</td>
<td style="text-align: right;">7</td>
<td style="text-align: right;">13</td>
</tr>
<tr class="even">
<td style="text-align: left;">Breakfeast</td>
<td style="text-align: right;">82</td>
<td style="text-align: right;">36</td>
<td style="text-align: right;">15</td>
<td style="text-align: right;">7</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Tidying</td>
<td style="text-align: right;">53</td>
<td style="text-align: right;">11</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">57</td>
</tr>
<tr class="even">
<td style="text-align: left;">Dishes</td>
<td style="text-align: right;">32</td>
<td style="text-align: right;">24</td>
<td style="text-align: right;">4</td>
<td style="text-align: right;">53</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Shopping</td>
<td style="text-align: right;">33</td>
<td style="text-align: right;">23</td>
<td style="text-align: right;">9</td>
<td style="text-align: right;">55</td>
</tr>
<tr class="even">
<td style="text-align: left;">Official</td>
<td style="text-align: right;">12</td>
<td style="text-align: right;">46</td>
<td style="text-align: right;">23</td>
<td style="text-align: right;">15</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Driving</td>
<td style="text-align: right;">10</td>
<td style="text-align: right;">51</td>
<td style="text-align: right;">75</td>
<td style="text-align: right;">3</td>
</tr>
<tr class="even">
<td style="text-align: left;">Finances</td>
<td style="text-align: right;">13</td>
<td style="text-align: right;">13</td>
<td style="text-align: right;">21</td>
<td style="text-align: right;">66</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Insurance</td>
<td style="text-align: right;">8</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">53</td>
<td style="text-align: right;">77</td>
</tr>
<tr class="even">
<td style="text-align: left;">Repairs</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">3</td>
<td style="text-align: right;">160</td>
<td style="text-align: right;">2</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Holidays</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">6</td>
<td style="text-align: right;">153</td>
</tr>
</tbody>
</table>


</div>
</div>
<p>To easily interpret the contingency table, a graphical matrix can be drawn using the function <code>balloonplot()</code> from the gplots package. In this graph, each cell contains a dot whose size reflects the relative magnitude of the value it contains.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert the data frame to a table</span></span>
<span id="cb3-2">dt <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.table</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.matrix</span>(housetasks))</span>
<span id="cb3-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Graph</span></span>
<span id="cb3-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">balloonplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t</span>(dt), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"House tasks contingency table"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>,</span>
<span id="cb3-5">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">show.margins =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://amsabatini.netlify.app/posts/correspondence_analysis_1/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="theory-an-overview" class="level2">
<h2 class="anchored" data-anchor-id="theory-an-overview">Theory: An overview</h2>
<p>Let us consider a generic two-dimensional contingency table <img src="https://latex.codecogs.com/png.latex?%5Cbf%7BT%7D">, having <img src="https://latex.codecogs.com/png.latex?R"> rows (corresponding to the levels of the categorical variable <img src="https://latex.codecogs.com/png.latex?X">) and <img src="https://latex.codecogs.com/png.latex?C"> columns (corresponding to the levels of the categorical variable <img src="https://latex.codecogs.com/png.latex?Y">). The table is built based on a dataset of <img src="https://latex.codecogs.com/png.latex?n"> observations, which are distributed across the <img src="https://latex.codecogs.com/png.latex?R%5Ccdot%20C"> cells of <img src="https://latex.codecogs.com/png.latex?%5Cbf%7BT%7D">. Each cell shows the count <img src="https://latex.codecogs.com/png.latex?n_%7Bij%7D,%5C,i=1,%5Ccdots,R;%5C,j=1,%5Ccdots,C">.</p>
<section id="key-terms" class="level3">
<h3 class="anchored" data-anchor-id="key-terms">Key terms</h3>
<p><strong>Row marginals</strong></p>
<p>The row marginals (or row margins) can be computed by taking the row sums of the counts <img src="https://latex.codecogs.com/png.latex?n_%7Bij%7D">:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0An_%7Bi+%7D=%5Csum_%7Bj=1%7D%5EC%20n_%7Bij%7D,%5C;i=1,%5Cdots,R%0A"></p>
<p><strong>Column marginals</strong></p>
<p>The column marginals (or col margins) can be computed by taking the column sums of the counts <img src="https://latex.codecogs.com/png.latex?n_%7Bij%7D">:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0An_%7B+j%7D=%5Csum_%7Bi=1%7D%5ER%20n_%7Bij%7D%5C;j=1,%5Cdots,C%0A"></p>
<p><strong>Grand total</strong></p>
<p>The gran total is the complete number after everything has been added up:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0An_%7B++%7D=%5Csum_%7Bi=1%7D%5ER%20n_%7Bi+%7D=%5Csum_%7Bj=1%7D%5ECn_%7B+j%7D=%5Csum_%7Bi=1%7D%5ER%5Csum_%7Bj=1%7D%5ECn_%7Bij%7D=n%0A"></p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Row marginals</span></span>
<span id="cb4-2">row.sum <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">apply</span>(housetasks, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, sum)</span>
<span id="cb4-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Column marginals</span></span>
<span id="cb4-4">col.sum <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">apply</span>(housetasks, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, sum)</span>
<span id="cb4-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Gran total</span></span>
<span id="cb4-6">n <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(housetasks)</span>
<span id="cb4-7">housetasks <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb4-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">total =</span> row.sum) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb4-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbind</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Total"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(col.sum, n)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb4-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable</span>(</span>
<span id="cb4-11">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">align =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rrrrr"</span>,</span>
<span id="cb4-12">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col.names =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Wife"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Alternating"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Husband"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Jointly"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Total"</span>),</span>
<span id="cb4-13">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">caption =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"House task contingency table with row, column margins and gran total"</span>,</span>
<span id="cb4-14">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb4-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable_classic</span>()</span></code></pre></div>
</details>
<div class="cell-output-display">
<table class="lightable-classic caption-top table table-sm table-striped small" data-quarto-postprocess="true">
<caption>House task contingency table with row, column margins and gran total</caption>
<thead>
<tr class="header">
<th style="text-align: left;" data-quarto-table-cell-role="th"></th>
<th style="text-align: right;" data-quarto-table-cell-role="th">Wife</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">Alternating</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">Husband</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">Jointly</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">Total</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">Laundry</td>
<td style="text-align: right;">156</td>
<td style="text-align: right;">14</td>
<td style="text-align: right;">2</td>
<td style="text-align: right;">4</td>
<td style="text-align: right;">176</td>
</tr>
<tr class="even">
<td style="text-align: left;">Main_meal</td>
<td style="text-align: right;">124</td>
<td style="text-align: right;">20</td>
<td style="text-align: right;">5</td>
<td style="text-align: right;">4</td>
<td style="text-align: right;">153</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Dinner</td>
<td style="text-align: right;">77</td>
<td style="text-align: right;">11</td>
<td style="text-align: right;">7</td>
<td style="text-align: right;">13</td>
<td style="text-align: right;">108</td>
</tr>
<tr class="even">
<td style="text-align: left;">Breakfeast</td>
<td style="text-align: right;">82</td>
<td style="text-align: right;">36</td>
<td style="text-align: right;">15</td>
<td style="text-align: right;">7</td>
<td style="text-align: right;">140</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Tidying</td>
<td style="text-align: right;">53</td>
<td style="text-align: right;">11</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">57</td>
<td style="text-align: right;">122</td>
</tr>
<tr class="even">
<td style="text-align: left;">Dishes</td>
<td style="text-align: right;">32</td>
<td style="text-align: right;">24</td>
<td style="text-align: right;">4</td>
<td style="text-align: right;">53</td>
<td style="text-align: right;">113</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Shopping</td>
<td style="text-align: right;">33</td>
<td style="text-align: right;">23</td>
<td style="text-align: right;">9</td>
<td style="text-align: right;">55</td>
<td style="text-align: right;">120</td>
</tr>
<tr class="even">
<td style="text-align: left;">Official</td>
<td style="text-align: right;">12</td>
<td style="text-align: right;">46</td>
<td style="text-align: right;">23</td>
<td style="text-align: right;">15</td>
<td style="text-align: right;">96</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Driving</td>
<td style="text-align: right;">10</td>
<td style="text-align: right;">51</td>
<td style="text-align: right;">75</td>
<td style="text-align: right;">3</td>
<td style="text-align: right;">139</td>
</tr>
<tr class="even">
<td style="text-align: left;">Finances</td>
<td style="text-align: right;">13</td>
<td style="text-align: right;">13</td>
<td style="text-align: right;">21</td>
<td style="text-align: right;">66</td>
<td style="text-align: right;">113</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Insurance</td>
<td style="text-align: right;">8</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">53</td>
<td style="text-align: right;">77</td>
<td style="text-align: right;">139</td>
</tr>
<tr class="even">
<td style="text-align: left;">Repairs</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">3</td>
<td style="text-align: right;">160</td>
<td style="text-align: right;">2</td>
<td style="text-align: right;">165</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Holidays</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">6</td>
<td style="text-align: right;">153</td>
<td style="text-align: right;">160</td>
</tr>
<tr class="even">
<td style="text-align: left;">Total</td>
<td style="text-align: right;">600</td>
<td style="text-align: right;">254</td>
<td style="text-align: right;">381</td>
<td style="text-align: right;">509</td>
<td style="text-align: right;">1744</td>
</tr>
</tbody>
</table>


</div>
</div>
<p>The gran total is obtained by summing the values of the row margin or the values of the col margin (<img src="https://latex.codecogs.com/png.latex?n="> 1744).</p>
<p>To compare rows (or columns), their profiles can be analyzed, in the search for similar rows (or columns).</p>
<p><strong>Row profile</strong></p>
<p>The profile of a row (or row profile) is calculated by taking each row point and dividing by the corresponding value of the row margin:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cunderline%7Ba%7D_i,%5C;i=1,%5Cdots,R=%5C%7B%5Cunderline%7Ba%7D_%7Bi_j%7D,%5C;j=1,%5Cdots,C%5C%7D=%5C%7Bn_%7Bij%7D/n_%7Bi+%7D,%5C;j=1,%5Cdots,C%5C%7D%0A"></p>
<p><strong>Average row profile</strong></p>
<p>The average row profile can be computed from the col margin after dividing it by the grand total:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cunderline%7Br%7D=%5C%7Br_j=n_%7B+j%7D/n,%5C;j=1,%5Cdots,C%5C%7D%0A"></p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Row profile</span></span>
<span id="cb5-2">row.profile <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> housetasks<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>row.sum</span>
<span id="cb5-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Average row profile</span></span>
<span id="cb5-4">average.row.profile <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> col.sum<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>n</span>
<span id="cb5-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Row margins</span></span>
<span id="cb5-6">row.profile.sum <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">apply</span>(row.profile, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, sum)</span>
<span id="cb5-7"></span>
<span id="cb5-8">row.profile <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb5-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">TOTAL =</span> row.profile.sum) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb5-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbind</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Average row profile</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(average.row.profile, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(average.row.profile))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb5-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable</span>(</span>
<span id="cb5-12">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">align =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rrrrr"</span>,</span>
<span id="cb5-13">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col.names =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Wife"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Alternating"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Husband"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Jointly"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Total"</span>),</span>
<span id="cb5-14">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">digits =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,</span>
<span id="cb5-15">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">caption =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"House tasks data frame with row profiles and average row profile"</span>,</span>
<span id="cb5-16">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb5-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable_classic</span>()</span></code></pre></div>
</details>
<div class="cell-output-display">
<table class="lightable-classic caption-top table table-sm table-striped small" data-quarto-postprocess="true">
<caption>House tasks data frame with row profiles and average row profile</caption>
<thead>
<tr class="header">
<th style="text-align: left;" data-quarto-table-cell-role="th"></th>
<th style="text-align: right;" data-quarto-table-cell-role="th">Wife</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">Alternating</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">Husband</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">Jointly</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">Total</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">Laundry</td>
<td style="text-align: right;">0.8864</td>
<td style="text-align: right;">0.0795</td>
<td style="text-align: right;">0.0114</td>
<td style="text-align: right;">0.0227</td>
<td style="text-align: right;">1</td>
</tr>
<tr class="even">
<td style="text-align: left;">Main_meal</td>
<td style="text-align: right;">0.8105</td>
<td style="text-align: right;">0.1307</td>
<td style="text-align: right;">0.0327</td>
<td style="text-align: right;">0.0261</td>
<td style="text-align: right;">1</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Dinner</td>
<td style="text-align: right;">0.7130</td>
<td style="text-align: right;">0.1019</td>
<td style="text-align: right;">0.0648</td>
<td style="text-align: right;">0.1204</td>
<td style="text-align: right;">1</td>
</tr>
<tr class="even">
<td style="text-align: left;">Breakfeast</td>
<td style="text-align: right;">0.5857</td>
<td style="text-align: right;">0.2571</td>
<td style="text-align: right;">0.1071</td>
<td style="text-align: right;">0.0500</td>
<td style="text-align: right;">1</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Tidying</td>
<td style="text-align: right;">0.4344</td>
<td style="text-align: right;">0.0902</td>
<td style="text-align: right;">0.0082</td>
<td style="text-align: right;">0.4672</td>
<td style="text-align: right;">1</td>
</tr>
<tr class="even">
<td style="text-align: left;">Dishes</td>
<td style="text-align: right;">0.2832</td>
<td style="text-align: right;">0.2124</td>
<td style="text-align: right;">0.0354</td>
<td style="text-align: right;">0.4690</td>
<td style="text-align: right;">1</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Shopping</td>
<td style="text-align: right;">0.2750</td>
<td style="text-align: right;">0.1917</td>
<td style="text-align: right;">0.0750</td>
<td style="text-align: right;">0.4583</td>
<td style="text-align: right;">1</td>
</tr>
<tr class="even">
<td style="text-align: left;">Official</td>
<td style="text-align: right;">0.1250</td>
<td style="text-align: right;">0.4792</td>
<td style="text-align: right;">0.2396</td>
<td style="text-align: right;">0.1562</td>
<td style="text-align: right;">1</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Driving</td>
<td style="text-align: right;">0.0719</td>
<td style="text-align: right;">0.3669</td>
<td style="text-align: right;">0.5396</td>
<td style="text-align: right;">0.0216</td>
<td style="text-align: right;">1</td>
</tr>
<tr class="even">
<td style="text-align: left;">Finances</td>
<td style="text-align: right;">0.1150</td>
<td style="text-align: right;">0.1150</td>
<td style="text-align: right;">0.1858</td>
<td style="text-align: right;">0.5841</td>
<td style="text-align: right;">1</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Insurance</td>
<td style="text-align: right;">0.0576</td>
<td style="text-align: right;">0.0072</td>
<td style="text-align: right;">0.3813</td>
<td style="text-align: right;">0.5540</td>
<td style="text-align: right;">1</td>
</tr>
<tr class="even">
<td style="text-align: left;">Repairs</td>
<td style="text-align: right;">0.0000</td>
<td style="text-align: right;">0.0182</td>
<td style="text-align: right;">0.9697</td>
<td style="text-align: right;">0.0121</td>
<td style="text-align: right;">1</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Holidays</td>
<td style="text-align: right;">0.0000</td>
<td style="text-align: right;">0.0063</td>
<td style="text-align: right;">0.0375</td>
<td style="text-align: right;">0.9562</td>
<td style="text-align: right;">1</td>
</tr>
<tr class="even">
<td style="text-align: left;">Average row profile</td>
<td style="text-align: right;">0.3440</td>
<td style="text-align: right;">0.1456</td>
<td style="text-align: right;">0.2185</td>
<td style="text-align: right;">0.2919</td>
<td style="text-align: right;">1</td>
</tr>
</tbody>
</table>


</div>
</div>
<p><strong>Column profile</strong></p>
<p>The profile of a column (or col profile) is calculated by taking each column point and dividing by the corresponding value of the col margin:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cunderline%7Bb%7D_j,%5C;j=1,%5Cdots,C=%5C%7B%5Cunderline%7Bb%7D_%7Bj_i%7D,%5C;i=1,%5Cdots,R%5C%7D=%5C%7Bn_%7Bij%7D/n_%7B+j%7D,%5C;i=1,%5Cdots,R%5C%7D%0A"></p>
<p><strong>Average column profile</strong></p>
<p>The average column profile (or average col profile) can be computed from the row marginal after dividing it by the grand total:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cunderline%7Bc%7D=%5C%7Bc_i=n_%7Bi+%7D/n,%5C;i=1,%5Cdots,R%5C%7D%0A"></p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Column profile</span></span>
<span id="cb6-2">col.profile <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t</span>(housetasks)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>col.sum</span>
<span id="cb6-3">col.profile <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.data.frame</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t</span>(col.profile))</span>
<span id="cb6-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Average column profile</span></span>
<span id="cb6-5">average.col.profile <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> row.sum<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>n</span>
<span id="cb6-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Column margins</span></span>
<span id="cb6-7">col.profile.sum <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">apply</span>(col.profile, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, sum)</span>
<span id="cb6-8"></span>
<span id="cb6-9">col.profile <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb6-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Average col profile</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> average.col.profile) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb6-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbind</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Total =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(col.profile.sum, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(average.col.profile))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb6-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable</span>(</span>
<span id="cb6-13">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">align =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rrrrr"</span>,</span>
<span id="cb6-14">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col.names =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Wife"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Alternating"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Husband"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Jointly"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Average col profile"</span>),</span>
<span id="cb6-15">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">digits =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,</span>
<span id="cb6-16">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">caption =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"House tasks data frame with col profiles and average col profile"</span>,</span>
<span id="cb6-17">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb6-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable_classic</span>()</span></code></pre></div>
</details>
<div class="cell-output-display">
<table class="lightable-classic caption-top table table-sm table-striped small" data-quarto-postprocess="true">
<caption>House tasks data frame with col profiles and average col profile</caption>
<thead>
<tr class="header">
<th style="text-align: left;" data-quarto-table-cell-role="th"></th>
<th style="text-align: right;" data-quarto-table-cell-role="th">Wife</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">Alternating</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">Husband</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">Jointly</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">Average col profile</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">Laundry</td>
<td style="text-align: right;">0.2600</td>
<td style="text-align: right;">0.0551</td>
<td style="text-align: right;">0.0052</td>
<td style="text-align: right;">0.0079</td>
<td style="text-align: right;">0.1009</td>
</tr>
<tr class="even">
<td style="text-align: left;">Main_meal</td>
<td style="text-align: right;">0.2067</td>
<td style="text-align: right;">0.0787</td>
<td style="text-align: right;">0.0131</td>
<td style="text-align: right;">0.0079</td>
<td style="text-align: right;">0.0877</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Dinner</td>
<td style="text-align: right;">0.1283</td>
<td style="text-align: right;">0.0433</td>
<td style="text-align: right;">0.0184</td>
<td style="text-align: right;">0.0255</td>
<td style="text-align: right;">0.0619</td>
</tr>
<tr class="even">
<td style="text-align: left;">Breakfeast</td>
<td style="text-align: right;">0.1367</td>
<td style="text-align: right;">0.1417</td>
<td style="text-align: right;">0.0394</td>
<td style="text-align: right;">0.0138</td>
<td style="text-align: right;">0.0803</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Tidying</td>
<td style="text-align: right;">0.0883</td>
<td style="text-align: right;">0.0433</td>
<td style="text-align: right;">0.0026</td>
<td style="text-align: right;">0.1120</td>
<td style="text-align: right;">0.0700</td>
</tr>
<tr class="even">
<td style="text-align: left;">Dishes</td>
<td style="text-align: right;">0.0533</td>
<td style="text-align: right;">0.0945</td>
<td style="text-align: right;">0.0105</td>
<td style="text-align: right;">0.1041</td>
<td style="text-align: right;">0.0648</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Shopping</td>
<td style="text-align: right;">0.0550</td>
<td style="text-align: right;">0.0906</td>
<td style="text-align: right;">0.0236</td>
<td style="text-align: right;">0.1081</td>
<td style="text-align: right;">0.0688</td>
</tr>
<tr class="even">
<td style="text-align: left;">Official</td>
<td style="text-align: right;">0.0200</td>
<td style="text-align: right;">0.1811</td>
<td style="text-align: right;">0.0604</td>
<td style="text-align: right;">0.0295</td>
<td style="text-align: right;">0.0550</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Driving</td>
<td style="text-align: right;">0.0167</td>
<td style="text-align: right;">0.2008</td>
<td style="text-align: right;">0.1969</td>
<td style="text-align: right;">0.0059</td>
<td style="text-align: right;">0.0797</td>
</tr>
<tr class="even">
<td style="text-align: left;">Finances</td>
<td style="text-align: right;">0.0217</td>
<td style="text-align: right;">0.0512</td>
<td style="text-align: right;">0.0551</td>
<td style="text-align: right;">0.1297</td>
<td style="text-align: right;">0.0648</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Insurance</td>
<td style="text-align: right;">0.0133</td>
<td style="text-align: right;">0.0039</td>
<td style="text-align: right;">0.1391</td>
<td style="text-align: right;">0.1513</td>
<td style="text-align: right;">0.0797</td>
</tr>
<tr class="even">
<td style="text-align: left;">Repairs</td>
<td style="text-align: right;">0.0000</td>
<td style="text-align: right;">0.0118</td>
<td style="text-align: right;">0.4199</td>
<td style="text-align: right;">0.0039</td>
<td style="text-align: right;">0.0946</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Holidays</td>
<td style="text-align: right;">0.0000</td>
<td style="text-align: right;">0.0039</td>
<td style="text-align: right;">0.0157</td>
<td style="text-align: right;">0.3006</td>
<td style="text-align: right;">0.0917</td>
</tr>
<tr class="even">
<td style="text-align: left;">Total</td>
<td style="text-align: right;">1.0000</td>
<td style="text-align: right;">1.0000</td>
<td style="text-align: right;">1.0000</td>
<td style="text-align: right;">1.0000</td>
<td style="text-align: right;">1.0000</td>
</tr>
</tbody>
</table>


</div>
</div>
<p><strong>Distance (or similarity) between row profiles</strong></p>
<p>This metrics is useful to compare how similar to each other are two rows of the contingency table:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0Ad%5E2_%7Bkl%7D,%5C;k,l=1,%5Cdots,R=%5CVert%20%5Cunderline%7Ba%7D_k-%5Cunderline%7Ba%7D_%7Bl%7D%5CVert%5E2_%5Cunderline%7Br%7D=%5Clarge%5Csum_%7Bj=1%7D%5EC%5Cdfrac%7B(%5Cunderline%7Ba%7D_%7Bk_j%7D-%5Cunderline%7Ba%7D_%7Bl_j%7D)%5E2%7D%7Br_j%7D%0A"></p>
<p>Recall that we need to normalize each component within the sum to the corresponding element of the average row profile.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># "Dinner" and "Driving" profiles</span></span>
<span id="cb7-2">dinner.p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> row.profile[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Dinner"</span>, ]</span>
<span id="cb7-3">driving.p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> row.profile[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Driving"</span>, ]</span>
<span id="cb7-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Distance between "Dinner" and "Driving"</span></span>
<span id="cb7-5">d2_1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(((dinner.p <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> driving.p)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>average.row.profile)</span>
<span id="cb7-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># "Breakfeast" profile</span></span>
<span id="cb7-7">breakfast.p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> row.profile[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Breakfeast"</span>, ]</span>
<span id="cb7-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Distance between "Dinner" and "Breakfeast"</span></span>
<span id="cb7-9">d2_2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(((dinner.p <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> breakfast.p)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>average.row.profile)</span></code></pre></div>
</details>
</div>
<p>Example - The similarity between “Dinner” and “Driving” profiles is 2.742, whereas the similarity between “Dinner” and “Breakfeast” is 0.238.</p>
<p><strong>Distance (or similarity) between col profiles</strong></p>
<p>This metrics is useful to compare how similar to each other are two columns of the contingency table:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0Ad%5E2_%7Bkl%7D,%5C;k,l=1,%5Cdots,C=%5CVert%20%5Cunderline%7Bb%7D_k-%5Cunderline%7Bb%7D_l%5CVert%5E2_%5Cunderline%7Bc%7D=%5Clarge%5Csum_%7Bi=1%7D%5ER%5Cdfrac%7B(%5Cunderline%7Bb%7D_%7Bk_i%7D-%5Cunderline%7Bb%7D_%7Bl_i%7D)%5E2%7D%7Bc_i%7D%0A"></p>
<p>Recall that we need to normalize each component within the sum to the corresponding element of the average col profile.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># "Wife" and "Husband" profiles</span></span>
<span id="cb8-2">wife.p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> col.profile[, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Wife"</span>]</span>
<span id="cb8-3">husband.p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> col.profile[, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Husband"</span>]</span>
<span id="cb8-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Distance between "Wife" and "Husband"</span></span>
<span id="cb8-5">d2_1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(((wife.p <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> husband.p)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> average.col.profile)</span>
<span id="cb8-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># "Jointly" profile</span></span>
<span id="cb8-7">jointly.p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> col.profile[, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Jointly"</span>]</span>
<span id="cb8-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Distance between "Wife" and "Jointly"</span></span>
<span id="cb8-9">d2_2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(((wife.p <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> jointly.p)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> average.col.profile)</span></code></pre></div>
</details>
</div>
<p>Example - The similarity between “Wife” and “Husband” profiles is 4.05, whereas the similarity between “Wife” and “Jointly” is 2.935.</p>
<p><strong>Distance (or similarity) between each row profile and the average row profile</strong></p>
<p>This metrics is useful to compare how similar to the average row profile is any row profile.</p>
<p><img src="https://latex.codecogs.com/png.latex?%0Ad%5E2_%7Bk%7D,%5C;k=1,%5Cdots,R=%5CVert%5Cunderline%7Ba%7D_k-%5Cunderline%7Br%7D%5CVert%5E2_%5Cunderline%7Br%7D=%5Clarge%5Csum_%7Bj=1%7D%5EC%5Cdfrac%7B(%5Cunderline%7Ba%7D_%7Bk_j%7D-r_%7Bj%7D)%5E2%7D%7Br_j%7D%0A"></p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">d2.row <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">apply</span>(row.profile, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, </span>
<span id="cb9-2">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(row.p, av.p){<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(((row.p <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> av.p)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>av.p)}, </span>
<span id="cb9-3">        average.row.profile)</span>
<span id="cb9-4"></span>
<span id="cb9-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.matrix</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(d2.row,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb9-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable</span>(</span>
<span id="cb9-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">align =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rc"</span>,</span>
<span id="cb9-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col.names =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Task"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Similarity"</span>),</span>
<span id="cb9-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">digits =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,</span>
<span id="cb9-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">caption =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Similarity between each row profile and the average row profile"</span>,</span>
<span id="cb9-11">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb9-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable_classic</span>()</span></code></pre></div>
</details>
<div class="cell-output-display">
<table class="lightable-classic caption-top table table-sm table-striped small" data-quarto-postprocess="true">
<caption>Similarity between each row profile and the average row profile</caption>
<thead>
<tr class="header">
<th style="text-align: left;" data-quarto-table-cell-role="th">Task</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">Similarity</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">Laundry</td>
<td style="text-align: right;">1.329</td>
</tr>
<tr class="even">
<td style="text-align: left;">Main_meal</td>
<td style="text-align: right;">1.034</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Dinner</td>
<td style="text-align: right;">0.618</td>
</tr>
<tr class="even">
<td style="text-align: left;">Breakfeast</td>
<td style="text-align: right;">0.512</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Tidying</td>
<td style="text-align: right;">0.353</td>
</tr>
<tr class="even">
<td style="text-align: left;">Dishes</td>
<td style="text-align: right;">0.302</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Shopping</td>
<td style="text-align: right;">0.218</td>
</tr>
<tr class="even">
<td style="text-align: left;">Official</td>
<td style="text-align: right;">0.968</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Driving</td>
<td style="text-align: right;">1.274</td>
</tr>
<tr class="even">
<td style="text-align: left;">Finances</td>
<td style="text-align: right;">0.456</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Insurance</td>
<td style="text-align: right;">0.727</td>
</tr>
<tr class="even">
<td style="text-align: left;">Repairs</td>
<td style="text-align: right;">3.307</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Holidays</td>
<td style="text-align: right;">2.140</td>
</tr>
</tbody>
</table>


</div>
</div>
<p><strong>Distance (or similarity) between each col profile and the average col profile</strong></p>
<p>This metrics is useful to compare how similar to the average col profile is any col profile.</p>
<p><img src="https://latex.codecogs.com/png.latex?%0Ad%5E2_%7Bl%7D,%5C;l=1,%5Cdots,C=%5CVert%5Cunderline%7Bb%7D_l-%5Cunderline%7Bc%7D%5CVert%5E2_%5Cunderline%7Bc%7D=%5Clarge%5Csum_%7Bi=1%7D%5ER%5Cdfrac%7B(%5Cunderline%7Bb%7D_%7Bl_i%7D-c_i)%5E2%7D%7Bc_i%7D%0A"></p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1">d2.col <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">apply</span>(col.profile, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, </span>
<span id="cb10-2">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(col.p, av.p){<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(((col.p <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> av.p)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>av.p)}, </span>
<span id="cb10-3">        average.col.profile)</span>
<span id="cb10-4"></span>
<span id="cb10-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.matrix</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(d2.col,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb10-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable</span>(</span>
<span id="cb10-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">align =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rc"</span>,</span>
<span id="cb10-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col.names =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Couple"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Similarity"</span>),</span>
<span id="cb10-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">digits =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,</span>
<span id="cb10-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">caption =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Similarity between each col profile and the average col profile"</span>,</span>
<span id="cb10-11">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb10-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable_classic</span>()</span></code></pre></div>
</details>
<div class="cell-output-display">
<table class="lightable-classic caption-top table table-sm table-striped small" data-quarto-postprocess="true">
<caption>Similarity between each col profile and the average col profile</caption>
<thead>
<tr class="header">
<th style="text-align: left;" data-quarto-table-cell-role="th">Couple</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">Similarity</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">Wife</td>
<td style="text-align: right;">0.875</td>
</tr>
<tr class="even">
<td style="text-align: left;">Alternating</td>
<td style="text-align: right;">0.809</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Husband</td>
<td style="text-align: right;">1.746</td>
</tr>
<tr class="even">
<td style="text-align: left;">Jointly</td>
<td style="text-align: right;">1.078</td>
</tr>
</tbody>
</table>


</div>
</div>
<p><strong>Distance matrix</strong></p>
<p>The similarity can be computed between each row (col) profile and the other row (col) profiles in the contingency table, using, for example, the function <code>dist-matrix()</code> <a href="https://www.sthda.com/english/articles/31-principal-component-methods-in-r-practical-guide/120-correspondence-analysis-theory-and-practice/#ca---singular-value-decomposition-of-the-standardized-residuals">(here)</a>.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># data: a data frame or matrix </span></span>
<span id="cb11-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># average.profile: average profile</span></span>
<span id="cb11-3">dist.matrix <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(data, average.profile) {</span>
<span id="cb11-4">   mat <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.matrix</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t</span>(data))</span>
<span id="cb11-5">   n <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ncol</span>(mat)</span>
<span id="cb11-6">   dist.mat <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">matrix</span>(<span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>, n, n)</span>
<span id="cb11-7">   <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">diag</span>(dist.mat) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb11-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (i <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>(n <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)) {</span>
<span id="cb11-9">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (j <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> (i <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>n) {</span>
<span id="cb11-10">            d2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(((mat[, i] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> mat[, j])<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> average.profile)</span>
<span id="cb11-11">            dist.mat[i, j] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> dist.mat[j, i] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> d2</span>
<span id="cb11-12">        }</span>
<span id="cb11-13">    }</span>
<span id="cb11-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(dist.mat) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(dist.mat) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(mat)</span>
<span id="cb11-15">  dist.mat</span>
<span id="cb11-16">}</span></code></pre></div>
</details>
</div>
<p>The result is a distance matrix (a kind of correlation or dissimilarity matrix), either orientated per rows or columns. The distance between row (col) profiles can be computed using the package corrplot for visualization.</p>
<p><strong>Row distance matrix</strong></p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Distance matrix (row)</span></span>
<span id="cb12-2">dist.mat <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dist.matrix</span>(row.profile, average.row.profile)</span>
<span id="cb12-3">dist.mat <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(dist.mat, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb12-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Visualize the matrix (row)</span></span>
<span id="cb12-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">corrplot</span>(dist.mat, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"upper"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">is.corr =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colorRampPalette</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"steelblue"</span>))(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span>))</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://amsabatini.netlify.app/posts/correspondence_analysis_1/index_files/figure-html/unnamed-chunk-12-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p><strong>Col distance matrix</strong></p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Distance matrix (column)</span></span>
<span id="cb13-2">dist.mat <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dist.matrix</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t</span>(col.profile), average.col.profile)</span>
<span id="cb13-3">dist.mat <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(dist.mat, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb13-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Visualize the matrix (column)</span></span>
<span id="cb13-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">corrplot</span>(dist.mat, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"upper"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">is.corr =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colorRampPalette</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"steelblue"</span>))(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span>))</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://amsabatini.netlify.app/posts/correspondence_analysis_1/index_files/figure-html/unnamed-chunk-13-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p><strong>Row mass and inertia</strong></p>
<p>The <strong>row mass</strong> can be defined as the total frequency of each row, obtained by dividing its row sum by the gran total. The <strong>row inertia</strong> is calculated as the row mass multiplied by the squared distance between the row and the average row profile. The inertia is a measure of the information contained in each row.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Row mass</span></span>
<span id="cb14-2">row.sum <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">apply</span>(housetasks, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, sum)</span>
<span id="cb14-3">grand.total <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(housetasks)</span>
<span id="cb14-4">row.mass <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> row.sum<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>grand.total</span>
<span id="cb14-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Row inertia</span></span>
<span id="cb14-6">row.inertia <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> row.mass<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>d2.row</span>
<span id="cb14-7"></span>
<span id="cb14-8">row.inertia <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb14-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable</span>(</span>
<span id="cb14-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">align =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rc"</span>,</span>
<span id="cb14-11">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col.names =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Task"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Inertia"</span>),</span>
<span id="cb14-12">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">digits =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,</span>
<span id="cb14-13">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">caption =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Row inertia of the house tasks contingency table"</span>,</span>
<span id="cb14-14">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb14-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable_classic</span>()</span></code></pre></div>
</details>
<div class="cell-output-display">
<table class="lightable-classic caption-top table table-sm table-striped small" data-quarto-postprocess="true">
<caption>Row inertia of the house tasks contingency table</caption>
<thead>
<tr class="header">
<th style="text-align: left;" data-quarto-table-cell-role="th">Task</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">Inertia</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">Laundry</td>
<td style="text-align: right;">0.134</td>
</tr>
<tr class="even">
<td style="text-align: left;">Main_meal</td>
<td style="text-align: right;">0.091</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Dinner</td>
<td style="text-align: right;">0.038</td>
</tr>
<tr class="even">
<td style="text-align: left;">Breakfeast</td>
<td style="text-align: right;">0.041</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Tidying</td>
<td style="text-align: right;">0.025</td>
</tr>
<tr class="even">
<td style="text-align: left;">Dishes</td>
<td style="text-align: right;">0.020</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Shopping</td>
<td style="text-align: right;">0.015</td>
</tr>
<tr class="even">
<td style="text-align: left;">Official</td>
<td style="text-align: right;">0.053</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Driving</td>
<td style="text-align: right;">0.102</td>
</tr>
<tr class="even">
<td style="text-align: left;">Finances</td>
<td style="text-align: right;">0.030</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Insurance</td>
<td style="text-align: right;">0.058</td>
</tr>
<tr class="even">
<td style="text-align: left;">Repairs</td>
<td style="text-align: right;">0.313</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Holidays</td>
<td style="text-align: right;">0.196</td>
</tr>
</tbody>
</table>


</div>
</div>
<p><strong>Column mass and inertia</strong></p>
<p>The <strong>column mass</strong> can be defined as the total frequency of each column, obtained by dividing its col sum by the gran total. The <strong>column inertia</strong> is calculated as the column mass multiplied by the squared distance between the column and the average col profile. The inertia is a measure of the information contained in each column.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Column mass</span></span>
<span id="cb15-2">col.sum <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">apply</span>(housetasks, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, sum)</span>
<span id="cb15-3">grand.total <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(housetasks)</span>
<span id="cb15-4">col.mass <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> col.sum<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>grand.total</span>
<span id="cb15-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Column inertia</span></span>
<span id="cb15-6">col.inertia <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> col.mass<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>d2.col</span>
<span id="cb15-7"></span>
<span id="cb15-8">col.inertia <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb15-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable</span>(</span>
<span id="cb15-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">align =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rc"</span>,</span>
<span id="cb15-11">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col.names =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Couple"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Inertia"</span>),</span>
<span id="cb15-12">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">digits =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,</span>
<span id="cb15-13">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">caption =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Column inertia of the house tasks contingency table"</span>,</span>
<span id="cb15-14">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb15-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable_classic</span>()</span></code></pre></div>
</details>
<div class="cell-output-display">
<table class="lightable-classic caption-top table table-sm table-striped small" data-quarto-postprocess="true">
<caption>Column inertia of the house tasks contingency table</caption>
<thead>
<tr class="header">
<th style="text-align: left;" data-quarto-table-cell-role="th">Couple</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">Inertia</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">Wife</td>
<td style="text-align: right;">0.301</td>
</tr>
<tr class="even">
<td style="text-align: left;">Alternating</td>
<td style="text-align: right;">0.118</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Husband</td>
<td style="text-align: right;">0.381</td>
</tr>
<tr class="even">
<td style="text-align: left;">Jointly</td>
<td style="text-align: right;">0.315</td>
</tr>
</tbody>
</table>


</div>
</div>
<p><strong>Total inertia</strong></p>
<p>The total inertia is the total information contained in the contingency table.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Total inertia</span></span>
<span id="cb16-2">inertia_total_row <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(row.inertia)</span>
<span id="cb16-3">inertia_total_col <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(col.inertia)</span></code></pre></div>
</details>
</div>
<p>The total inertia is computed as the sum of row inertias (or equivalently, as the sum of column inertias), in the present case we get the value 1.115.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Row mass</span></span>
<span id="cb17-2">row.sum <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">apply</span>(housetasks, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, sum)</span>
<span id="cb17-3">grand.total <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(housetasks)</span>
<span id="cb17-4">row.mass <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> row.sum<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>grand.total</span>
<span id="cb17-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Row inertia</span></span>
<span id="cb17-6">row.inertia <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> row.mass<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>d2.row</span>
<span id="cb17-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Total inertia</span></span>
<span id="cb17-8">inertia_total_row <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(row.inertia)</span>
<span id="cb17-9"></span>
<span id="cb17-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Column mass</span></span>
<span id="cb17-11">col.sum <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">apply</span>(housetasks, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, sum)</span>
<span id="cb17-12">col.mass <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> col.sum<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>grand.total</span>
<span id="cb17-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Column inertia</span></span>
<span id="cb17-14">col.inertia <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> col.mass<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>d2.col</span>
<span id="cb17-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Total inertia</span></span>
<span id="cb17-16">inertia_total_col <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(col.inertia)</span></code></pre></div>
</details>
</div>
</section>
</section>
<section id="results" class="level2">
<h2 class="anchored" data-anchor-id="results">Results</h2>
<p>The result for rows can be summarized in terms of the squared distance between row profiles and the average row profile (i.e., <code>d2.row</code>), the row mass (i.e., <code>row mass</code>), and the row inertia (i.e., <code>row.inertia</code>). Similarly, the results for columns can be summarized using <code>d2.col</code>, <code>col.mass</code> and <code>col.inertia</code>.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb18-1">row <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cbind.data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">d2 =</span> d2.row, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mass =</span> row.mass, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">inertia =</span> row.inertia)</span>
<span id="cb18-2">col <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cbind.data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">d2 =</span> d2.col, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mass =</span> col.mass, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">inertia =</span> col.inertia)</span>
<span id="cb18-3"></span>
<span id="cb18-4">row <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb18-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable</span>(</span>
<span id="cb18-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">align =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rrrr"</span>,</span>
<span id="cb18-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col.names =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Task"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Squared distance"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Mass"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Inertia"</span>),</span>
<span id="cb18-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">digits =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,</span>
<span id="cb18-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">caption =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Summary statistics for the rows of the contingency table"</span>,</span>
<span id="cb18-10">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb18-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable_classic</span>()</span></code></pre></div>
</details>
<div class="cell-output-display">
<table class="lightable-classic caption-top table table-sm table-striped small" data-quarto-postprocess="true">
<caption>Summary statistics for the rows of the contingency table</caption>
<thead>
<tr class="header">
<th style="text-align: left;" data-quarto-table-cell-role="th">Task</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">Squared distance</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">Mass</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">Inertia</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">Laundry</td>
<td style="text-align: right;">1.329</td>
<td style="text-align: right;">0.101</td>
<td style="text-align: right;">0.134</td>
</tr>
<tr class="even">
<td style="text-align: left;">Main_meal</td>
<td style="text-align: right;">1.034</td>
<td style="text-align: right;">0.088</td>
<td style="text-align: right;">0.091</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Dinner</td>
<td style="text-align: right;">0.618</td>
<td style="text-align: right;">0.062</td>
<td style="text-align: right;">0.038</td>
</tr>
<tr class="even">
<td style="text-align: left;">Breakfeast</td>
<td style="text-align: right;">0.512</td>
<td style="text-align: right;">0.080</td>
<td style="text-align: right;">0.041</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Tidying</td>
<td style="text-align: right;">0.353</td>
<td style="text-align: right;">0.070</td>
<td style="text-align: right;">0.025</td>
</tr>
<tr class="even">
<td style="text-align: left;">Dishes</td>
<td style="text-align: right;">0.302</td>
<td style="text-align: right;">0.065</td>
<td style="text-align: right;">0.020</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Shopping</td>
<td style="text-align: right;">0.218</td>
<td style="text-align: right;">0.069</td>
<td style="text-align: right;">0.015</td>
</tr>
<tr class="even">
<td style="text-align: left;">Official</td>
<td style="text-align: right;">0.968</td>
<td style="text-align: right;">0.055</td>
<td style="text-align: right;">0.053</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Driving</td>
<td style="text-align: right;">1.274</td>
<td style="text-align: right;">0.080</td>
<td style="text-align: right;">0.102</td>
</tr>
<tr class="even">
<td style="text-align: left;">Finances</td>
<td style="text-align: right;">0.456</td>
<td style="text-align: right;">0.065</td>
<td style="text-align: right;">0.030</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Insurance</td>
<td style="text-align: right;">0.727</td>
<td style="text-align: right;">0.080</td>
<td style="text-align: right;">0.058</td>
</tr>
<tr class="even">
<td style="text-align: left;">Repairs</td>
<td style="text-align: right;">3.307</td>
<td style="text-align: right;">0.095</td>
<td style="text-align: right;">0.313</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Holidays</td>
<td style="text-align: right;">2.140</td>
<td style="text-align: right;">0.092</td>
<td style="text-align: right;">0.196</td>
</tr>
</tbody>
</table>


</div>
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb19-1">col <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb19-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable</span>(</span>
<span id="cb19-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">align =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rrrr"</span>,</span>
<span id="cb19-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col.names =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"couple"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"squared distance"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mass"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"inertia"</span>),</span>
<span id="cb19-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">digits =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,</span>
<span id="cb19-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">caption =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Summary statistics for the columns of the contingency table"</span>,</span>
<span id="cb19-7">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb19-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable_classic</span>()</span></code></pre></div>
</details>
<div class="cell-output-display">
<table class="lightable-classic caption-top table table-sm table-striped small" data-quarto-postprocess="true">
<caption>Summary statistics for the columns of the contingency table</caption>
<thead>
<tr class="header">
<th style="text-align: left;" data-quarto-table-cell-role="th">couple</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">squared distance</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">mass</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">inertia</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">Wife</td>
<td style="text-align: right;">0.875</td>
<td style="text-align: right;">0.344</td>
<td style="text-align: right;">0.301</td>
</tr>
<tr class="even">
<td style="text-align: left;">Alternating</td>
<td style="text-align: right;">0.809</td>
<td style="text-align: right;">0.146</td>
<td style="text-align: right;">0.118</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Husband</td>
<td style="text-align: right;">1.746</td>
<td style="text-align: right;">0.218</td>
<td style="text-align: right;">0.381</td>
</tr>
<tr class="even">
<td style="text-align: left;">Jointly</td>
<td style="text-align: right;">1.078</td>
<td style="text-align: right;">0.292</td>
<td style="text-align: right;">0.315</td>
</tr>
</tbody>
</table>


</div>
</div>
<section id="chi-square-test" class="level3">
<h3 class="anchored" data-anchor-id="chi-square-test">Chi-square test</h3>
<p>The <strong>chi-square statistic</strong> (<img src="https://latex.codecogs.com/png.latex?%5Cchi%5E2">) is an overall measure of the difference between the frequencies observed in a contingency table and the expected frequencies calculated under the assumption of homogeneity of row profiles (or column profiles). Geometrically, the inertia measures how far away row profiles (or column profiles) are from their average profiles. The average profile can be thought of as the representative of the hypothesis of homogeneity (i.e., equality) of profiles. The distances between profiles are measured using the distance of the chi-square (distance <img src="https://latex.codecogs.com/png.latex?%5Cchi%5E2">). This distance is similar in its formulation to the Euclidean distance between points in a physical space, except that any quadratic difference between coordinates is divided by the corresponding element of the mean profile.</p>
<p>It can be shown that the total inertia <img src="https://latex.codecogs.com/png.latex?%5CPhi"> of a contingency table is the statistic (<img src="https://latex.codecogs.com/png.latex?%5Cchi%5E2">) divided by the grand total <img src="https://latex.codecogs.com/png.latex?n">:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5CPhi=%5Cdfrac%7B%5Cchi%5E2%7D%7Bn%7D=%5Csum_%7Bi%7D%5ERc_i%5CVert%5Cunderline%7Ba%7D_i-%5Cunderline%7Br%7D%5CVert%5E2_%7B%5Cunderline%7Br%7D%7D=%5Csum_%7Bj%7D%5ECr_j%5CVert%5Cunderline%7Bb%7D_j-%5Cunderline%7Bc%7D%5CVert%5E2_%7B%5Cunderline%7Bc%7D%7D%0A"></p>
<p>The <strong>Chi-squared test</strong> can be used to examine whether rows and columns of a contingency table are statistically significantly associated:</p>
<ul>
<li>Null hypothesis (H0): the row and the column variables of the contingency table are independent;</li>
<li>Alternative hypothesis (H1): row and column variables are dependent</li>
</ul>
<p>For each cell of the table, we have to calculate the expected value under H0. For a given cell <img src="https://latex.codecogs.com/png.latex?(i,j)">, the expected value is calculated by taking the product of the <img src="https://latex.codecogs.com/png.latex?i">-th element of the row margin (sum of the elements in the <img src="https://latex.codecogs.com/png.latex?i">-th row of the contingency table) and the <img src="https://latex.codecogs.com/png.latex?j">-th element of the col margin (sum of the elements in the <img src="https://latex.codecogs.com/png.latex?j">-th column of the contingency table), divided by the gran total.</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Statistical testing of homogeneity/independence
</div>
</div>
<div class="callout-body-container callout-body">
<p>Suppose that the population is divided into <img src="https://latex.codecogs.com/png.latex?R"> groups and each group (or the entire population) is divided into <img src="https://latex.codecogs.com/png.latex?C"> categories. We would like to test whether the distribution of categories in each group is the same (<strong>homogeneity test</strong>). If observations <img src="https://latex.codecogs.com/png.latex?X_1,%5Cdots,X_n"> are sampled independently from the entire population then homogeneity over groups is the same as independence of groups and categories. If we have homogeneity:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Ctext%7BPr%7D(%5Ctext%7BCategory%7D_j%5Cvert%5Ctext%7BGroup%7D_i)=%5Ctext%7BPr%7D(%5Ctext%7BCategory%7D_j)%0A"></p>
<p>then we have independence:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Ctext%7BPr%7D(%5Ctext%7BCategory%7D_j,%5Ctext%7BGroup%7D_i)=%5Ctext%7BPr%7D(%5Ctext%7BCategory%7D_j%5Cvert%5Ctext%7BGroup%7D_i)%5Ctext%7BPr%7D(%5Ctext%7BGroup%7D_i)=%5Ctext%7BPr%7D(%5Ctext%7BCategory%7D_j)%5Ctext%7BPr%7D(%5Ctext%7BGroup%7D_i)%0A"></p>
<p>It is also possible to move the other way around (i.e., start from independence to obtain homogeneity). In other words, to test homogeneity, we can use the test of independence. The computation of the expected cell counts under the null hypothesis H0 (the row and the column variables of the contingency table are independent) is done according to the scheme of Figure&nbsp;1.</p>
<div id="fig-fig1" class="quarto-float quarto-figure quarto-figure-center anchored" data-fig-align="center">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-fig1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://amsabatini.netlify.app/posts/correspondence_analysis_1/fig1.png" class="img-fluid quarto-figure quarto-figure-center figure-img" width="400">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-fig1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;1: The expected counts are involved in testing either homegeneity or independence
</figcaption>
</figure>
</div>
</div>
</div>
<p>For example, in the case of the house tasks contingency table, the scheme of computation for the cell “Shopping”-“Alternating” is shown in Figure&nbsp;2.</p>
<div id="fig-fig2" class="quarto-float quarto-figure quarto-figure-center anchored" data-fig-align="center">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-fig2-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://amsabatini.netlify.app/posts/correspondence_analysis_1/fig2.png" class="img-fluid quarto-figure quarto-figure-center figure-img">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-fig2-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;2: How to calculate the expected counts
</figcaption>
</figure>
</div>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb20-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Table of expected counts</span></span>
<span id="cb20-2">E <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> (row.sum <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%*%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t</span>(col.sum))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>n</span>
<span id="cb20-3"></span>
<span id="cb20-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">row.names</span>(E) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">row.names</span>(housetasks)</span>
<span id="cb20-5">E <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb20-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable</span>(</span>
<span id="cb20-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">align =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rrrr"</span>,</span>
<span id="cb20-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col.names =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Wife"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Alternating"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Husband"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Jointly"</span>),</span>
<span id="cb20-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">digits =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="cb20-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">caption =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Table of expected counts"</span>,</span>
<span id="cb20-11">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb20-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable_classic</span>()</span></code></pre></div>
</details>
<div class="cell-output-display">
<table class="lightable-classic caption-top table table-sm table-striped small" data-quarto-postprocess="true">
<caption>Table of expected counts</caption>
<thead>
<tr class="header">
<th style="text-align: left;" data-quarto-table-cell-role="th"></th>
<th style="text-align: right;" data-quarto-table-cell-role="th">Wife</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">Alternating</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">Husband</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">Jointly</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">Laundry</td>
<td style="text-align: right;">60.55</td>
<td style="text-align: right;">25.63</td>
<td style="text-align: right;">38.45</td>
<td style="text-align: right;">51.37</td>
</tr>
<tr class="even">
<td style="text-align: left;">Main_meal</td>
<td style="text-align: right;">52.64</td>
<td style="text-align: right;">22.28</td>
<td style="text-align: right;">33.42</td>
<td style="text-align: right;">44.65</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Dinner</td>
<td style="text-align: right;">37.16</td>
<td style="text-align: right;">15.73</td>
<td style="text-align: right;">23.59</td>
<td style="text-align: right;">31.52</td>
</tr>
<tr class="even">
<td style="text-align: left;">Breakfeast</td>
<td style="text-align: right;">48.17</td>
<td style="text-align: right;">20.39</td>
<td style="text-align: right;">30.58</td>
<td style="text-align: right;">40.86</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Tidying</td>
<td style="text-align: right;">41.97</td>
<td style="text-align: right;">17.77</td>
<td style="text-align: right;">26.65</td>
<td style="text-align: right;">35.61</td>
</tr>
<tr class="even">
<td style="text-align: left;">Dishes</td>
<td style="text-align: right;">38.88</td>
<td style="text-align: right;">16.46</td>
<td style="text-align: right;">24.69</td>
<td style="text-align: right;">32.98</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Shopping</td>
<td style="text-align: right;">41.28</td>
<td style="text-align: right;">17.48</td>
<td style="text-align: right;">26.22</td>
<td style="text-align: right;">35.02</td>
</tr>
<tr class="even">
<td style="text-align: left;">Official</td>
<td style="text-align: right;">33.03</td>
<td style="text-align: right;">13.98</td>
<td style="text-align: right;">20.97</td>
<td style="text-align: right;">28.02</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Driving</td>
<td style="text-align: right;">47.82</td>
<td style="text-align: right;">20.24</td>
<td style="text-align: right;">30.37</td>
<td style="text-align: right;">40.57</td>
</tr>
<tr class="even">
<td style="text-align: left;">Finances</td>
<td style="text-align: right;">38.88</td>
<td style="text-align: right;">16.46</td>
<td style="text-align: right;">24.69</td>
<td style="text-align: right;">32.98</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Insurance</td>
<td style="text-align: right;">47.82</td>
<td style="text-align: right;">20.24</td>
<td style="text-align: right;">30.37</td>
<td style="text-align: right;">40.57</td>
</tr>
<tr class="even">
<td style="text-align: left;">Repairs</td>
<td style="text-align: right;">56.77</td>
<td style="text-align: right;">24.03</td>
<td style="text-align: right;">36.05</td>
<td style="text-align: right;">48.16</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Holidays</td>
<td style="text-align: right;">55.05</td>
<td style="text-align: right;">23.30</td>
<td style="text-align: right;">34.95</td>
<td style="text-align: right;">46.70</td>
</tr>
</tbody>
</table>


</div>
</div>
<p>The calculated Chi-square statistic <img src="https://latex.codecogs.com/png.latex?%5Cchi%5E2"> is compared to the critical value (obtained from statistical tables) with <img src="https://latex.codecogs.com/png.latex?df=(R-1)(C-1)"> degrees of freedom and <img src="https://latex.codecogs.com/png.latex?p=0.05">. Recall that <img src="https://latex.codecogs.com/png.latex?R,%20C"> are the number of rows and columns in the contingency table, respectively. If the calculated Chi-square statistic is greater than the critical value, then we must conclude that the row and the column variables are not independent of each other. This implies that they are significantly associated. The function <code>chisq.test()</code> can be used to implement the test.</p>
<p>The result of <code>chisq.test()</code> function is a list containing the following components:</p>
<ul>
<li>statistic: the value the chi-squared test statistic.</li>
<li>parameter: the degrees of freedom</li>
<li>p.value: the p-value of the test</li>
<li>observed: the observed count</li>
<li>expected: the expected count</li>
<li>residuals: Pearson residuals</li>
</ul>
<p>It is worth noting that the total inertia is equal to the total Chi-square score divided by the grand total. The square root of the total inertia is called <strong>trace</strong> and may be interpreted as a correlation coefficient. Any value of the trace &gt; 0.2 indicates a significant dependency between rows and columns. In the present example 1.056.</p>
</section>
<section id="pearson-residuals" class="level3">
<h3 class="anchored" data-anchor-id="pearson-residuals">Pearson residuals</h3>
<p>If we want to know the most contributing cells to the total Chi-square score, we just have to calculate the Chi-square statistic for each cell:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0Ar_%7Bij%7D%20=%20%5Cdfrac%7Bo_%7Bij%7D-e_%7Bij%7D%7D%7B%5Csqrt%7Be_%7Bij%7D%7D%7D,%5C,i=1,%5Cdots,R;%5C,j=1,%5Cdots,C%0A"></p>
<p>The above formula returns the so-called Pearson residuals (<img src="https://latex.codecogs.com/png.latex?r">) for each cell (or standardized residuals). Cells with the highest absolute standardized residuals contribute the most to the total Chi-square score. Pearson residuals can be easily extracted from the output of the function <code>chisq.test()</code>.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb21-1">chisq <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">chisq.test</span>(housetasks)</span>
<span id="cb21-2">chisq</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>
    Pearson's Chi-squared test

data:  housetasks
X-squared = 1944.5, df = 36, p-value &lt; 2.2e-16</code></pre>
</div>
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb23-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Observed counts</span></span>
<span id="cb23-2">chisq<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>observed</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>           Wife Alternating Husband Jointly
Laundry     156          14       2       4
Main_meal   124          20       5       4
Dinner       77          11       7      13
Breakfeast   82          36      15       7
Tidying      53          11       1      57
Dishes       32          24       4      53
Shopping     33          23       9      55
Official     12          46      23      15
Driving      10          51      75       3
Finances     13          13      21      66
Insurance     8           1      53      77
Repairs       0           3     160       2
Holidays      0           1       6     153</code></pre>
</div>
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb25-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Expected counts</span></span>
<span id="cb25-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(chisq<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>expected, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>            Wife Alternating Husband Jointly
Laundry    60.55       25.63   38.45   51.37
Main_meal  52.64       22.28   33.42   44.65
Dinner     37.16       15.73   23.59   31.52
Breakfeast 48.17       20.39   30.58   40.86
Tidying    41.97       17.77   26.65   35.61
Dishes     38.88       16.46   24.69   32.98
Shopping   41.28       17.48   26.22   35.02
Official   33.03       13.98   20.97   28.02
Driving    47.82       20.24   30.37   40.57
Finances   38.88       16.46   24.69   32.98
Insurance  47.82       20.24   30.37   40.57
Repairs    56.77       24.03   36.05   48.16
Holidays   55.05       23.30   34.95   46.70</code></pre>
</div>
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb27-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Pearson's residuals</span></span>
<span id="cb27-2">e <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> chisq<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>residuals</span>
<span id="cb27-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Contribution in percentage of each cell (%)</span></span>
<span id="cb27-4">contrib <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>chisq<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>residuals<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>chisq<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>statistic</span></code></pre></div>
</details>
</div>
<p>The sign of the standardized residuals is also very important to interpret the association between rows and columns. Positive values in cells specify an attraction (positive association) between the corresponding row and column variables, such as, for instance, between the column “Wife” and the row “Laundry”. There is a strong positive association between the column “Husband” and the row “Repairs”. A negative residual implies a repulsion (negative association) between the corresponding row and column variables. For example the column “Wife” is negatively associated (i.e., “not associated”) with the row “Repairs”. There is a repulsion between the column “Husband” and the rows “Laundry” and “Main_meal”.</p>
<p>The contribution (in %) of a given cell to the total Chi-square score can be calculated as follows:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Ctext%7Bcontrib%7D%5C,(%5C%25)=100%5C,%5Cdfrac%7Br%5E2%7D%7B%5Cchi%5E2%7D%0A"></p>
<p>The relative contribution of each cell to the total Chi-square score give some indication of the nature of the dependency between rows and columns of the contingency table. It can be seen that:</p>
<ul>
<li>The column “Wife” is strongly associated with the rows “Laundry”</li>
<li>The column “Husband” is strongly associated with the row “Repairs”</li>
<li>The column “Jointly” is frequently associated with the row “Holidays”</li>
</ul>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb28-1">e <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb28-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable</span>(</span>
<span id="cb28-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">align =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rrrr"</span>,</span>
<span id="cb28-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col.names =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Wife"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Alternating"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Husband"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Jointly"</span>),</span>
<span id="cb28-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">digits =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="cb28-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">caption =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Pearson's residuals"</span>,</span>
<span id="cb28-7">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb28-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable_classic</span>()</span></code></pre></div>
</details>
<div class="cell-output-display">
<table class="lightable-classic caption-top table table-sm table-striped small" data-quarto-postprocess="true">
<caption>Pearson's residuals</caption>
<thead>
<tr class="header">
<th style="text-align: left;" data-quarto-table-cell-role="th"></th>
<th style="text-align: right;" data-quarto-table-cell-role="th">Wife</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">Alternating</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">Husband</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">Jointly</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">Laundry</td>
<td style="text-align: right;">12.27</td>
<td style="text-align: right;">-2.30</td>
<td style="text-align: right;">-5.88</td>
<td style="text-align: right;">-6.61</td>
</tr>
<tr class="even">
<td style="text-align: left;">Main_meal</td>
<td style="text-align: right;">9.84</td>
<td style="text-align: right;">-0.48</td>
<td style="text-align: right;">-4.92</td>
<td style="text-align: right;">-6.08</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Dinner</td>
<td style="text-align: right;">6.54</td>
<td style="text-align: right;">-1.19</td>
<td style="text-align: right;">-3.42</td>
<td style="text-align: right;">-3.30</td>
</tr>
<tr class="even">
<td style="text-align: left;">Breakfeast</td>
<td style="text-align: right;">4.88</td>
<td style="text-align: right;">3.46</td>
<td style="text-align: right;">-2.82</td>
<td style="text-align: right;">-5.30</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Tidying</td>
<td style="text-align: right;">1.70</td>
<td style="text-align: right;">-1.61</td>
<td style="text-align: right;">-4.97</td>
<td style="text-align: right;">3.59</td>
</tr>
<tr class="even">
<td style="text-align: left;">Dishes</td>
<td style="text-align: right;">-1.10</td>
<td style="text-align: right;">1.86</td>
<td style="text-align: right;">-4.16</td>
<td style="text-align: right;">3.49</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Shopping</td>
<td style="text-align: right;">-1.29</td>
<td style="text-align: right;">1.32</td>
<td style="text-align: right;">-3.36</td>
<td style="text-align: right;">3.38</td>
</tr>
<tr class="even">
<td style="text-align: left;">Official</td>
<td style="text-align: right;">-3.66</td>
<td style="text-align: right;">8.56</td>
<td style="text-align: right;">0.44</td>
<td style="text-align: right;">-2.46</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Driving</td>
<td style="text-align: right;">-5.47</td>
<td style="text-align: right;">6.84</td>
<td style="text-align: right;">8.10</td>
<td style="text-align: right;">-5.90</td>
</tr>
<tr class="even">
<td style="text-align: left;">Finances</td>
<td style="text-align: right;">-4.15</td>
<td style="text-align: right;">-0.85</td>
<td style="text-align: right;">-0.74</td>
<td style="text-align: right;">5.75</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Insurance</td>
<td style="text-align: right;">-5.76</td>
<td style="text-align: right;">-4.28</td>
<td style="text-align: right;">4.11</td>
<td style="text-align: right;">5.72</td>
</tr>
<tr class="even">
<td style="text-align: left;">Repairs</td>
<td style="text-align: right;">-7.53</td>
<td style="text-align: right;">-4.29</td>
<td style="text-align: right;">20.65</td>
<td style="text-align: right;">-6.65</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Holidays</td>
<td style="text-align: right;">-7.42</td>
<td style="text-align: right;">-4.62</td>
<td style="text-align: right;">-4.90</td>
<td style="text-align: right;">15.56</td>
</tr>
</tbody>
</table>


</div>
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb29-1">contrib <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb29-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable</span>(</span>
<span id="cb29-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">align =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rrrr"</span>,</span>
<span id="cb29-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col.names =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Wife"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Alternating"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Husband"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Jointly"</span>),</span>
<span id="cb29-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">digits =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="cb29-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">caption =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Percentage contribution to the total Chi square"</span>,</span>
<span id="cb29-7">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb29-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable_classic</span>()</span></code></pre></div>
</details>
<div class="cell-output-display">
<table class="lightable-classic caption-top table table-sm table-striped small" data-quarto-postprocess="true">
<caption>Percentage contribution to the total Chi square</caption>
<thead>
<tr class="header">
<th style="text-align: left;" data-quarto-table-cell-role="th"></th>
<th style="text-align: right;" data-quarto-table-cell-role="th">Wife</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">Alternating</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">Husband</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">Jointly</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">Laundry</td>
<td style="text-align: right;">7.74</td>
<td style="text-align: right;">0.27</td>
<td style="text-align: right;">1.78</td>
<td style="text-align: right;">2.25</td>
</tr>
<tr class="even">
<td style="text-align: left;">Main_meal</td>
<td style="text-align: right;">4.98</td>
<td style="text-align: right;">0.01</td>
<td style="text-align: right;">1.24</td>
<td style="text-align: right;">1.90</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Dinner</td>
<td style="text-align: right;">2.20</td>
<td style="text-align: right;">0.07</td>
<td style="text-align: right;">0.60</td>
<td style="text-align: right;">0.56</td>
</tr>
<tr class="even">
<td style="text-align: left;">Breakfeast</td>
<td style="text-align: right;">1.22</td>
<td style="text-align: right;">0.61</td>
<td style="text-align: right;">0.41</td>
<td style="text-align: right;">1.44</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Tidying</td>
<td style="text-align: right;">0.15</td>
<td style="text-align: right;">0.13</td>
<td style="text-align: right;">1.27</td>
<td style="text-align: right;">0.66</td>
</tr>
<tr class="even">
<td style="text-align: left;">Dishes</td>
<td style="text-align: right;">0.06</td>
<td style="text-align: right;">0.18</td>
<td style="text-align: right;">0.89</td>
<td style="text-align: right;">0.63</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Shopping</td>
<td style="text-align: right;">0.09</td>
<td style="text-align: right;">0.09</td>
<td style="text-align: right;">0.58</td>
<td style="text-align: right;">0.59</td>
</tr>
<tr class="even">
<td style="text-align: left;">Official</td>
<td style="text-align: right;">0.69</td>
<td style="text-align: right;">3.77</td>
<td style="text-align: right;">0.01</td>
<td style="text-align: right;">0.31</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Driving</td>
<td style="text-align: right;">1.54</td>
<td style="text-align: right;">2.40</td>
<td style="text-align: right;">3.37</td>
<td style="text-align: right;">1.79</td>
</tr>
<tr class="even">
<td style="text-align: left;">Finances</td>
<td style="text-align: right;">0.89</td>
<td style="text-align: right;">0.04</td>
<td style="text-align: right;">0.03</td>
<td style="text-align: right;">1.70</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Insurance</td>
<td style="text-align: right;">1.71</td>
<td style="text-align: right;">0.94</td>
<td style="text-align: right;">0.87</td>
<td style="text-align: right;">1.68</td>
</tr>
<tr class="even">
<td style="text-align: left;">Repairs</td>
<td style="text-align: right;">2.92</td>
<td style="text-align: right;">0.95</td>
<td style="text-align: right;">21.92</td>
<td style="text-align: right;">2.28</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Holidays</td>
<td style="text-align: right;">2.83</td>
<td style="text-align: right;">1.10</td>
<td style="text-align: right;">1.23</td>
<td style="text-align: right;">12.45</td>
</tr>
</tbody>
</table>


</div>
</div>
<blockquote class="blockquote">
<p>SCA is just the singular value decomposition of the standardized residuals. How to perform this analysis using the R programming software will be explained in a future post (<a href="https://amsabatini.netlify.app/posts/correspondence_analysis_2">here</a>), together with some discussion of the implications that the results of the analysis may have.</p>
</blockquote>


</section>
</section>

 ]]></description>
  <category>multivariate statistics</category>
  <guid>https://amsabatini.netlify.app/posts/correspondence_analysis_1/</guid>
  <pubDate>Sun, 08 Dec 2024 23:00:00 GMT</pubDate>
  <media:content url="https://amsabatini.netlify.app/posts/correspondence_analysis_1/cover.png" medium="image" type="image/png" height="114" width="144"/>
</item>
<item>
  <title>Audio features for free</title>
  <dc:creator>Angelo Maria Sabatini</dc:creator>
  <link>https://amsabatini.netlify.app/posts/audio_features/</link>
  <description><![CDATA[ 




<p>In this post, I’ll be exploring how to pull back audio features and other information available for any track in the Spotify library. This information is usually hidden to users, however it can be easily retrieved. This will be done here using the <a href="https://github.com/charlie86/spotifyr">spotifyr</a> R wrapper package, whose description sounds as <em>a quick and easy wrapper for pulling back audio features from Spotify’s Web API in bulk</em>. Information about the various audio features offered by Spotify in the analysis of each track, as well as what all those features actually mean, is part of the discussion herein.</p>
<p>The first step in accessing Spotify data is to get an API key. This can be done by first logging into the Personal Dashboard available in the “Spotify for Developers” page (this requires that I signed on to a valid account, of course!) - see Figure&nbsp;1.</p>
<div id="fig-fig1" class="quarto-float quarto-figure quarto-figure-center anchored" data-fig-align="center">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-fig1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://amsabatini.netlify.app/posts/audio_features/dashboard.png" class="img-fluid quarto-figure quarto-figure-center figure-img">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-fig1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;1: Personal Dashboard view.
</figcaption>
</figure>
</div>
<p>From within the ‘Basic information page’ of the app lyrics I have created in my Dashboard, I was directed to select “Create a Client ID”. After filling out the required questions, I received my Client ID and Client Secret. The following code chunk is then needed to get the Spotify access token:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(spotifyr)</span>
<span id="cb1-2"></span>
<span id="cb1-3">id <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'my client ID'</span></span>
<span id="cb1-4">secret <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'my client secret'</span></span>
<span id="cb1-5"></span>
<span id="cb1-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Sys.setenv</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">SPOTIFY_CLIENT_ID =</span> id)</span>
<span id="cb1-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Sys.setenv</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">SPOTIFY_CLIENT_SECRET =</span> secret)</span>
<span id="cb1-8"></span>
<span id="cb1-9">access_token <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_spotify_access_token</span>()</span></code></pre></div>
</div>
<p>For one of the several playlists that I have created using my Spotify account, namely <code>trial</code>, I invoke the function <code>get_user_playlists()</code> to obtain the associated <code>playlist_id</code>. This is possible once I have retrieved the information about the desired playlist using, e.g., the verb <code>filter</code> from tidyverse, as in the code chunk below, where how to use the <a href="https://developer.spotify.com/documentation/web-api/concepts/spotify-uris-ids">Spotify ID</a> to complete the authentication process is also shown.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb2-2"></span>
<span id="cb2-3">my_id <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'my Spotify ID'</span></span>
<span id="cb2-4">playlist_id <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_user_playlists</span>(my_id) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(name <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'trial'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pull</span>(id)</span></code></pre></div>
</div>
<p>All is done. Now, a number of functions are available in spotifyr to get access to the audio features of all the tracks contained in the playlist <code>trial</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">tracks <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_playlist_tracks</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">playlist_id =</span> playlist_id, </span>
<span id="cb3-2">                              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">limit =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, </span>
<span id="cb3-3">                              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">authorization =</span> access_token)</span>
<span id="cb3-4">features <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_track_audio_features</span>(tracks,</span>
<span id="cb3-5">                                     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">authorization =</span> access_token)</span></code></pre></div>
</div>
<p>The call to <code>get_playlist_tracks()</code> with <code>limit</code> fixed to 100 (default maximum value) clarifies that only data of up 100 tracks can be retrieved from any Spotify playlist using just one call. The argument <code>authorization</code> requires a valid access token, as explained above. With the function <code>get_track_audio_features()</code> we finally get the values of the audio features. These numerical representations of various characteristics of each music track of interest are derived, behind the scenes, through the advanced audio analysis algorithms developed by Spotify as an important part of their business strategy. It is worth noting that <code>tracks</code> contains a wealth of other relevant information, including track title, author, album, release date and so forth.</p>
<section id="audio-features" class="level2">
<h2 class="anchored" data-anchor-id="audio-features">Audio features</h2>
<p>The following table reports a list of the audio features, see <a href="https://developer.spotify.com/documentation/web-api/reference/get-audio-features">here</a>. Since my native language is Italian, I translate each English term (in <strong>bold</strong>) into a corresponding Italian term (in <em>italic.</em>) Next to the column <strong>Audio feature</strong>, the column <strong>Explanation</strong> provides information regarding what each audio feature can mean.</p>
<table class="caption-top table">
<thead>
<tr class="header">
<th>Audio feature</th>
<th>Explanation</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><strong>acousticness</strong> (<em>acusticità</em>)</td>
<td>Index from 0.0 to 1.0 of whether the track is acoustic. 1.0 represents high confidence that the track is acoustic, i.e., with little or no electronic elements.</td>
</tr>
<tr class="even">
<td><strong>danceability</strong> (<em>ballabilità</em>)</td>
<td>Index from 0.0 to 1.0 describing how suitable a track is for dancing. The index is based on a combination of tempo, rhythm stability, beat strength and overall regularity. A higher danceability score indicates a more danceable track.</td>
</tr>
<tr class="odd">
<td><strong>duration_ms</strong> (<em>durata</em>)</td>
<td>Track duration, in ms.</td>
</tr>
<tr class="even">
<td><strong>energy</strong> (<em>energia</em>)</td>
<td>Index from 0.0 to 1.0, which helps representing the intensity and activity level of a track. Tracks with high energy values tend to be more upbeat and energetic (they sound faster, louder and noisier than tracks with lower energy). Perceptual features contributing to this attribute include dynamic range, perceived loudness, timbre, onset rate, and general entropy.</td>
</tr>
<tr class="odd">
<td><strong>instrumentalness</strong> (<em>proporzione di parte strumentale su parte vocale</em>)</td>
<td>Index from 0.0 to 1.0, which helps predicting whether a track contains no vocals. A higher instrumentalness values indicates a higher likelihood that the track is purely instrumental. Values above 0.5 are intended to represent instrumental tracks, but confidence is higher as the value approaches 1.0.</td>
</tr>
<tr class="even">
<td><strong>key</strong> (<em>chiave</em>) (*)</td>
<td>The estimated overall key of the track. Integers, from -1 to 11, map to pitches using standard <a href="https://en.wikipedia.org/wiki/Pitch_class">Pitch Class</a> notation. E.g., 0 = C (<em>do</em>), 1 = C♯/D♭ (<em>do diesis</em>/<em>re bemolle</em>), 2 = D (<em>re</em>) up to 11 = B (<em>si</em>). If no key is detected, the value is -1.</td>
</tr>
<tr class="odd">
<td><strong>liveness</strong> (<em>vivacità</em>)</td>
<td>Index from 0.0 to 1.0, which helps detecting the presence of an audience in the recording. A higher liveness values suggests the track was performed live.</td>
</tr>
<tr class="even">
<td><strong>loudness</strong> (<em>presenza</em>)</td>
<td>This index represents the overall loudness of a track in decibels (dB). Loudness values are averaged across the entire track and are useful for comparing relative loudness of tracks. Typical values range between -60 and 0 dB.</td>
</tr>
<tr class="odd">
<td><strong>mode</strong> (<em>tonalità</em>) (*)</td>
<td>Mode indicates the modality (major or minor) of a track, the type of scale from which its melodic content is derived. Major is represented by 1 and minor by 0.</td>
</tr>
<tr class="even">
<td><strong>speechiness</strong> (<em>proporzione di parlato</em>)</td>
<td>Index from 0.0 to 1.0, which helps identifying tracks that contain spoken words. Higher values indicate more speech-like sounds, distinguishing them from purely instrumental tracks. Values above 0.66 describe tracks that are probably made entirely of spoken words. Values between 0.33 and 0.66 describe tracks that may contain both music and speech. Values below 0.33 most likely represent music and other non-speech-like tracks.</td>
</tr>
<tr class="odd">
<td><strong>tempo</strong> (<em>tempo</em>)</td>
<td>The overall estimated tempo of a track in beats per minute (BPM). In musical terminology, tempo is the speed or pace of a given piece and derives directly from the average beat duration.</td>
</tr>
<tr class="even">
<td><strong>time signature</strong> (<em>indicazione del tempo</em>) (*)</td>
<td>It yiels an estimated overall time signature for a track. The time signature (meter) is a notational convention to specify how many beats are in each bar (or measure). The time signature ranges from 3 to 7 indicating time signatures of “3/4”, to “7/4”.</td>
</tr>
<tr class="odd">
<td><strong>valence</strong> (<em>positività emotiva</em>)</td>
<td>Also known as the “positiveness” index, valence describes, in a range from 0.0 to 1.0, the musical positiveness conveyed by a track. Tracks with higher valence values tend to sound more positive, cheerful, and euphoric, while lower scores suggest more negative, sad, or depressing emotions.</td>
</tr>
</tbody>
</table>
<p>(*) Key, mode and time signature relate to the fundamental musical components of a track - these features are essential for understanding its harmonic structure and rhythmic pattern.</p>
<p>Another parameter that can be retrieved is named <strong>popularity</strong>. The popularity of a track will be between 0 and 100, with 100 being the most popular. The popularity is calculated by an algorithm and is mostly based on the total number of plays the track has had and how recent those plays are. Generally speaking, tracks that are being played a lot now will have a higher popularity than tracks that were played a lot in the past.</p>
</section>
<section id="example" class="level2">
<h2 class="anchored" data-anchor-id="example">Example</h2>
<p>As a matter of example, my Spotify’s playlist <code>trial</code> contains just four tracks. They were extracted from those published by a beloved singer of mine, <a href="https://www.sergiocaputo.com">Sergio Caputo</a> in his debut album “Un Sabato Italiano”, which was released in 1983. The magazine “Rolling Stone Italia” ranks the album “Un Sabato Italiano” at the 37th position in the list of the greatest 100 Italian albums of all time (<a href="https://it.wikipedia.org/wiki/I_100_migliori_album_italiani_secondo_Rolling_Stone">here</a>).</p>
<p>The songs in this album are a sort of diary of the life that the singer lived in the early Eighties. We can enjoy the chance to find ourselves immersed with him and his great friend Rino into smoky bars and complicated love stories, dealt with in noisy never-ending Saturday nights. Prevalent in all the tracks is the rhythm of swing and jazz. The high quality of the lyrics concurs, with the music, to evoke brilliantly those atmospheres, and even today the album can be considered a remarkable <em>testimonianza</em> of the mood of the early Eighties.</p>
<p>For the sake of better visualization, I grouped the results of the audio analysis of these tracks in the following three tables; moreover, I condensed the values of the three parameters key, mode and time signature into only one cell.</p>
<div class="cell">
<div class="cell-output-display">
<table class="lightable-classic caption-top table table-sm table-striped small" data-quarto-postprocess="true">
<caption>Key, mode, time signature, tempo, duration and loudness</caption>
<thead>
<tr class="header">
<th style="text-align: left;" data-quarto-table-cell-role="th">track title</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">key-mode-time signature</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">tempo, BPM</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">duration, min</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">loudness, dB</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">Mercy bocù</td>
<td style="text-align: right;">F major in 3/4</td>
<td style="text-align: right;">116.19</td>
<td style="text-align: right;">4.06</td>
<td style="text-align: right;">-14.09</td>
</tr>
<tr class="even">
<td style="text-align: left;">Bimba se sapessi</td>
<td style="text-align: right;">F major in 4/4</td>
<td style="text-align: right;">153.76</td>
<td style="text-align: right;">3.45</td>
<td style="text-align: right;">-13.70</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Mettimi giù</td>
<td style="text-align: right;">G major in 4/4</td>
<td style="text-align: right;">76.35</td>
<td style="text-align: right;">4.35</td>
<td style="text-align: right;">-18.34</td>
</tr>
<tr class="even">
<td style="text-align: left;">Spicchio di luna</td>
<td style="text-align: right;">G major in 4/4</td>
<td style="text-align: right;">77.73</td>
<td style="text-align: right;">3.18</td>
<td style="text-align: right;">-14.47</td>
</tr>
</tbody>
</table>


</div>
<div class="cell-output-display">
<table class="lightable-classic caption-top table table-sm table-striped small" data-quarto-postprocess="true">
<caption>Acousticness, instrumentalness, liveness and speechiness</caption>
<thead>
<tr class="header">
<th style="text-align: left;" data-quarto-table-cell-role="th">track title</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">acousticness</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">instrumentalness</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">liveness</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">speechiness</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">Mercy bocù</td>
<td style="text-align: right;">0.40</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0.15</td>
<td style="text-align: right;">0.05</td>
</tr>
<tr class="even">
<td style="text-align: left;">Bimba se sapessi</td>
<td style="text-align: right;">0.30</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0.18</td>
<td style="text-align: right;">0.06</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Mettimi giù</td>
<td style="text-align: right;">0.12</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0.09</td>
<td style="text-align: right;">0.07</td>
</tr>
<tr class="even">
<td style="text-align: left;">Spicchio di luna</td>
<td style="text-align: right;">0.47</td>
<td style="text-align: right;">0</td>
<td style="text-align: right;">0.11</td>
<td style="text-align: right;">0.09</td>
</tr>
</tbody>
</table>


</div>
<div class="cell-output-display">
<table class="lightable-classic caption-top table table-sm table-striped small" data-quarto-postprocess="true">
<caption>Danceability, energy, valence and popularity</caption>
<thead>
<tr class="header">
<th style="text-align: left;" data-quarto-table-cell-role="th">track title</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">danceability</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">energy</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">valence</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">popularity</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">Mercy bocù</td>
<td style="text-align: right;">0.60</td>
<td style="text-align: right;">0.40</td>
<td style="text-align: right;">0.42</td>
<td style="text-align: right;">26</td>
</tr>
<tr class="even">
<td style="text-align: left;">Bimba se sapessi</td>
<td style="text-align: right;">0.55</td>
<td style="text-align: right;">0.48</td>
<td style="text-align: right;">0.88</td>
<td style="text-align: right;">32</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Mettimi giù</td>
<td style="text-align: right;">0.67</td>
<td style="text-align: right;">0.46</td>
<td style="text-align: right;">0.89</td>
<td style="text-align: right;">19</td>
</tr>
<tr class="even">
<td style="text-align: left;">Spicchio di luna</td>
<td style="text-align: right;">0.40</td>
<td style="text-align: right;">0.36</td>
<td style="text-align: right;">0.14</td>
<td style="text-align: right;">26</td>
</tr>
</tbody>
</table>


</div>
</div>
<blockquote class="blockquote">
<p><em>Translating music in numbers</em> as exemplified above, might be, and actually is, the starting point of some heavy data mining for doing interesting research at the intersection between several different domains, which may include data science, statistics, machine learning, sociology, psychology, neuroscience, just to mention a few of them. Something more about these opportunities will be discussed in future posts … up to now, that’s my two cents for the day!</p>
</blockquote>
<p>The thumbnail image is credited to <a href="https://www.flaticon.com/free-icons/spotify" title="spotify icons">Spotify icons created by Creative - Flaticon</a></p>


</section>

 ]]></description>
  <category>data mining</category>
  <guid>https://amsabatini.netlify.app/posts/audio_features/</guid>
  <pubDate>Mon, 11 Nov 2024 23:00:00 GMT</pubDate>
  <media:content url="https://amsabatini.netlify.app/posts/audio_features/music_reduced.png" medium="image" type="image/png" height="137" width="144"/>
</item>
<item>
  <title>Numerical simulation for stochastic differential equations</title>
  <dc:creator>Angelo Maria Sabatini</dc:creator>
  <link>https://amsabatini.netlify.app/posts/numerical_simulation/</link>
  <description><![CDATA[ 




<p>We consider here the class of stochastic processes known as diffusion processes, which are solutions to stochastic differential equation (SDE) of the form:</p>
<p><span id="eq-eq1"><img src="https://latex.codecogs.com/png.latex?%0AdX(t)=b(t,X(t))%5C,dt+%5Csigma(t,X(t))%5C,dW(t)%0A%5Ctag%7B1%7D"></span></p>
<p>with some initial condition <img src="https://latex.codecogs.com/png.latex?X(0)"> which can be regarded as being either constant or random. The SDE is interpreted in the Itô sense:</p>
<p><span id="eq-eq2"><img src="https://latex.codecogs.com/png.latex?%0AX(t)=X(0)+%5Cint_0%5Etb(s,X(s))%5C,ds+%5Cint_0%5Et%5Csigma(s,X(s))%5C,dW(s)%0A%5Ctag%7B2%7D"></span></p>
<p>and <img src="https://latex.codecogs.com/png.latex?%5C%7BW(t),t%5Cin%5B0,T%5D%5C%7D"> is the so-called Brownian motion or Wiener process.</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
The Wiener process
</div>
</div>
<div class="callout-body-container callout-body">
<p>The Wiener process <img src="https://latex.codecogs.com/png.latex?%5C%7BW(t),t%5Cin%5B0,T%5D%5C%7D"> has independent Gaussian increments and continuous sample paths, and comes endowed with the following properties:</p>
<ol type="1">
<li><p><img src="https://latex.codecogs.com/png.latex?W(0)=0"> (with probability 1).</p></li>
<li><p>For <img src="https://latex.codecogs.com/png.latex?0%5Cleq%20s%5Cleq%20t%5Cleq%20T"> the random variable given by the Gaussian increment <img src="https://latex.codecogs.com/png.latex?W(t)-W(s)"> is distributed with mean zero and variance <img src="https://latex.codecogs.com/png.latex?t-s">; equivalently, <img src="https://latex.codecogs.com/png.latex?W(t)-W(s)%5Cpropto%5Csqrt%7Bt-s%7D%5C,Z">, where <img src="https://latex.codecogs.com/png.latex?Z"> denotes a standard Gaussian random variable, with a mean of zero and a variance of one.</p></li>
<li><p>For <img src="https://latex.codecogs.com/png.latex?0%5Cleq%20s%5Cleq%20t%5Cleq%20u%5Cleq%20v%5Cleq%20T"> the increments <img src="https://latex.codecogs.com/png.latex?W(t)-W(s)"> and <img src="https://latex.codecogs.com/png.latex?W(v)-W(u)"> are independent (condition of independence on any two disjoint intervals).</p></li>
</ol>
</div>
</div>
<p>The two deterministic functions <img src="https://latex.codecogs.com/png.latex?b(%5Ccdot,%5Ccdot)"> and <img src="https://latex.codecogs.com/png.latex?%5Csigma(%5Ccdot,%5Ccdot)"> are called, respectively, the drift and the diffusion coefficients of the SDE. Under a number of assumptions regarding their properties (i.e., global Lipschitz and linear growth, see <span class="citation" data-cites="iacus2008">(Iacus 2008)</span> for mathematical details) the SDE has a unique solution with continuous sample paths such that</p>
<p><span id="eq-eq3"><img src="https://latex.codecogs.com/png.latex?%0AE%5Cleft%5B%5Cint_0%5ET%5Cvert%5C,X(t)%5C,%5Cvert%5E2%5C,dt%5Cright%5D%3C%5Cinfty%0A%5Ctag%7B3%7D"></span></p>
<p>For the sake of simpler notation, <img src="https://latex.codecogs.com/png.latex?X(t)%5Crightarrow%20X_t"> is used in the following, therefore Equation&nbsp;1 and Equation&nbsp;2 can be written:</p>
<p><span id="eq-eq4"><img src="https://latex.codecogs.com/png.latex?%0A%5Cleft%5C%7B%0A%5Cbegin%7Bsplit%7D%0AdX_t&amp;=b(t,X_t)%5C,dt+%5Csigma(t,X_t)%5C,dW_t%5C%5C%0AX_t&amp;=X_0+%5Cint_0%5Etb(s,X_s)%5C,ds+%5Cint_0%5Et%5Csigma(s,X_s)%5C,dW_s%0A%5Cend%7Bsplit%7D%0A%5Cright.%0A%5Ctag%7B4%7D"></span></p>
<p>The Itô formula is an important tool of stochastic calculus. It can be regarded as the stochastic version of the Taylor expansion of a function <img src="https://latex.codecogs.com/png.latex?f(t,X_t)"> stopped at the second order, where <img src="https://latex.codecogs.com/png.latex?X_t"> is a diffusion process. If the function <img src="https://latex.codecogs.com/png.latex?f(%5Ccdot,%5Ccdot)"> is a twice differentiable function on both arguments, we have:</p>
<p><span id="eq-eq5"><img src="https://latex.codecogs.com/png.latex?%0Adf(t,X_t)=f_t(t,X_t)%5C,dt+f_x(t,X_t)%5C,dX_t+%5Cfrac%7B1%7D%7B2%7Df_%7Bxx%7D(t,X_t)(dX_t)%5E2%0A%5Ctag%7B5%7D"></span></p>
<p>where:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0Af_t(t,x)=%5Cdfrac%7B%5Cpartial%7D%7B%5Cpartial%20t%7Df(t,x),%5Cquad%20f_x(t,x)=%5Cdfrac%7B%5Cpartial%20f(t,x)%7D%7B%5Cpartial%20x%7D,%5Cquad%20f_%7Bxx%7D(t,x)=%5Cdfrac%7B%5Cpartial%5E2%20f(t,x)%7D%7B%5Cpartial%20x%5E2%7D%0A"></p>
<p>Using Equation&nbsp;1 and the Itô lemma, which states that <img src="https://latex.codecogs.com/png.latex?(dW_t)%5E2=dt">, we have:</p>
<p><span id="eq-eq6"><img src="https://latex.codecogs.com/png.latex?%0A(dX_t)%5E2=%5Cleft%5Bb(t,X_t)%5C,dt+%5Csigma(t,X_t)%5C,dW_t%5Cright%5D%5E2=%5Csigma%5E2(t,X_t)%5C,dt+%5Ctext%7BO%7D(dt%5E%7B3/2%7D)%0A%5Ctag%7B6%7D"></span></p>
<p>Equation&nbsp;5 can thus be written:</p>
<p><span id="eq-eq7"><img src="https://latex.codecogs.com/png.latex?%0Adf(t,X_t)=%5Cleft%5Bf_t(t,X_t)+f_x(t,X_t)b(t,X_t)+%5Cfrac%7B1%7D%7B2%7Df_%7Bxx%7D(t,X_t)%5Cright%5Ddt+f_x(t,X_t)%5Csigma(t,X_t)%5C,dW_t%0A%5Ctag%7B7%7D"></span></p>
<section id="approximation-methods" class="level2">
<h2 class="anchored" data-anchor-id="approximation-methods">Approximation methods</h2>
<p>To apply a numerical method to the generic SDE of Equation&nbsp;1 over the time interval <img src="https://latex.codecogs.com/png.latex?%5B0,T%5D">, the time interval needs to be discretized <span class="citation" data-cites="higham.2001">(Higham 2001)</span>. Let <img src="https://latex.codecogs.com/png.latex?%5CDelta%20t=T/M"> for some positive integer <img src="https://latex.codecogs.com/png.latex?M">, and <img src="https://latex.codecogs.com/png.latex?t_n=n%5CDelta%20t">. The numerical approximation to <img src="https://latex.codecogs.com/png.latex?X(t_n)"> will be denoted <img src="https://latex.codecogs.com/png.latex?X_n"> (<img src="https://latex.codecogs.com/png.latex?n=1,%5Ccdots,M">).</p>
<p>The Euler-Maruyama method takes the form:</p>
<p><span id="eq-eq8"><img src="https://latex.codecogs.com/png.latex?%0A%5Cleft%5C%7B%0A%5Cbegin%7Bsplit%7D%0AX_n&amp;=X_%7Bn-1%7D+b(X_%7Bn-1%7D)%5CDelta%20t+%5Csigma(X_%7Bn-1%7D)%5CDelta%20W_%7Bn-1%7D%5C%5C%0AX_0&amp;=x_0%0A%5Cend%7Bsplit%7D%0A%5Cright.%0A%5Ctag%7B8%7D"></span></p>
<p>It is worth noting that in the case when <img src="https://latex.codecogs.com/png.latex?%5Csigma(X_t)=0">, then the problem becomes deterministic: this approximation method reduces to the standard Euler method for the ordinary differential equation <img src="https://latex.codecogs.com/png.latex?%5Cdot%7BX%7D_t=b(t,X_t)">.</p>
<p>The Milstein’s method adds a correction to the stochastic increment to produce the solution to the SDE. The correction arises because the Taylor expansion must be modified in the case of Itô calculus. Truncating the Taylor expansion to the second order at an appropriate point yields:</p>
<p><span id="eq-eq9"><img src="https://latex.codecogs.com/png.latex?%0A%5Cleft%5C%7B%0A%5Cbegin%7Bsplit%7D%0AX_n&amp;=X_%7Bn-1%7D+b(t_%7Bn-1%7D,X_%7Bn-1%7D)%5CDelta%20t+%5Csigma(t_%7Bn-1%7D,X_%7Bn-1%7D)%5CDelta%20W_%7Bn-1%7D%5C%5C%0A&amp;+%5Cdfrac%7B1%7D%7B2%7D%5Csigma(X_%7Bn-1%7D)%5Csigma_x(X_%7Bn-1%7D)%5Cleft%5B(%5CDelta%20W_%7Bn-1%7D)%5E2-%5CDelta%20t%5Cright%5D%5C%5C%0AX_0&amp;=x_0%0A%5Cend%7Bsplit%7D%0A%5Cright.%0A%5Ctag%7B9%7D"></span></p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Strong and weak convergence
</div>
</div>
<div class="callout-body-container callout-body">
<p>The methods of approximation of the continuous solution to an SDE are classified according to their different properties. Mainly two criteria of optimality are used in the literature: the strong and the weak (orders of) convergence.</p>
<p>A time-discretized approximation <img src="https://latex.codecogs.com/png.latex?X_%5Cdelta"> of a continuous-time process <img src="https://latex.codecogs.com/png.latex?X">, with <img src="https://latex.codecogs.com/png.latex?%5CDelta%20t"> the time increment of the discretization, is said to be of strong order of convergence <img src="https://latex.codecogs.com/png.latex?%5Cgamma"> to <img src="https://latex.codecogs.com/png.latex?X"> if for any fixed time horizon <img src="https://latex.codecogs.com/png.latex?T"> it holds true that</p>
<p><span id="eq-eq10"><img src="https://latex.codecogs.com/png.latex?%0AE%5B%5C,%5Cvert%20X_%7B%5CDelta%20t%7D(%5Ctau)-X(%5Ctau)%5Cvert%5C,%5D%5Cleq%20C%5CDelta%20t%5E%5Cgamma,%5Cquad%5Cforall%5CDelta%20t%3C%5CDelta%20t_0%0A%5Ctag%7B10%7D"></span></p>
<p>for any <img src="https://latex.codecogs.com/png.latex?%5Ctau%5Cin%5B0,T%5D">, with <img src="https://latex.codecogs.com/png.latex?%5CDelta%20t_0%3E0"> and <img src="https://latex.codecogs.com/png.latex?C"> a constant that does not depend on <img src="https://latex.codecogs.com/png.latex?%5CDelta%20t">.</p>
<p>Along with the strong convergence, the weak convergence can also be defined. In the same conditions as above, <img src="https://latex.codecogs.com/png.latex?X_%7B%5CDelta%20t%7D"> is said to converge weakly of order <img src="https://latex.codecogs.com/png.latex?%5Cgamma"> to <img src="https://latex.codecogs.com/png.latex?X"> if for any fixed horizon <img src="https://latex.codecogs.com/png.latex?T"> and any <img src="https://latex.codecogs.com/png.latex?2(%5Cbeta+1)"> continuous differentiable function <img src="https://latex.codecogs.com/png.latex?g"> of polynomial growth, it holds true that</p>
<p><span id="eq-eq11"><img src="https://latex.codecogs.com/png.latex?%0A%5Cvert%5C,E_g%5BX_%7B%5CDelta%20t%7D(%5Ctau)%5D-E_g%5BX(%5Ctau)%5D%5C,%5Cvert%5Cleq%20C%5CDelta%20t%5E%5Cbeta%0A%5Ctag%7B11%7D"></span></p>
<p>for any <img src="https://latex.codecogs.com/png.latex?%5Ctau%5Cin%5B0,T%5D">, with <img src="https://latex.codecogs.com/png.latex?%5CDelta%20t_0%3E0"> and <img src="https://latex.codecogs.com/png.latex?C"> a constant that does not depend on <img src="https://latex.codecogs.com/png.latex?%5CDelta%20t">.</p>
<p>Whereas the strong order of convergence measures the rate at which the <em>mean of the error</em> decays as <img src="https://latex.codecogs.com/png.latex?%5CDelta%20t%5Crightarrow0">, the weak order of convergence measures the rate of decay of the <em>error of the means</em>.</p>
<p>Methods of approximation of some order that strongly converge usually have a higher order of weak convergence. This is the case with the Euler-Maruyama method, which is strongly convergent of order <img src="https://latex.codecogs.com/png.latex?%5Cgamma=1/2"> and weakly convergent of order <img src="https://latex.codecogs.com/png.latex?%5Cbeta=1"> (under some smoothness conditions on the coefficients of the SDE). The Milstein’s method has both weak and strong order of convergence, <img src="https://latex.codecogs.com/png.latex?%5Cgamma=%5Cbeta=1">, which is superior to the Euler–Maruyama method.</p>
<p>It is interesting noting that, when the diffusion coefficient does not depend on the state variable of the process, the Euler-Maruyama and Milstein’s methods coincide. This is one important case, therefore, when the Euler-Maruyama method is strongly convergent of order <img src="https://latex.codecogs.com/png.latex?%5Cgamma=1">.</p>
</div>
</div>
</section>
<section id="numerical-test" class="level2">
<h2 class="anchored" data-anchor-id="numerical-test">Numerical test</h2>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Geometric Brownian motion
</div>
</div>
<div class="callout-body-container callout-body">
<p>The geometric Brownian motion (GBM) is the solution to the SDE:</p>
<p><span id="eq-eq12"><img src="https://latex.codecogs.com/png.latex?%0A%5Cleft%5C%7B%0A%5Cbegin%7Bsplit%7D%0AdX_t&amp;=%5Clambda%5C,X_t%5C,dt+%5Cmu%5C,X_t%5C,dW_t%5C%5C%0AX_0&amp;=x_0%0A%5Cend%7Bsplit%7D%0A%5Cright.%0A%5Ctag%7B12%7D"></span></p>
<p>where the parameter <img src="https://latex.codecogs.com/png.latex?%5Clambda"> is interpreted as the constant interest rate and <img src="https://latex.codecogs.com/png.latex?%5Cmu%3E0"> as the volatility. For a GBM, the drift and diffusion coefficients are both linearly related to the state variable <img src="https://latex.codecogs.com/png.latex?X">, namely <img src="https://latex.codecogs.com/png.latex?b(t,X_t)=%5Clambda%5C,X_t"> and <img src="https://latex.codecogs.com/png.latex?%5Csigma(X_t)=%5Cmu%5C,X_t">.</p>
<p>The explicit solution of the SDE Equation&nbsp;12 can be found by operating the following change of variable:</p>
<p><span id="eq-eq13"><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Bsplit%7D%0AY_t=%5Clog%20X_t%5Cquad%5Crightarrow%5Cquad%20dY_t&amp;=%5Cfrac%7B1%7D%7BX_t%7D%5C,dX_t-%5Cfrac%7B1%7D%7B2X_t%5E2%7D%5C,(dX_t)%5E2%5C%5C%0A&amp;=%5Cleft(%5Clambda-%5Cfrac%7B1%7D%7B2%7D%5Cmu%5E2%5Cright)dt+%5Cmu%5C,dW_t%0A%5Cend%7Bsplit%7D%0A%5Ctag%7B13%7D"></span></p>
<p>We obtain:</p>
<p><span id="eq-eq14"><img src="https://latex.codecogs.com/png.latex?%0AX_t=x_0%5Cexp%5Cleft%5B%5Cleft(%5Clambda-%5Cfrac%7B1%7D%7B2%7D%5Cmu%5E2%5Cright)t+%5Cmu%5C,W_t%5Cright%5D%0A%5Ctag%7B14%7D"></span></p>
</div>
</div>
<p>For the GBM, the following stochastic difference equations are obtained for the Euler-Maruyama method:</p>
<p><span id="eq-eq15"><img src="https://latex.codecogs.com/png.latex?%0A%5Cleft%5C%7B%0A%5Cbegin%7Bsplit%7D%0AX%5EE_n&amp;=X%5EE_%7Bn-1%7D(1+%5Clambda%5CDelta%20t+%5Cmu%5CDelta%20W_%7Bn-1%7D)%5C%5C%0AX%5EE_0&amp;=x_0%0A%5Cend%7Bsplit%7D%0A%5Cright.%0A%5Ctag%7B15%7D"></span></p>
<p>and for the Milstein method:</p>
<p><span id="eq-eq16"><img src="https://latex.codecogs.com/png.latex?%0A%5Cleft%5C%7B%0A%5Cbegin%7Bsplit%7D%0AX%5EM_n&amp;=X%5EM_%7Bn-1%7D+%5Clambda%20X%5EM_%7Bn-1%7D%5CDelta%20t+%5Cmu%20X%5EM_%7Bn-1%7D%5CDelta%20W_%7Bn-1%7D%5C%5C%0A&amp;+%5Cdfrac%7B1%7D%7B2%7D%5Cmu%5E2%20X%5EM_%7Bn-1%7D%5Cleft%5B(%5CDelta%20W_%7Bn-1%7D)%5E2-%5CDelta%20t%5Cright%5D%5C%5C%0A&amp;=X%5EM_%7Bn-1%7D%5Cleft%5B1+%5Cleft(%5Clambda-%5Cdfrac%7B1%7D%7B2%7D%5Cmu%5E2%5Cright)%5CDelta%20t+%5Cmu%5CDelta%20W_%7Bn-1%7D+%5Cdfrac%7B1%7D%7B2%7D%5Cmu%5E2(%5CDelta%20W_%7Bn-1%7D)%5E2%5Cright%5D%5C%5C%0AX%5EM_0&amp;=x_0%0A%5Cend%7Bsplit%7D%0A%5Cright.%0A%5Ctag%7B16%7D"></span></p>
<p>Recall that <img src="https://latex.codecogs.com/png.latex?%5CDelta%20W_%7Bn-1%7D=%5Csqrt%7B%5CDelta%20t%7D%5C,Z">, where <img src="https://latex.codecogs.com/png.latex?Z%5Cpropto%20N(0,1)">.</p>
<p>Equation&nbsp;15 reads:</p>
<p><span id="eq-eq17"><img src="https://latex.codecogs.com/png.latex?%0A%5Cleft%5C%7B%0A%5Cbegin%7Bsplit%7D%0AX%5EE_n&amp;=X%5EE_%7Bn-1%7D(1+%5Clambda%5CDelta%20t+%5Cmu%5Csqrt%7B%5CDelta%20t%7D%5C,Z)%5C%5C%0AX%5EE_0&amp;=x_0%0A%5Cend%7Bsplit%7D%0A%5Cright.%0A%5Ctag%7B17%7D"></span></p>
<p>Equation&nbsp;16 reads:</p>
<p><span id="eq-eq18"><img src="https://latex.codecogs.com/png.latex?%0A%5Cleft%5C%7B%0A%5Cbegin%7Bsplit%7D%0AX%5EM_n&amp;=X%5EM_%7Bn-1%7D%5Cleft%5B1+%5Cleft(%5Clambda+%5Cdfrac%7B1%7D%7B2%7D%5Cmu%5E2(Z%5E2-1)%5Cright)%5CDelta%20t+%5Cmu%5Csqrt%7B%5CDelta%20t%7D%5C,Z%5Cright%5D%5C%5C%0AX%5EM_0&amp;=x_0%5C%5C%0A%5Cend%7Bsplit%7D%0A%5Cright.%0A%5Ctag%7B18%7D"></span></p>
<p>Comparing the exact solution Equation&nbsp;14 with Equation&nbsp;18 shows how the Milstein method makes the Taylor expansion exact up to order <img src="https://latex.codecogs.com/png.latex?%5Ctext%7BO%7D(%5CDelta%20t)">.</p>
<p>The following code will test the strong convergence of both methods when they are applied to the linear SDE Equation&nbsp;12, with <img src="https://latex.codecogs.com/png.latex?%5Clambda=2,%5Cmu=1,x_0=1">. One thousand sample paths are simulated over the time interval <img src="https://latex.codecogs.com/png.latex?%5B0,1%5D">, for step sizes being integer multiples of <img src="https://latex.codecogs.com/png.latex?2%5E%7B-9%7D%5C;(8,4,2,1)">. The order of convergence is tested at the end point of the chosen time interval. The results of the simulations are shown in Figure&nbsp;1.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1792</span>)</span>
<span id="cb1-4">lambda  <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> </span>
<span id="cb1-5">mu      <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-6">Xzero   <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-7">T       <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-8">N       <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span></span>
<span id="cb1-9">dt      <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>N</span>
<span id="cb1-10">M       <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span></span>
<span id="cb1-11">Xerr_EM <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">matrix</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrow =</span> M, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb1-12">Xerr_M  <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">matrix</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrow =</span> M, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb1-13"></span>
<span id="cb1-14"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (i <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, M, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)) {</span>
<span id="cb1-15">  dW    <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(N, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mean =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sd =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>(dt))</span>
<span id="cb1-16">  W     <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cumsum</span>(dW)</span>
<span id="cb1-17">  Xtrue <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> Xzero<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">exp</span>((lambda <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>mu<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>T <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> mu<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>W[N])</span>
<span id="cb1-18">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (j <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>) {</span>
<span id="cb1-19">    R  <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span>(j<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span>)    </span>
<span id="cb1-20">    Dt <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> R<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>dt </span>
<span id="cb1-21">    L  <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> N<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>R</span>
<span id="cb1-22">    Xtemp_EM <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> Xzero</span>
<span id="cb1-23">    Xtemp_M  <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> Xzero</span>
<span id="cb1-24">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (k <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, L, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)) {</span>
<span id="cb1-25">      Winc     <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(dW[(R<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>(k<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>(R<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>k)])</span>
<span id="cb1-26">      Xtemp_EM <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> Xtemp_EM<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> Dt<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>lambda <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> mu<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>Winc)</span>
<span id="cb1-27">      Xtemp_M  <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> Xtemp_M<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> Dt<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>lambda <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>mu<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>(Winc<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> Dt) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> mu<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>Winc)</span>
<span id="cb1-28">    }</span>
<span id="cb1-29">    Xerr_EM[i, j] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abs</span>(Xtemp_EM <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> Xtrue)</span>
<span id="cb1-30">    Xerr_M[i, j]  <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abs</span>(Xtemp_M <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> Xtrue)</span>
<span id="cb1-31">  }</span>
<span id="cb1-32">}</span>
<span id="cb1-33">Dtvals <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>dt</span>
<span id="cb1-34">Xm_EM  <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">array</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dim =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)</span>
<span id="cb1-35">Xm_M   <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">array</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dim =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)</span>
<span id="cb1-36"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (i <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>) {</span>
<span id="cb1-37">  Xm_EM[i] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(Xerr_EM[, i])</span>
<span id="cb1-38">  Xm_M[i]  <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(Xerr_M[, i])</span>
<span id="cb1-39">}</span>
<span id="cb1-40">t   <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(Dtvals, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb1-41">g   <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Euler-Maruyama"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Milstein"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">each =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)</span>
<span id="cb1-42">e   <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(Xm_EM, Xm_M)</span>
<span id="cb1-43">e_t <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>(t), t)</span>
<span id="cb1-44">df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">t =</span> t, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">method =</span> g, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">error =</span> e, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">error_true =</span> e_t)</span></code></pre></div>
</details>
</div>
<div class="cell">
<div class="cell-output-display">
<div id="fig-fig1" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-fig1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://amsabatini.netlify.app/posts/numerical_simulation/index_files/figure-html/fig-fig1-1.png" class="img-fluid figure-img" width="672">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-fig1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;1: Strong error plot for the Euler-Maruyama and Milstein’s methods; dashed lines give the appropriate reference slope for each method, <img src="https://latex.codecogs.com/png.latex?%5Cgamma=0.5"> (Euler-Maruyama) and <img src="https://latex.codecogs.com/png.latex?%5Cgamma=1"> (Milstein).
</figcaption>
</figure>
</div>
</div>
</div>
</section>
<section id="lamperti-transform" class="level2">
<h2 class="anchored" data-anchor-id="lamperti-transform">Lamperti transform</h2>
<p>An interesting application of the Itô formula Equation&nbsp;7 is now discussed in connection with a formulation of Equation&nbsp;4 where the diffusion coefficient is not an explicit function of time, but only depends on the state variable <img src="https://latex.codecogs.com/png.latex?X">:</p>
<p><span id="eq-eq19"><img src="https://latex.codecogs.com/png.latex?%0AdX_t=b(t,X_t)%5C,dt+%5Csigma(X_t)%5C,dW_t%0A%5Ctag%7B19%7D"></span></p>
<p>The Lamperti transform is defined as follows:</p>
<p><span id="eq-eq20"><img src="https://latex.codecogs.com/png.latex?%0AY_t=F(X_t)=%5Cint_z%5E%7BX_t%7D%5Cfrac%7B1%7D%7B%5Csigma(s)%7D%5C,ds%0A%5Ctag%7B20%7D"></span></p>
<p>where <img src="https://latex.codecogs.com/png.latex?z"> is any arbitrary value in the state space of <img src="https://latex.codecogs.com/png.latex?X">. We assume that the function <img src="https://latex.codecogs.com/png.latex?F(%5Ccdot)"> defines a one-to-one mapping from the state space of <img src="https://latex.codecogs.com/png.latex?X"> to <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%7BR%7D">. We have:</p>
<p><span id="eq-eq21"><img src="https://latex.codecogs.com/png.latex?%0AF_t(X_t)=0%5Cquad%5Cquad%20F_x(X_t)=%5Cdfrac%7B1%7D%7B%5Csigma(X_t)%7D%5Cquad%5Cquad%20F_%7Bxx%7D(X_t)=-%5Cdfrac%7B%5Csigma_x(X_t)%7D%7B%5Csigma%5E2(X_t)%7D%0A%5Ctag%7B21%7D"></span></p>
<p>Applying the Itô formula Equation&nbsp;5, we obtain:</p>
<p><span id="eq-eq22"><img src="https://latex.codecogs.com/png.latex?%0A%5Cleft%5C%7B%0A%5Cbegin%7Bsplit%7D%0AdY_t&amp;=%5Cleft%5B%5Cdfrac%7Bb(t,X_t))%7D%7B%5Csigma(X_t)%7D-%5Cdfrac%7B1%7D%7B2%7D%5Csigma_x(X_t)%5Cright%5Ddt+dW_t%5C%5C%0AX_t&amp;=F%5E%7B-1%7D(Y_t)%0A%5Cend%7Bsplit%7D%0A%5Cright.%0A%5Ctag%7B22%7D"></span></p>
<p>The Lamperti transform changes the generic SDE Equation&nbsp;4 into another SDE with unitary diffusion coefficient. As an example of application of the Lamperti transform, we consider here a result on transformations of SDEs that is relevant for the topic of interest in this post.</p>
<p>First, we discretize the Lamperti transform of Equation&nbsp;22 using the Euler-Maruyama method (see Equation&nbsp;8):</p>
<p><span id="eq-eq23"><img src="https://latex.codecogs.com/png.latex?%0AY_n=Y_%7Bn-1%7D+%5Cleft%5B%5Cdfrac%7Bb(t_%7Bn-1%7D,X_%7Bn-1%7D)%7D%7B%5Csigma(X_%7Bn-1%7D)%7D-%5Cdfrac%7B1%7D%7B2%7D%5Csigma_x(X_%7Bn-1%7D)%5Cright%5D%5CDelta%20t+%5Csqrt%7B%5CDelta%20t%7D%5C,Z%0A%5Ctag%7B23%7D"></span></p>
<p>Second, we apply the Taylor expansion to the inverse transform <img src="https://latex.codecogs.com/png.latex?X_t=G(Y_t)">, noting that:</p>
<p><span id="eq-eq24"><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Bsplit%7D%0AG_y(Y_t)&amp;=%5Csigma(G(Y_t))%5C%5C%0AG_%7Byy%7D(Y_t)&amp;=%5Csigma(G(Y_t))%5Csigma_x(G(Y_t))%0A%5Cend%7Bsplit%7D%0A%5Ctag%7B24%7D"></span></p>
<p>We obtain:</p>
<p><span id="eq-eq25"><img src="https://latex.codecogs.com/png.latex?%0AG(Y_%7Bn%7D)=G(Y_%7Bn-1%7D)+G_y(Y_%7Bn-1%7D)(Y_n-Y_%7Bn-1%7D)+%5Cfrac%7B1%7D%7B2%7DG_%7Byy%7D(Y_%7Bn-1%7D)(Y_n-Y_%7Bn-1%7D)%5E2%0A%5Ctag%7B25%7D"></span></p>
<p>and hence:</p>
<p><span id="eq-eq26"><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Bsplit%7D%0AX_n&amp;=X_%7Bn-1%7D+%5Cleft%5Bb(t_%7Bn-1%7D,X_%7Bn-1%7D)-%5Cdfrac%7B1%7D%7B2%7D%5Csigma(X_%7Bn-1%7D)%5Csigma_x(X_%7Bn-1%7D)%5Cright%5D%5CDelta%20t%5C%5C%0A&amp;+%5Csigma(X_%7Bn-1%7D)%5Csqrt%7B%5CDelta%20t%7D%5C,Z+%5Cfrac%7B1%7D%7B2%7D%5Csigma(X_%7Bn-1%7D)%5Csigma_x(X_%7Bn-1%7D)%5CDelta%20t%5C,Z%5E2%0A%5Cend%7Bsplit%7D%0A%5Ctag%7B26%7D"></span></p>
<p>In conclusion, the Milstein method on the original process and the Euler-Maruyama method on the transformed process are equal up to and including the order <img src="https://latex.codecogs.com/png.latex?%5Ctext%7BO%7D(%5CDelta%20t)">.</p>
<p>In general if a transformation such as the Lamperti transform eliminates the interactions between the state of the process and the increments of the Wiener process, the performance of the Euler-Maruyama method on the transformed SDE are expected to improve.</p>
<p>The logarithmic transformation <img src="https://latex.codecogs.com/png.latex?F(X_t)=%5Clog%20X_t"> is an example of nonlinear transformation that is capable of eliminating the interaction between the state <img src="https://latex.codecogs.com/png.latex?X_t"> of the GBM process and the increments of the Wiener process <img src="https://latex.codecogs.com/png.latex?dW_t">, as shown in Equation&nbsp;13. Therefore the Euler-Maruyama method can be confidently applied to the transformed process; the Milstein method is then obtained by simply taking the Taylor expansion of the inverse transform.</p>



</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent" data-entry-spacing="0">
<div id="ref-higham.2001" class="csl-entry">
Higham, Desmond J. 2001. <span>“An Algorithmic Introduction to Numerical Simulation of Stochastic Differential Equations.”</span> <em>SIAM Review</em> 43 (3): 525–46. <a href="https://doi.org/10.1137/s0036144500378302">https://doi.org/10.1137/s0036144500378302</a>.
</div>
<div id="ref-iacus2008" class="csl-entry">
Iacus, Stefano M. 2008. <em>Simulation and Inference for Stochastic Differential Equations</em>. Springer New York. <a href="https://doi.org/10.1007/978-0-387-75839-8">https://doi.org/10.1007/978-0-387-75839-8</a>.
</div>
</div></section></div> ]]></description>
  <category>stochastic calculus</category>
  <guid>https://amsabatini.netlify.app/posts/numerical_simulation/</guid>
  <pubDate>Wed, 05 Jun 2024 22:00:00 GMT</pubDate>
</item>
<item>
  <title>Significant figures</title>
  <dc:creator>Angelo Maria Sabatini</dc:creator>
  <link>https://amsabatini.netlify.app/posts/significant_figures/</link>
  <description><![CDATA[ 




<section id="significant-figures" class="level2">
<h2 class="anchored" data-anchor-id="significant-figures">Significant figures</h2>
<p>It happens frequently that the number of digits that are available to report measurement results is high. Usually, measurement results are produced by carrying arithmetic operations with computers or calculators, whose level of numerical precision, albeit finite, is too high given the true information gathered by the measurements. In other words, the precision can be excessive, and too many digits can simply swamp the observer, making the message in the measurements more obscure. <strong>Significant figures</strong>, also referred to as significant digits, are specific digits within a number written in positional notation that carry both reliability and necessity in reporting a measurement result. Proper use of significant figures is thus an essential element in the presentation of both experimental and calculated results together with their associated uncertainty.</p>
<section id="rules-for-significant-figures" class="level3">
<h3 class="anchored" data-anchor-id="rules-for-significant-figures">Rules for significant figures</h3>
<p>A number of rules exist for determining how many significant figures are in a number:</p>
<ol type="1">
<li>non-zero digits are always significant</li>
</ol>
<ul>
<li>4.6 has two significant figures</li>
</ul>
<ol start="2" type="1">
<li>leading zeros placed before the first non-zero digit are not significant (they are called <em>placeholders</em>)</li>
</ol>
<ul>
<li>0.046 has two significant figures</li>
</ul>
<ol start="3" type="1">
<li>trailing zeros placed after all other digits but behind a decimal point are significant</li>
</ol>
<ul>
<li>4.60 has three significant figures</li>
</ul>
<p>The leftmost digit which is not a zero is referred to as the <em>most significant digit</em> (MSD); the rightmost digit of a decimal number is the <em>least significant digit</em> (LSD), regardless it is a zero or not: 4 and 0 are thus, respectively, the MSD and the LSD of 4.60; 4 and 1 are, respectively, the MSD and the LSD of 4.61. Every digit between the LSD and the MSD, including zeros, should be counted as significant figures, hence 4.60 and 40.60 have, respectively, three and four significant figures.</p>
<p>Ambiguous situations arise when zeros are at the end of the number and not behind a decimal point as, for example, in the number 4600. Confusion can be avoided if the number is expressed in <em>scientific notation</em>.</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Scientific notation
</div>
</div>
<div class="callout-body-container callout-body">
<p>Scientific notation is a way of expressing numbers that are much too large or much too small to be conveniently written in decimal form (i.e., their representation would involve a long string of digits). In scientific notation, nonzero numbers are written in the form:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0Am%5Ctimes10%5En%0A"></p>
<p>where <img src="https://latex.codecogs.com/png.latex?n"> is an integer, and the coefficient <img src="https://latex.codecogs.com/png.latex?m"> is a nonzero real number (usually <img src="https://latex.codecogs.com/png.latex?1%5Cleq%5Cvert%5C,m%5C,%5Cvert%3C10">). The integer <img src="https://latex.codecogs.com/png.latex?n"> is called the <em>exponent</em> and the real number <img src="https://latex.codecogs.com/png.latex?m"> is called the <em>mantissa</em>. If the number is negative, then a minus sign precedes <img src="https://latex.codecogs.com/png.latex?m">, as in ordinary decimal notation.</p>
</div>
</div>
<p>In scientific notation, the number 4600 can be written using a different number of significant figures, based on rule 3. above:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Bsplit%7D%0A4.600%5Ctimes%2010%5E3&amp;%5Cquad%5Ctext%7Bfour%20significant%20figures%7D%5C%5C%0A4.60%5Ctimes%2010%5E3&amp;%5Cquad%5Ctext%7Bthree%20significant%20figures%7D%5C%5C%0A4.6%5Ctimes%2010%5E3&amp;%5Cquad%5Ctext%7Btwo%20significant%20figures%7D%0A%5Cend%7Bsplit%7D%0A"></p>
</section>
<section id="rounding" class="level3">
<h3 class="anchored" data-anchor-id="rounding">Rounding</h3>
<p>A number can be <em>rounded</em> so as to drop digits until a prescribed number of significant figures is retained in the final representation. Recall that all the digits after the decimal point to the right of the desired LSD are to be dropped and not replaced with zeros, which otherwise should add to the number of significant figures (rule 3 above). The rules of rounding are the following:</p>
<ol type="1">
<li>if the digit to the right of the desired LSD is greater than 5, add 1 to the LSD, otherwise do nothing</li>
</ol>
<ul>
<li>Example - round at the fourth significant figure</li>
</ul>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Bsplit%7D%0A53.8%5Cunderline%7B7%7D4&amp;%5Crightarrow53.87%5C%5C%0A53.8%5Cunderline%7B7%7D9&amp;%5Crightarrow53.88%0A%5Cend%7Bsplit%7D%0A"></p>
<ol start="2" type="1">
<li>if the digit to the right of the LSD is 5, apply a tie-breaking rule, also called the <em>five rule</em>. When the first digit to be dropped is 5, the leading digit next to it is examined. If this digit is even, including zero, it is left unaltered; otherwise, one unit is added. This helps avoiding the accumulation of errors that would be otherwise determined by rounding systematically up or down. Using the five rule, five out of ten cases consist of rounding up and five out of ten cases consist of rounding down.</li>
</ol>
<ul>
<li>Example - round at the fifth significant figure</li>
</ul>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Bsplit%7D%0A726.8%5Cunderline%7B0%7D51%5Crightarrow%20726.80%5C%5C%0A726.8%5Cunderline%7B3%7D51%5Crightarrow%20726.84%5C%5C%0A726.8%5Cunderline%7B6%7D51%5Crightarrow%20726.86%5C%5C%0A726.8%5Cunderline%7B9%7D51%5Crightarrow%20726.90%0A%5Cend%7Bsplit%7D%0A"></p>
</section>
</section>
<section id="finite-precision-arithmetic" class="level2">
<h2 class="anchored" data-anchor-id="finite-precision-arithmetic">Finite precision arithmetic</h2>
<p>In mathematical operations involving significant figures, the result cannot be more precise than the least precise number. Calculations in finite precision arithmetic can be done following a few simple rules. One rule applies to multiplication and division, and another rule applies to addition and subtraction. Recall that values that are considered exact numbers, e.g., known conversion factors or physical constants, are not to be included in the determination of the number of significant figures.</p>
<section id="multiplication-and-division" class="level3">
<h3 class="anchored" data-anchor-id="multiplication-and-division">Multiplication and division</h3>
<blockquote class="blockquote">
<p>When we multiply/divide two numbers, we should add their relative uncertainties. The uncertainty of the result is given roughly by the number of the digits, regardless of their placement.</p>
</blockquote>
<p>In a calculation involving multiplication/division the number of significant figures in the result should equal the least number of significant figures in any one of the numbers being multiplied or divided.</p>
<p>In the following example, the number 1.6 is reported with two significant figures; the number 2, seen as a known constant, can be considered having an infinite number of significant figures, whereas the number 2.0 has two significant figures. The result should be reported with two significant figures in both cases:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Bsplit%7D%0A&amp;1.6%5Ctimes2=3.2&amp;%5C%5C%0A&amp;1.61%5Ctimes2.0=3.2&amp;%5Cquad%5Ctext%7Bnot%7D%5C;3.22%0A%5Cend%7Bsplit%7D%0A"></p>
</section>
<section id="addition-and-subtraction" class="level3">
<h3 class="anchored" data-anchor-id="addition-and-subtraction">Addition and subtraction</h3>
<blockquote class="blockquote">
<p>When we add/subtract two numbers, we should add their uncertainties. The uncertainty of the result is given roughly by the placement of the digits, not by the number of digits.</p>
</blockquote>
<p>In a calculation involving addition/subtraction, the number of decimal places in the result should equal the least number of decimal places in any one of the numbers being added or subtracted.</p>
<p>In the following example, the number 132.03 is reported with five significant figures, and the number 3.210 is reported with four significant figures. However, when the two numbers are added, what matters really is the number of decimal places, i.e., two for the number 132.03 and three for the number 3.210. The result should be reported with two decimal digits and not reported using four significant figures.</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Bsplit%7D%0A&amp;132.03+3.210=135.24&amp;%5C;%5Ctext%7Band%20not%7D%5C;135.2%5C%5C%0A&amp;132.03+3=135&amp;%5C;%5Ctext%7Band%20not%7D%5C;135.03%5C%5C%0A&amp;132.03+3.00=135.03&amp;%5C;%5Ctext%7Band%20not%7D%5C;135%5C%5C%0A%5Cend%7Bsplit%7D%0A"></p>
<p>The prescription about the minimum number of decimal places of any of the numbers involved in the calculation can be explained by considering that, implicitly, the precision of any measurement is dictated by the decimal place. For a measurement of length expressed in meters, for example, the second decimal digit implies a measurement precise to the hundredths (centimeter-level), the third decimal digit to the thousandth (millimeter-level). So by keeping the result with the minimum number of decimal places we basically state that we do not want to imply to get a result more precise than the least precise measurement that was needed to produce the result itself.</p>
</section>
<section id="multiple-arithmetic-operations" class="level3">
<h3 class="anchored" data-anchor-id="multiple-arithmetic-operations">Multiple arithmetic operations</h3>
<blockquote class="blockquote">
<p>In a calculation involving multiple arithmetic operations, the rules are applied without rounding results after each intermediate step. Instead keep track of the rightmost digit that would be retained. The operations would be performed in the following order:</p>
</blockquote>
<ul>
<li><p>operations in parentheses ( )</p></li>
<li><p>multiplication</p></li>
<li><p>division</p></li>
<li><p>addition</p></li>
<li><p>subtraction</p></li>
</ul>
<p>It is important to always perform intermediate calculations without rounding the numbers that are involved in the operations. If numbers are rounded every time during many sequential calculations, the results are skewed and some systematic error is surely introduced. Only after that all calculations are carried out with all digits retained at each step, the final result has to be rounded to the desired number of significant figures.</p>
<p>As an example, two numbers reported with five significant figures each are added, and the final result is rounded to three significant figures. If the addends are first rounded to three significant figures and then added, the result we produce is wrong:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Bsplit%7D%0A&amp;1.4248+1.2732=2.6980%5Crightarrow%202.70&amp;%5Cquad%5Ctext%7Bcorrect%7D%5C%5C%0A&amp;1.42+1.27=2.69%5Crightarrow%202.70&amp;%5Cquad%5Ctext%7Bwrong%7D%0A%5Cend%7Bsplit%7D%0A"></p>
<div id="exm-exm1" class="theorem example">
<p><span class="theorem-title"><strong>Example 1 (Sequential calculation)</strong></span> Suppose that we want to perform the following operation:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A(2.5%5Ctimes3.42)+13.681-0.1%0A"></p>
<ol type="1">
<li>perform first the product between parentheses - we keep track of the first decimal place, which would be retained based on rule B above.</li>
</ol>
<p><img src="https://latex.codecogs.com/png.latex?%0A2.5%5Ctimes3.42=8.%5Cunderline%7B5%7D500%0A"></p>
<ol start="2" type="1">
<li>perform addition - although, based on rule A above, the result would be expressed using five significant figures, only the first decimal place is kept tracked:</li>
</ol>
<p><img src="https://latex.codecogs.com/png.latex?%0A8.5500+13.681=22.%5Cunderline%7B2%7D310%0A"></p>
<ol start="3" type="1">
<li>perform subtraction:</li>
</ol>
<p><img src="https://latex.codecogs.com/png.latex?%0A22.2310-0.1=22.%5Cunderline%7B1%7D31%0A"></p>
<ol start="4" type="1">
<li>rounding to three significant figures:</li>
</ol>
<p><img src="https://latex.codecogs.com/png.latex?%0A(2.5%5Ctimes3.42)+13.681-0.1%5Crightarrow22.1%0A"></p>
</div>
<p>When doing multi-step calculations, we need:</p>
<ul>
<li><p>to keep at least one more significant figure in intermediate results than needed in the final answer. Furthermore, never round intermediate answers: rounding, say, to two significant figures in an intermediate answer, and then writing three significant figures in the final answer is wrong.</p></li>
<li><p>not to write more significant figures in the final result (of a measurement process) than justified (by the measurement uncertainty).</p></li>
</ul>
</section>
</section>
<section id="significant-figures-and-measurement-uncertainty" class="level2">
<h2 class="anchored" data-anchor-id="significant-figures-and-measurement-uncertainty">Significant figures and measurement uncertainty</h2>
<p>The value of one measurand must be delivered by rounding the digit loaded by the measurement uncertainty <img src="https://latex.codecogs.com/png.latex?U">, where <img src="https://latex.codecogs.com/png.latex?U"> is represented by a number with, usually, no more than one or two significant figures (rounded up, possibly). The additional uncertainty due to rounding must be checked for being negligible compared to <img src="https://latex.codecogs.com/png.latex?U">. Essentially, <img src="https://latex.codecogs.com/png.latex?U"> gives an estimate of the errors incurred in the measurement.</p>
<p>For example, if we have a length <img src="https://latex.codecogs.com/png.latex?L=(12.37%5Cpm0.10)%5C;%5Ctext%7Bcm%7D">, we can report the length as <img src="https://latex.codecogs.com/png.latex?L=12.4%5C;%5Ctext%7Bcm%7D">. When we express a number with three significant figures, what we are saying is that the first two digits are essentially exactly correct, and the last one is uncertain by a small amount (generally it is only uncertain by about <img src="https://latex.codecogs.com/png.latex?%5Cpm1">). In the example above, we rounded our answer to <img src="https://latex.codecogs.com/png.latex?12.4%5C;%5Ctext%7Bcm%7D"> because our answer is uncertain to <img src="https://latex.codecogs.com/png.latex?%5Cpm0.1%5C;%5Ctext%7Bcm%7D">, namely our answer is uncertain in the last digit by about 1.</p>
<div id="exm-exm2" class="theorem example">
<p><span class="theorem-title"><strong>Example 2 (Rounding)</strong></span> Round the measurement <img src="https://latex.codecogs.com/png.latex?z=12.0349%5C;%5Ctext%7Bcm%7D">, whose uncertainty is stated being <img src="https://latex.codecogs.com/png.latex?%5CDelta%20z=0.153%5C;%5Ctext%7Bcm%7D">.</p>
<ol type="1">
<li>round the uncertainty to two significant figures:</li>
</ol>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5CDelta%20z=0.15%5C,%5Ctext%7Bcm%7D%0A"></p>
<ol start="2" type="1">
<li>round <img src="https://latex.codecogs.com/png.latex?z"> using the same number of decimal places as <img src="https://latex.codecogs.com/png.latex?%5CDelta%20z">:</li>
</ol>
<p><img src="https://latex.codecogs.com/png.latex?%0Az=12.03%5C,%5Ctext%7Bcm%7D%0A"></p>
<ol start="3" type="1">
<li>provide the measurement report:</li>
</ol>
<p><img src="https://latex.codecogs.com/png.latex?%0Az%5Cpm%5CDelta%20z=(12.03%5Cpm0.15)%5C,%5Ctext%7Bcm%7D%0A"></p>
</div>
<div id="exm-exm3" class="theorem example">
<p><span class="theorem-title"><strong>Example 3 (Use of the scientific notation)</strong></span> When the answer is given in scientific notation, the uncertainty should be given in scientific notation with the same power of ten as the answer. Suppose that <img src="https://latex.codecogs.com/png.latex?z=1.43%5Ctimes10%5E6%5C;%5Ctext%7Bs%7D"> and <img src="https://latex.codecogs.com/png.latex?%5CDelta%20z=2%5Ctimes10%5E4%5C;%5Ctext%7Bs%7D">:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0Az%5Cpm%5CDelta%20z=(1.43%5Cpm0.02)%5C,10%5E6%5C;%5Ctext%7Bs%7D%0A"></p>
</div>
<div id="exm-exm4" class="theorem example">
<p><span class="theorem-title"><strong>Example 4 (Addition/subtraction of uncertain numbers)</strong></span> The length of two blocks is measured, and the measurements are <img src="https://latex.codecogs.com/png.latex?l_1=1.13%5C;%5Ctext%7Bm%7D"> (considered precise to the level of centimeters) and <img src="https://latex.codecogs.com/png.latex?l_2=0.551%5C;%5Ctext%7Bm%7D"> (considered precise to the level of millimeters). We need to compute the length <img src="https://latex.codecogs.com/png.latex?l"> of the block resulting from stacking the two blocks together:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0Al=l_1+l_2=1.681%5C;%5Ctext%7Bm%7D%5Crightarrow%20l=1.68%5C;%5Ctext%7Bm%7D%0A"></p>
<p>It does not make any physical sense to consider the length of the overall block precise to the level of the millimeters, given that one of the two blocks is measured less precisely. The result should be at least as precise as the least precise term involved in the addition, as stated by the rule for addition/subtraction of uncertain numbers.</p>
</div>
<div id="exm-exm5" class="theorem example">
<p><span class="theorem-title"><strong>Example 5 (Multiplication/division of uncertain numbers)</strong></span> A rectangular floor needs to be covered by a number of squared tiles. According to the measurements that are available, the rectangular floor has width <img src="https://latex.codecogs.com/png.latex?w=1.91%5C;%5Ctext%7Bm%7D"> and length <img src="https://latex.codecogs.com/png.latex?l=1.57%5C;%5Ctext%7Bm%7D"> and each squared tile has size <img src="https://latex.codecogs.com/png.latex?a=0.15%5C;%5Ctext%7Bm%7D">. All measurements are considered precise to the level of centimeters, and three significant figures should then be considered for their numerical representation. The number of tiles can be easily calculated:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AN%5Capprox%5Cdfrac%7Bw%5C,l%7D%7Ba%5E2%7D=133.2756%5C;%5Ctext%7Bm%7D%5E2%5C,%5Ctext%7Bm%7D%5E%7B-2%7D%0A"></p>
<p>To comply with the rule for multiplication/division between uncertain numbers, <img src="https://latex.codecogs.com/png.latex?133.2756"> has to be rounded using three significant figures, yielding the integer <img src="https://latex.codecogs.com/png.latex?N=133">, which is then the number of tiles expected to cover the floor.</p>
</div>
<div id="exm-exm6" class="theorem example">
<p><span class="theorem-title"><strong>Example 6 (Conversion of scale)</strong></span> A measurement of temperature is performed, leading to the following report:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AT_c=(54.0%5Cpm0.5)%5C;%5E%7B%5Ccirc%7D%5Ctext%7BC%7D%0A"></p>
<p>We want to convert this expression in units of kelvin:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AT_K=T_C+273.15=(327.15%5Cpm0.5)%5C;%5Ctext%7BK%7D%0A"></p>
<p>The uncertainty expressed in degree Celsius (<img src="https://latex.codecogs.com/png.latex?%5Cpm0.5%5C;%5E%7B%5Ccirc%7D%5Ctext%7BC%7D">) translates directly in the uncertainty expressed in kelvin (<img src="https://latex.codecogs.com/png.latex?%5Cpm%200.5%5C;%5Ctext%7BK%7D">). This is because transforming a measurement expressed in degree Celsius into a measurement expressed in kelvin implies a change of offset, but not a change of scale. Since the uncertainty loads the first decimal digit of the numerical representation of the measured temperature, we should report <img src="https://latex.codecogs.com/png.latex?T_K"> with one decimal digit, which requires rounding (based on the five rule):</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AT_k=(327.2%5Cpm0.5)%5C;%5Ctext%7BK%7D%0A"></p>
<p>The prescription of the minimum number of significant figures (rule for the addition/subtraction of uncertain numbers) would yield <img src="https://latex.codecogs.com/png.latex?T_k=327%5C;%5Ctext%7BK%7D">. This is because <img src="https://latex.codecogs.com/png.latex?54.0"> has three significant figures, and <img src="https://latex.codecogs.com/png.latex?273.15"> can be considered to have an infinite number of significant figures, since it is a known constant; hence <img src="https://latex.codecogs.com/png.latex?T_K"> should be reported with three significant figures according to the rule for addition/subtraction of uncertain numbers. However, this rule is superseded by considering the prescription concerning how to express the measurement uncertainty.</p>
</div>
<blockquote class="blockquote">
<p>The concept of significant figures and their relation with measurement uncertainty has been briefly reviewed. This topic is important because many measured quantities are often reported with more significant figures than necessary, in the face of the loaded uncertainty. Reporting too many digits is confusing for the reader and of no relevance as for the information content associated to the measurements.</p>
</blockquote>


</section>

 ]]></description>
  <category>measurement</category>
  <guid>https://amsabatini.netlify.app/posts/significant_figures/</guid>
  <pubDate>Mon, 13 May 2024 22:00:00 GMT</pubDate>
  <media:content url="https://amsabatini.netlify.app/posts/significant_figures/significant_figures.png" medium="image" type="image/png" height="150" width="144"/>
</item>
<item>
  <title>Augmented Dickey-Fuller test</title>
  <dc:creator>Angelo Maria Sabatini</dc:creator>
  <link>https://amsabatini.netlify.app/posts/dickey_fuller/</link>
  <description><![CDATA[ 




<section id="stationary-time-series" class="level2">
<h2 class="anchored" data-anchor-id="stationary-time-series">Stationary time series</h2>
<p>Roughly, for a time series to be stationary three conditions are needed:</p>
<ul>
<li><p>it shows mean reversion, namely it fluctuates around a constant long-term mean</p></li>
<li><p>it has finite variance that is time-invariant.</p></li>
<li><p>autocorrelations decay relatively fast as lag lenghts increase.</p></li>
</ul>
<p>The identification of stationary series can be done by checking whether the autocorrelation function (ACF) drops to zero relatively quickly; usually, the ACF of non-stationary data decreases slowly, and the first-lag value is often large and positive. However, this method is necessarily imprecise, leading to ambiguous situations that cannot be easily deciphered, especially when the sample size is small.</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Backshift notation
</div>
</div>
<div class="callout-body-container callout-body">
<p>The backward shift operator <img src="https://latex.codecogs.com/png.latex?B"> is defined as follows:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0ABY_t=Y_%7Bt-1%7D%0A"></p>
<p>The operator <img src="https://latex.codecogs.com/png.latex?B"> operates on the <img src="https://latex.codecogs.com/png.latex?t">th sample of a time series, with the effect of shifting the sample back one period (first difference). Recall that two applications of the backward shift operator to <img src="https://latex.codecogs.com/png.latex?Y_t"> shift the sample back two periods (second difference):</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AB(BY_t)=B%5E2Y_t=Y_%7Bt-2%7D%0A"></p>
<p>For example, in the case of monthly data, if we wish to consider <em>the same month last year</em>, the notation is <img src="https://latex.codecogs.com/png.latex?B%5E%7B12%7DY_t=Y_%7Bt-12%7D">.</p>
<p>The backward shift operator is useful to describe the operation of <strong>differencing</strong>, the technique of election to stabilize the mean value of nonstationary time series by removing changes in the level of a time series, and therefore eliminating (or reducing) trend and seasonality.</p>
<p>A first-order difference is defined as follows:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AY%5E%7B%5Cprime%7D_t=Y_t-Y_%7Bt-1%7D=Y_t-BY_t=(1-B)Y_t%0A"></p>
<p>If a second-order difference is considered, namely the first-order difference of a first-order difference, we can write:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Bsplit%7D%0AY%5E%7B%5Cprime%5Cprime%7D_t&amp;=Y%5E%7B%5Cprime%7D_t-Y%5E%7B%5Cprime%7D_%7Bt-1%7D%5C%5C%0A&amp;=(1-B)%5E2Y_t=Y_t-2BY_t+B%5E2Y_t%5C%5C%0A&amp;=Y_t-2Y_%7Bt-1%7D+Y_%7Bt-2%7D%0A%5Cend%7Bsplit%7D%0A"></p>
<p>A <img src="https://latex.codecogs.com/png.latex?d">-order difference can be written <img src="https://latex.codecogs.com/png.latex?(1-B)%5Ed">. It is important to note that a second-order difference, denoted by <img src="https://latex.codecogs.com/png.latex?(1-B)%5E2">, is not the same as a second difference, which is denoted by <img src="https://latex.codecogs.com/png.latex?B%5E2">.</p>
<p>For example, a seasonal difference followed by a first difference can be written:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Bsplit%7D%0AY%5E%7B%5Cprime%7D_t&amp;=(1-B)(1-B%5E%7B12%7D)Y_t%5C%5C%0A&amp;=(1-B-B%5E%7B12%7D-B%5E%7B13%7D)Y_t%5C%5C%0A&amp;=Y_t-Y_%7Bt-1%7D-Y_%7Bt-12%7D-Y_%7Bt-13%7D%0A%5Cend%7Bsplit%7D%0A"></p>
<p>Sometimes, as I will always do in the following of this post, the notation <img src="https://latex.codecogs.com/png.latex?%5CDelta"> is also used to indicate the first-order difference, i.e., <img src="https://latex.codecogs.com/png.latex?%5CDelta%20Y_t=(1-B)Y_t">.</p>
</div>
</div>
<p>A <strong>unit root process</strong>, also called difference-stationary process (DSP), is a data-generating process whose first difference is stationary.</p>
<p>There are two basic models for time series with linear growth characteristics:</p>
<ul>
<li>Trend stationary process</li>
</ul>
<p><img src="https://latex.codecogs.com/png.latex?%0AY_t=c+%5Cdelta%20t+%5Ctext%7Bstationary%20process%7D%0A"></p>
<ul>
<li>Unit root process</li>
</ul>
<p><img src="https://latex.codecogs.com/png.latex?%0AY_t=Y_%7Bt-1%7D+%5Ctext%7Bstationary%20process%7D%0A"></p>
<p>The processes are indistinguishable for short data records, in the sense that both a trend stationary process (TSP) and a DSP can fit short data records extremely well. However, the processes can be distinguished when restricted to a particular subclass of data-generating processes, such as AR(<img src="https://latex.codecogs.com/png.latex?p">) processes.</p>
<p>Consider the case of an AR(1) process:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AY_t=a_1Y_%7Bt-1%7D+%5Cepsilon_t%0A"></p>
<p>We may be interested in testing the hypothesis <img src="https://latex.codecogs.com/png.latex?a_1=1">. Since under the null hypothesis the sequence <img src="https://latex.codecogs.com/png.latex?%5C%7BY_t%5C%7D"> is generated by a nonstationary process, and the variance becomes infinitely large as <img src="https://latex.codecogs.com/png.latex?t"> increases, classical statistical methods cannot be used.</p>
<p>Dickey and Fuller devised a procedure to formally test for the presence of a unit root against a number of possible alternatives for explaining the data. It is important to recall that TSP and DSP can produce different forecasts and can give rise to spurious regressions, therefore their detection in time series is a truly important task.</p>
</section>
<section id="augmented-dickey-fuller-test" class="level2">
<h2 class="anchored" data-anchor-id="augmented-dickey-fuller-test">Augmented Dickey-Fuller test</h2>
<p>A distinction between stationary and nonstationary time series is made by formal statistical procedures such as the ADF (Augmented Dickey-Fuller) test, which is frequently used since it also accounts for serial correlation in the time series.</p>
<p>Three specifications of the ADF test are based on the following regression equations.</p>
<section id="type-1-unit-root-with-none" class="level4">
<h4 class="anchored" data-anchor-id="type-1-unit-root-with-none">Type 1 (unit root with “none”)</h4>
<p><span id="eq-eq8"><img src="https://latex.codecogs.com/png.latex?%0A%5CDelta%20Y_t=%5Cgamma%20Y_%7Bt-1%7D+%5Cunderbrace%7B%5Csum_%7Bi=2%7D%5Ep%5Cbeta_i%5CDelta%20Y_%7Bt-i+1%7D%7D_%7B%5Ctext%7Bserial%20correlation%7D%7D+%5Cepsilon_t%0A%5Ctag%7B1%7D"></span></p>
<p>where <img src="https://latex.codecogs.com/png.latex?%5Cepsilon_t"> is white Gaussian noise, stationary with zero mean and constant variance. The statistical hypothesis test is:</p>
<p><span id="eq-eq9"><img src="https://latex.codecogs.com/png.latex?%0A(%5Ctau_1)%5Crightarrow%5Cleft%5C%7B%0A%5Cbegin%7Bsplit%7DH_0:&amp;%5Cquad%5Cgamma=0%5C%5C%0AH_1:&amp;%5Cquad%5Cgamma%5Cneq%200%0A%5Cend%7Bsplit%7D%0A%5Cright.%0A%5Ctag%7B2%7D"></span></p>
<p>The null hypothesis prescribes the existence of a unit-root in the model. Rejection of the null implies that the original time series <em>does not have a unit root</em>.</p>
</section>
<section id="type-2-unit-root-with-drift" class="level4">
<h4 class="anchored" data-anchor-id="type-2-unit-root-with-drift">Type 2 (unit root with “drift”)</h4>
<p><span id="eq-eq10"><img src="https://latex.codecogs.com/png.latex?%0A%5CDelta%20Y_t=%5Cgamma%20Y_%7Bt-1%7D+%5Cunderbrace%7Ba_0%7D_%7B%5Ctext%7Bdrift%7D%7D+%5Cunderbrace%7B%5Csum_%7Bi=2%7D%5Ep%5Cbeta_i%5CDelta%20Y_%7Bt-i+1%7D%7D_%7B%5Ctext%7Bserial%20correlation%7D%7D+%5Cepsilon_t%0A%5Ctag%7B3%7D"></span></p>
<p>The statistical hypothesis tests are:</p>
<p><span id="eq-eq11"><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Bsplit%7D%0A&amp;(%5Cphi_1)%5Crightarrow%5Cleft%5C%7B%0A%5Cbegin%7Bsplit%7DH_0:&amp;%5Cquad%5Cgamma=0%5C;%5Ctext%7Band%7D%5C;a_0=0%5C%5C%0AH_1:&amp;%5Cquad%5Cgamma%5Cneq%200%5C;%5Ctext%7B%20%20or%7D%5C;%5C;%5C,a_0%5Cneq0%0A%5Cend%7Bsplit%7D%0A%5Cright.%5C%5C%0A&amp;%5C%5C%0A&amp;(%5Ctau_2)%5Crightarrow%5Cleft%5C%7B%0A%5Cbegin%7Bsplit%7DH_0:&amp;%5Cquad%5Cgamma=0%5C%5C%0AH_1:&amp;%5Cquad%5Cgamma%5Cneq%200%0A%5Cend%7Bsplit%7D%0A%5Cright.%0A%5Cend%7Bsplit%7D%0A%5Ctag%7B4%7D"></span></p>
</section>
<section id="type-3-unit-root-with-drift-and-trend" class="level4">
<h4 class="anchored" data-anchor-id="type-3-unit-root-with-drift-and-trend">Type 3 (unit root with “drift and trend”)</h4>
<p><span id="eq-eq12"><img src="https://latex.codecogs.com/png.latex?%0A%5CDelta%20Y_t=%5Cgamma%20Y_%7Bt-1%7D+%5Cunderbrace%7Ba_0%7D_%7B%5Ctext%7Bdrift%7D%7D+%5Cunderbrace%7Ba_2t%7D_%7B%5Ctext%7Btrend%7D%7D+%5Cunderbrace%7B%5Csum_%7Bi=2%7D%5Ep%5Cbeta_i%5CDelta%20Y_%7Bt-i+1%7D%7D_%7B%5Ctext%7Bserial%20correlation%7D%7D+%5Cepsilon_t%0A%5Ctag%7B5%7D"></span></p>
<p>The statistical hypothesis tests are:</p>
<p><span id="eq-eq13"><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Bsplit%7D%0A&amp;(%5Cphi_2)%5Crightarrow%5Cleft%5C%7B%0A%5Cbegin%7Bsplit%7DH_0:&amp;%5Cquad%5Cgamma=0%5C;%5Ctext%7Band%7D%5C;a_0=0%5C;%5Ctext%7Band%7D%5C;a_2=0%5C%5C%0AH_1:&amp;%5Cquad%5Cgamma%5Cneq%200%5C;%5Ctext%7B%20%20or%7D%5C;%5C;%5C,a_0%5Cneq0%5C;%5Ctext%7B%20%20or%7D%5C;%5C;%5C,a_2%5Cneq0%5C%5C%0A%5Cend%7Bsplit%7D%0A%5Cright.%5C%5C%0A&amp;%5C%5C%0A&amp;(%5Cphi_3)%5Crightarrow%5Cleft%5C%7B%0A%5Cbegin%7Bsplit%7DH_0:&amp;%5Cquad%5Cgamma=0%5C;%5Ctext%7Band%7D%5C;a_2=0%5C%5C%0AH_1:&amp;%5Cquad%5Cgamma%5Cneq%200%5C;%5Ctext%7B%20%20or%7D%5C;%5C;%5C,a_2%5Cneq0%0A%5Cend%7Bsplit%7D%0A%5Cright.%5C%5C%0A&amp;%5C%5C%0A&amp;(%5Ctau_3)%5Crightarrow%5Cleft%5C%7B%0A%5Cbegin%7Bsplit%7DH_0:&amp;%5Cquad%5Cgamma=0%5C%5C%0AH_1:&amp;%5Cquad%5Cgamma%5Cneq%200%0A%5Cend%7Bsplit%7D%0A%5Cright.%0A%5Cend%7Bsplit%7D%0A%5Ctag%7B6%7D"></span></p>
<p>Each of the six tests <img src="https://latex.codecogs.com/png.latex?(%5Ctau_1),(%5Ctau_2),(%5Ctau_3),(%5Cphi_1),(%5Cphi_2),(%5Cphi_3)"> in Equation&nbsp;2, Equation&nbsp;4 and Equation&nbsp;6 corresponds to a progressively more complex linear regression. In all of them there is the root, but in the “drift” model there is also a drift term, and in the “drift and trend” model there are also drift and trend terms. All the coefficients in the models have an associated significance level. While the significance of the root coefficient is the most important and the main focus of the ADF test, we might also be interested in knowing whether or not the drift and trend coefficients are statistically significant.</p>
<div class="callout callout-style-default callout-important callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Summary of the Dickey-Fuller tests
</div>
</div>
<div class="callout-body-container callout-body">
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Bsplit%7D%0A&amp;%5Cbegin%7Bsplit%7D%0A&amp;%5Ctextbf%7BTrend%7D%5Cquad%5Cquad%5CDelta%20Y_t=%5Cgamma%20Y_%7Bt-1%7D+a_0+a_2t+%5Csum_%7Bi=2%7D%5Ep%5Cbeta_i%5CDelta%20Y_%7Bt-i+1%7D+%5Cepsilon_t%5C%5C%0A&amp;%5Cbegin%7Bsplit%7D%0A&amp;%5Ctext%7Bif%7D%5C;(%5Cphi_2)%5C;%5Ctext%7Bis%20rejected,%20unit%20root%20is%20NOT%20present%20OR%20there%20is%20trend%20OR%20there%20is%20drift%7D%5C%5C%0A&amp;%5Ctext%7Bif%7D%5C;(%5Cphi_2)%5C;%5Ctext%7Bfails%20to%20be%20rejected,%20unit%20root%20is%20present%20AND%20there%20is%20NO%20trend%20AND%20there%20is%20NO%20drift%7D%5C%5C%0A&amp;%5Ctext%7Bif%7D%5C;(%5Cphi_3)%5C;%5Ctext%7Bis%20rejected,%20unit%20root%20is%20NOT%20present%20OR%20there%20is%20trend%7D%5C%5C%0A&amp;%5Ctext%7Bif%7D%5C;(%5Cphi_3)%5C;%5Ctext%7Bfails%20to%20be%20rejected,%20unit%20root%20is%20present%20AND%20there%20is%20NO%20trend%7D%5C%5C%0A&amp;%5Ctext%7Bif%7D%5C;(%5Ctau_3)%5C;%5Ctext%7Bis%20rejected,%20unit%20root%20is%20NOT%20present%7D%5C%5C%0A&amp;%5Ctext%7Bif%7D%5C;(%5Ctau_3)%5C;%5Ctext%7Bfails%20to%20be%20rejected,%20unit%20root%20is%20present%7D%5C%5C%0A&amp;%5Cend%7Bsplit%7D%0A&amp;%5Cend%7Bsplit%7D%5C%5C%0A&amp;%5Cbegin%7Bsplit%7D%0A&amp;%5Ctextbf%7BDrift%7D%5Cquad%5Cquad%5CDelta%20Y_t=%5Cgamma%20Y_%7Bt-1%7D+a_0+%5Csum_%7Bi=2%7D%5Ep%5Cbeta_i%5CDelta%20Y_%7Bt-i+1%7D+%5Cepsilon_t%5C%5C%0A&amp;%5Cbegin%7Bsplit%7D%0A&amp;%5Ctext%7Bif%7D%5C;(%5Cphi_1)%5C;%5Ctext%7Bis%20rejected,%20unit%20root%20is%20NOT%20present%20OR%20there%20is%20drift%7D%5C%5C%0A&amp;%5Ctext%7Bif%7D%5C;(%5Cphi_1)%5C;%5Ctext%7Bfails%20to%20be%20rejected,%20unit%20root%20is%20present%20AND%20there%20is%20NO%20drift%7D%5C%5C%0A&amp;%5Ctext%7Bif%7D%5C;(%5Ctau_2)%5C;%5Ctext%7Bis%20rejected,%20unit%20root%20is%20NOT%20present%7D%5C%5C%0A&amp;%5Ctext%7Bif%7D%5C;(%5Ctau_2)%5C;%5Ctext%7Bfails%20to%20be%20rejected,%20unit%20root%20is%20present%7D%5C%5C%0A&amp;%5Cend%7Bsplit%7D%0A&amp;%5Cend%7Bsplit%7D%5C%5C%0A&amp;%5Cbegin%7Bsplit%7D%0A&amp;%5Ctextbf%7BNone%7D%5Cquad%5Cquad%5CDelta%20Y_t=%5Cgamma%20Y_%7Bt-1%7D+%5Csum_%7Bi=2%7D%5Ep%5Cbeta_i%5CDelta%20Y_%7Bt-i+1%7D+%5Cepsilon_t%5C%5C%0A&amp;%5Cbegin%7Bsplit%7D%0A&amp;%5Ctext%7Bif%7D%5C;(%5Ctau_1)%5C;%5Ctext%7Bis%20rejected,%20unit%20root%20is%20NOT%20present%7D%5C%5C%0A&amp;%5Ctext%7Bif%7D%5C;(%5Ctau_1)%5C;%5Ctext%7Bfails%20to%20be%20rejected,%20unit%20root%20is%20present%7D%0A&amp;%5Cend%7Bsplit%7D%0A&amp;%5Cend%7Bsplit%7D%0A%5Cend%7Bsplit%7D%0A"></p>
</div>
</div>
<p>An important extension of the ADF test concerns the case when the noise error term is not white. If the error term is not white and we run the ADF test as it is without accounting for serial correlation, many more rejection of the null tend to be produced than stated at the specified significance level. As the ADF test also deal with the serial correlation by introducing lagged terms, hence we need to select this lag order. This is accomplished by investigating several information criteria, including the autocorrelation function (ACF), but henceforth I limit to use the automatic lag selection functionality provided by the same function of R I will use for running the ADF test. Recall that, in general, the test statistics of the ADF test are very sensitive to changes in the lag structure.</p>
</section>
</section>
<section id="example" class="level2">
<h2 class="anchored" data-anchor-id="example">Example</h2>
<p>I use functions and data from the <code>urca</code> package. The data set contains the series that S. Johansen and K. Juselius considered for estimating the money demand function of Denmark <span class="citation" data-cites="johansen1990">(Johansen and Juselius 1990)</span>. A data frame with quarterly data from Denmark starting in 1974:Q1 until 1987:Q3 contains six variables, including the log real income <code>LRY</code>, whose evolution, together with that of its first difference, is shown in Figure&nbsp;1.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggpubr)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(grid)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(urca)</span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(zoo)</span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data</span>(denmark)</span>
<span id="cb1-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">attach</span>(denmark)</span>
<span id="cb1-9">denmark <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.data.frame</span>(denmark)</span>
<span id="cb1-10">a <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.character</span>(ENTRY)</span>
<span id="cb1-11">k <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(a)</span>
<span id="cb1-12"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (i <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>k) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">substring</span>(a[i], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">first =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">last =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-"</span></span>
<span id="cb1-13">ENTRY <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.yearqtr</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.factor</span>(a))</span>
<span id="cb1-14"></span>
<span id="cb1-15">df_ts  <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> ENTRY, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> LRY)</span>
<span id="cb1-16">df_dts <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> ENTRY[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>k<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span>], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">diff</span>(LRY))</span>
<span id="cb1-17"></span>
<span id="cb1-18">my_theme <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(</span>
<span id="cb1-19">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.title.x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>),</span>
<span id="cb1-20">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.text.x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>),</span>
<span id="cb1-21">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.title.y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>),</span>
<span id="cb1-22">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.text.y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>),</span>
<span id="cb1-23">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.title =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>),</span>
<span id="cb1-24">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.text =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>),</span>
<span id="cb1-25">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">panel.border =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb1-26">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">panel.grid.major =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb1-27">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">panel.grid.minor =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb1-28">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">panel.background =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb1-29">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.line =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_line</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>))</span>
<span id="cb1-30"></span>
<span id="cb1-31">p_ts <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(df_ts, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(x, y)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-32">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blue"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-33">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>,</span>
<span id="cb1-34">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"LRY"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb1-35">  my_theme</span>
<span id="cb1-36"></span>
<span id="cb1-37">p_dts <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(df_dts, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(x, y)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-38">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blue"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-39">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>,</span>
<span id="cb1-40">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"first difference, LRY"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb1-41">  my_theme</span>
<span id="cb1-42"></span>
<span id="cb1-43"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grid.newpage</span>()</span>
<span id="cb1-44"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grid.draw</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbind</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplotGrob</span>(p_ts), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplotGrob</span>(p_dts), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"last"</span>))</span></code></pre></div>
</details>
<div class="cell-output-display">
<div id="fig-fig1" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-fig1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://amsabatini.netlify.app/posts/dickey_fuller/index_files/figure-html/fig-fig1-1.png" class="img-fluid figure-img" width="672">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-fig1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;1: Time series to be tested for stationarity. On the left, the natural logarithm of real income vs.&nbsp;time; on the right its first difference.
</figcaption>
</figure>
</div>
</div>
</div>
<p>The function <code>ur.df()</code> from the <code>urca</code> package performs the ADF test, with three types of models and related tests, named “none” (i.e., Equation&nbsp;12), “drift” (i.e., Equation&nbsp;34) and “trend” (Equation&nbsp;56). The argument <code>selectlags</code> in <code>ur.df()</code> allows to perform automatic selection of the lag structure according to a predefined criterion, as shown in the following code block.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">mdl_none_ts   <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ur.df</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> df_ts<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>y, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">selectlags =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BIC"</span>))</span>
<span id="cb2-2">mdl_drift_ts  <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ur.df</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> df_ts<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>y, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"drift"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">selectlags =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BIC"</span>))</span>
<span id="cb2-3">mdl_trend_ts  <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ur.df</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> df_ts<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>y, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"trend"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">selectlags =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BIC"</span>))</span>
<span id="cb2-4">mdl_none_dts  <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ur.df</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> df_dts<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>y, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">selectlags =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BIC"</span>))</span>
<span id="cb2-5">mdl_drift_dts <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ur.df</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> df_dts<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>y, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"drift"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">selectlags =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BIC"</span>))</span>
<span id="cb2-6">mdl_trend_dts <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ur.df</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> df_dts<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>y, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"trend"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">selectlags =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BIC"</span>))</span>
<span id="cb2-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(mdl_trend_ts)</span></code></pre></div>
</details>
</div>
<p>The summary produced when the ADF test is applied to the original time series with the type “trend” is shown in Figure&nbsp;2.</p>
<div id="fig-fig2" class="quarto-float quarto-figure quarto-figure-center anchored" data-fig-align="center">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-fig2-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://amsabatini.netlify.app/posts/dickey_fuller/summary.png" class="img-fluid quarto-figure quarto-figure-center figure-img" width="500">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-fig2-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;2: Results of fitting the “trend” regression model in the ADF test when applied to the `LRY`variable from the `denmark` dataset.
</figcaption>
</figure>
</div>
<p>The part of interest for the analysis is within the rectangle highlighted in orange. The “Value of test-statistic is -2.4216 2.1927 2.9343” for tests <img src="https://latex.codecogs.com/png.latex?(%5Ctau_3),%20(%5Cphi_2)"> and <img src="https://latex.codecogs.com/png.latex?(%5Cphi_3)"> are given and the corresponding “Critical values for test statistics” at significance levels 1%, 5% and 10% are reported below, denoted by <code>tau3</code>, <code>phi2</code> and <code>phi3</code>, respectively. For instance, for the test <img src="https://latex.codecogs.com/png.latex?(%5Ctau_3)">, given that the test statistic -2.4216 is within the three regions -4.04, -3.45, -3.15 (1%, 5%, 10%) where we fail to reject the null, we do not have evidence to reject the presence of a unit root in the regression model: we can say that there is a unit root. From the <img src="https://latex.codecogs.com/png.latex?(%5Cphi_2)">-statistic, the joint null hypothesis is not rejected, therefore there is a unit root AND drift and trend terms are not needed. Similarly, the <img src="https://latex.codecogs.com/png.latex?(%5Cphi_3)">-statistic shows that there is a unit root AND a trend term is not needed and the <img src="https://latex.codecogs.com/png.latex?(%5Ctau_3)">-statistic shows that there is a unit root. A summary of test results for the variable <code>LRY</code> is reported within the rectangle highlighted in blue in Figure&nbsp;3.</p>
<div id="fig-fig3" class="quarto-float quarto-figure quarto-figure-center anchored" data-fig-align="center">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-fig3-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://amsabatini.netlify.app/posts/dickey_fuller/summary_1.png" class="img-fluid quarto-figure quarto-figure-center figure-img" width="400">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-fig3-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;3: Results of the three type of ADF tests for the variable `LRY`from the `denmark`dataset.
</figcaption>
</figure>
</div>
<p>A close examination of Figure&nbsp;3 shows that all the tests applied to data of the variable <code>LRY</code> are consistent with failing to reject the corresponding nulls. From the <img src="https://latex.codecogs.com/png.latex?(%5Cphi_1)">-statistic, the joint null hypothesis is not rejected, therefore there is a unit root AND the drift term is not needed, and the <img src="https://latex.codecogs.com/png.latex?(%5Ctau_2)">-statistic shows that there is a unit root. Finally, the <img src="https://latex.codecogs.com/png.latex?(%5Ctau_1)">-statistic also shows that there is a unit root.</p>
<p>On the other hand, all the tests applied to the first difference of the variable <code>LRY</code> reject the corresponding nulls, as shown in the same Figure&nbsp;3 (summary within the rectangle highlighted in red): although drift and trend terms might be presumed, this variable does not therefore contain a unit root.</p>
<blockquote class="blockquote">
<p>Finally, we can conclude that the logarithm of real income contains a unit root and can be a stationary time series by taking the first difference.</p>
</blockquote>



</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent" data-entry-spacing="0">
<div id="ref-johansen1990" class="csl-entry">
Johansen, Søren, and Katarina Juselius. 1990. <span>“Maximum Likelihood Estimation and Inference on Cointegration <span></span> with Applications to the Demand for Money.”</span> <em>Oxford Bulletin of Economics and Statistics</em> 52 (2): 169–210. <a href="https://doi.org/10.1111/j.1468-0084.1990.mp52002003.x">https://doi.org/10.1111/j.1468-0084.1990.mp52002003.x</a>.
</div>
</div></section></div> ]]></description>
  <category>time series</category>
  <guid>https://amsabatini.netlify.app/posts/dickey_fuller/</guid>
  <pubDate>Sun, 12 May 2024 22:00:00 GMT</pubDate>
</item>
<item>
  <title>Gambler’s ruin</title>
  <dc:creator>Angelo Maria Sabatini</dc:creator>
  <link>https://amsabatini.netlify.app/posts/gambler/</link>
  <description><![CDATA[ 




<section id="problem" class="level2">
<h2 class="anchored" data-anchor-id="problem">Problem</h2>
<p>The gambler’s ruin problem, first mentioned by <a href="https://en.wikipedia.org/wiki/Blaise_Pascal">Blaise Pascal</a> in one of his letters to <a href="https://en.wikipedia.org/wiki/Pierre_de_Fermat">Pierre Fermat</a>, was then reformulated by <a href="https://en.wikipedia.org/wiki/Christiaan_Huygens">Christiaan Huygens</a>, leading to important advances in the mathematical theory of probability. The statement of the problem considered here is slightly different from the one described by either Pascal or Huygens <span class="citation" data-cites="noauthororeditor">(Bertsekas and Tsitsiklis 2008)</span>.</p>
<blockquote class="blockquote">
<p>Consider a gambler who starts with an initial wealth of €<img src="https://latex.codecogs.com/png.latex?k"> and then on each successive bet either wins €1 or loses €1 with probabilities <img src="https://latex.codecogs.com/png.latex?p"> and <img src="https://latex.codecogs.com/png.latex?q=1%E2%88%92p"> respectively. Different bets are assumed independent. The gambler’s objective is to reach a total wealth of €<img src="https://latex.codecogs.com/png.latex?n"> (<img src="https://latex.codecogs.com/png.latex?n%3Ek">). If the gambler succeeds, then the gambler is said to win the game. The gambler stops playing after winning or getting ruined (running out of money), whichever happens first.</p>
</blockquote>
<p>Calculate the probability that the gambler wins. In particular, which is the probability of the gambler becoming infinitely rich?</p>
</section>
<section id="solution" class="level2">
<h2 class="anchored" data-anchor-id="solution">Solution</h2>
<p>Let us denote by <img src="https://latex.codecogs.com/png.latex?A"> the event that the gambler ends up with €<img src="https://latex.codecogs.com/png.latex?n"> and by <img src="https://latex.codecogs.com/png.latex?F"> the event that the gambler wins the first bet. The probability of the event <img src="https://latex.codecogs.com/png.latex?A"> given that the gambler starts with €<img src="https://latex.codecogs.com/png.latex?k"> is written <img src="https://latex.codecogs.com/png.latex?w_k">. The total probability law allows us to write:</p>
<p><span id="eq-eq1"><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Bsplit%7D%0Aw_k&amp;=P(A%5C,%5Cvert%5C,F)P(F)+P(A%5C,%5Cvert%5C,%5Coverline%7BF%7D)P(%5Coverline%7BF%7D)%5C%5C%0A&amp;=pP(A%5C,%5Cvert%5C,F)+(1-p)P(A%5C,%5Cvert%5C,%5Coverline%7BF%7D)%0A%5Cend%7Bsplit%7D%0A%5Ctag%7B1%7D"></span></p>
<p>where <img src="https://latex.codecogs.com/png.latex?%5Coverline%7BF%7D"> is the complement of <img src="https://latex.codecogs.com/png.latex?F">, namely the event <img src="https://latex.codecogs.com/png.latex?%5Coverline%7BF%7D"> is that the gambler loses the first bet.</p>
<p>Now, the event <img src="https://latex.codecogs.com/png.latex?A%5C,%5Cvert%5C,F"> is the event <img src="https://latex.codecogs.com/png.latex?A"> given that the gambler starts with €<img src="https://latex.codecogs.com/png.latex?(k+1)">, whose probability is <img src="https://latex.codecogs.com/png.latex?w_%7Bk+1%7D"> (because of the independence from the past). The event <img src="https://latex.codecogs.com/png.latex?A%5C,%5Cvert%5C,%5Coverline%7BF%7D"> is the event <img src="https://latex.codecogs.com/png.latex?A"> given that the gambler starts with €<img src="https://latex.codecogs.com/png.latex?(k-1)">, whose probability is <img src="https://latex.codecogs.com/png.latex?w_%7Bk-1%7D"> (because of the independence from the past). Equation&nbsp;1 reads:</p>
<p><span id="eq-eq10"><img src="https://latex.codecogs.com/png.latex?%0Aw_k=p%5C,w_%7Bk+1%7D+(1-p)%5C,w_%7Bk-1%7D%0A%5Ctag%7B2%7D"></span></p>
<p>If we define <img src="https://latex.codecogs.com/png.latex?r=(1-p)/p">, we can also write:</p>
<p><span id="eq-eq2"><img src="https://latex.codecogs.com/png.latex?%0A%5Cleft%5C%7B%0A%5Cbegin%7Bsplit%7D%0A&amp;w_%7Bk+1%7D-w_k=r(w_k-w_%7Bk-1%7D),%5C;0%3Ck%3Cn%5C%5C%0A&amp;w_0=0%5C%5C%0A&amp;w_n=1%0A%5Cend%7Bsplit%7D%0A%5Cright.%0A%5Ctag%7B3%7D"></span></p>
<p>Since <img src="https://latex.codecogs.com/png.latex?w_%7Bk+1%7D=w_k+r%5Ek(w_1-w_0)=w_k+r%5Ekw_1=w_1%5Csum_%7Bi=0%7D%5Ekr%5Ei">, we can calculate <img src="https://latex.codecogs.com/png.latex?w_k"> as follows:</p>
<p><span id="eq-eq3"><img src="https://latex.codecogs.com/png.latex?%0Aw_k=%5Cleft%5C%7B%0A%5Cbegin%7Bsplit%7D%0A&amp;%5Cfrac%7B1-r%5Ek%7D%7B1-r%7Dw_1&amp;%5Cquad%5Ctext%7Bif%7D%5C;r%5Cneq1%5C%5C%0A&amp;kw_1&amp;%5Cquad%5Ctext%7Bif%7D%5C;r=1%0A%5Cend%7Bsplit%7D%0A%5Cright.%0A%5Ctag%7B4%7D"></span></p>
<p>We also know that <img src="https://latex.codecogs.com/png.latex?w_n=1">. Therefore, we can solve Equation&nbsp;4 for <img src="https://latex.codecogs.com/png.latex?w_1">:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0Aw_1=%5Cleft%5C%7B%0A%5Cbegin%7Bsplit%7D%0A&amp;%5Cfrac%7B1-r%7D%7B1-r%5En%7D&amp;%5Cquad%5Ctext%7Bif%7D%5C;r%5Cneq1%5C%5C%0A&amp;%5Cfrac%7B1%7D%7Bn%7D&amp;%5Cquad%5Ctext%7Bif%7D%5C;r=1%0A%5Cend%7Bsplit%7D%0A%5Cright.%0A"></p>
<p>Plugging this expression of <img src="https://latex.codecogs.com/png.latex?w_1"> into Equation&nbsp;4, we obtain:</p>
<p><span id="eq-eq4"><img src="https://latex.codecogs.com/png.latex?%0A%5Cboxed%7Bw_k=%5Cleft%5C%7B%0A%5Cbegin%7Bsplit%7D%0A&amp;%5Cfrac%7B1-r%5Ek%7D%7B1-r%5En%7D&amp;%5Cquad%5Ctext%7Bif%7D%5C;r%5Cneq1%5C%5C%0A&amp;%5Cfrac%7Bk%7D%7Bn%7D&amp;%5Cquad%5Ctext%7Bif%7D%5C;r=1%0A%5Cend%7Bsplit%7D%0A%5Cright.%7D%0A%5Ctag%7B5%7D"></span></p>
<p>The probability that the gambler becomes infinitely rich (event <img src="https://latex.codecogs.com/png.latex?R">) is written:</p>
<p><span id="eq-eq5"><img src="https://latex.codecogs.com/png.latex?%0A%5Cleft%5C%7B%0A%5Cbegin%7Bsplit%7D%0A%5Ctext%7BPr%7D(R)&amp;=%5Clim_%7Bn%5Crightarrow%5Cinfty%7Dw_k=1-%5Cleft(%5Cfrac%7B1-p%7D%7Bp%7D%5Cright)%5Ek%3E0,&amp;%5Cquad%20p%3E1/2%5C;(r%3C1)%5C%5C%0A%5Ctext%7BPr%7D(R)&amp;=%5Clim_%7Bn%5Crightarrow%5Cinfty%7Dw_k=0,&amp;%5Cquad%20p%5Cleq1/2%5C;(r%5Cgeq1)%5C%5C%0A%5Cend%7Bsplit%7D%0A%5Cright.%0A%5Ctag%7B6%7D"></span></p>
<p>To interpret the meaning of Equation&nbsp;6, suppose that the gambler starting with an initial wealth of €<img src="https://latex.codecogs.com/png.latex?k"> wishes to continue gambling, with the intention of earning as much money as possible. So there is no winning value €<img src="https://latex.codecogs.com/png.latex?n">: the gambler will only stop if ruined. If <img src="https://latex.codecogs.com/png.latex?p%3E1/2"> (each gamble is in favor of the gambler), then there is a positive probability that the gambler will never get ruined but instead will become infinitely rich. Conversely, if <img src="https://latex.codecogs.com/png.latex?p%5Cleq0.5"> (each gamble is not in favor of the gambler), then the gambler will get ruined with probability one.</p>
</section>
<section id="markov-chain-model" class="level2">
<h2 class="anchored" data-anchor-id="markov-chain-model">Markov chain model</h2>
<p>The discrete-state discrete-time Markov chain show in Figure&nbsp;1 can be proposed to model the gambler process <span class="citation" data-cites="noauthororeditor">(Bertsekas and Tsitsiklis 2008)</span>. The <img src="https://latex.codecogs.com/png.latex?n+1"> states, numbered from 0 to <img src="https://latex.codecogs.com/png.latex?n">, represent the gambler’s wealth at the start of each bet. The first state 0 corresponds to ruin (getting out of money), the last state <img src="https://latex.codecogs.com/png.latex?n"> corresponds to win. Given the rules of the game, the states 0 and <img src="https://latex.codecogs.com/png.latex?n"> are absorbing, in the sense that it is not possible to escape from each of them anymore, once they are entered. All the other states are transient.</p>
<div id="fig-fig1" class="quarto-float quarto-figure quarto-figure-center anchored" data-fig-align="center">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-fig1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://amsabatini.netlify.app/posts/gambler/markov_chain.png" class="img-fluid quarto-figure quarto-figure-center figure-img">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-fig1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;1: Transition probability graph for the gambler’s ruin problem.
</figcaption>
</figure>
</div>
<p>The problem is then to find the probabilities of absorption at each one of the two absorbing states. These absorption probabilities depend on the initial state <img src="https://latex.codecogs.com/png.latex?k%5C;(0%3Ck%3Cn)">. It is worthy noting that the memoryless character of the process implies that, if the gambler happens to revisit the initial state <img src="https://latex.codecogs.com/png.latex?k"> after a while, the absorption probabilities are the same they were initially.</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Transition probability matrix
</div>
</div>
<div class="callout-body-container callout-body">
<p>The state of a discrete-state discrete-time Markov chain is denoted by <img src="https://latex.codecogs.com/png.latex?X_t">, that can change at certain discrete time instants <img src="https://latex.codecogs.com/png.latex?n">. The state space of the chain is composed of a finite set <img src="https://latex.codecogs.com/png.latex?%5Cmathscr%7BS%7D=%5C%7B1,%5Ccdots,m%5C%7D">. The Markov chain is described in terms of its transition probability <img src="https://latex.codecogs.com/png.latex?p_%7Bij%7D">:</p>
<p><span id="eq-eq6"><img src="https://latex.codecogs.com/png.latex?%0Ap_%7Bij%7D=P(X_%7Bt+1%7D=j%5C,%5Cvert%5C,X_t=i),%5Cquad%20i,j%5Cin%5Cmathscr%7BS%7D%0A%5Ctag%7B7%7D"></span></p>
<p>The key assumption underlying Markov chains is that the <strong>Markov property</strong> holds:</p>
<p><span id="eq-eq7"><img src="https://latex.codecogs.com/png.latex?%0AP(X_%7Bt+1%7D=j%5C,%5Cvert%5C,X_t=i,X_%7Bt-1%7D=i_%7Bt-1%7D,%5Ccdots,X_0=i_0)=P(X_%7Bt+1%7D=j%20%5C,%5Cvert%5C,X_t=i)=p_%7Bij%7D%0A%5Ctag%7B8%7D"></span></p>
<p>for all times <img src="https://latex.codecogs.com/png.latex?t">, all states <img src="https://latex.codecogs.com/png.latex?i,j%5Cin%5Cmathscr%7BS%7D"> and all possible sequences <img src="https://latex.codecogs.com/png.latex?i_0,i_1,%5Ccdots,i_%7Bt-1%7D"> of earlier states. Thus, the probability law of the next state <img src="https://latex.codecogs.com/png.latex?X_%7Bt+1%7D"> depends on the past only through the value of the present state <img src="https://latex.codecogs.com/png.latex?X_t">.</p>
<p>All of the elements of a Markov chain model can be encoded in a <strong>transition probability matrix</strong>, which is simply a two-dimensional array whose elements at the <img src="https://latex.codecogs.com/png.latex?i">th row and <img src="https://latex.codecogs.com/png.latex?j">th column is <img src="https://latex.codecogs.com/png.latex?P_%7Bij%7D">:</p>
<p><span id="eq-eq8"><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Bbmatrix%7D%0Ap_%7B11%7D&amp;p_%7B12%7D&amp;%5Ccdots&amp;p_%7B1m%7D%5C%5C%0Ap_%7B21%7D&amp;p_%7B22%7D&amp;%5Ccdots&amp;p_%7B2m%7D%5C%5C%0A%5Cvdots&amp;%5Cvdots&amp;%5Cvdots&amp;%5Cvdots%5C%5C%0Ap_%7Bm1%7D&amp;p_%7Bm2%7D&amp;%5Ccdots&amp;p_%7Bmm%7D%0A%5Cend%7Bbmatrix%7D%0A%5Ctag%7B9%7D"></span></p>
<p>Consider a Markov chain in which each state is either transient or absorbing. We fix a particular absorbing state <img src="https://latex.codecogs.com/png.latex?s">. It is possible to show that the probabilities <img src="https://latex.codecogs.com/png.latex?w_k"> of eventually reaching state <img src="https://latex.codecogs.com/png.latex?s">, starting from <img src="https://latex.codecogs.com/png.latex?k">, are the unique solution of the equations <img src="https://latex.codecogs.com/png.latex?w_s=1,%20w_i=0">, for all absorbing <img src="https://latex.codecogs.com/png.latex?i%5Cneq%20s">, and for all transient <img src="https://latex.codecogs.com/png.latex?i">:</p>
<p><span id="eq-eq9"><img src="https://latex.codecogs.com/png.latex?%0Aw_i=%5Csum_%7Bj=1%7D%5Emp_%7Bij%7Dw_j%0A%5Ctag%7B10%7D"></span></p>
</div>
</div>
<div id="exm-exm1" class="theorem example">
<p><span class="theorem-title"><strong>Example 1 (Gambler’s discrete-time Markov chain)</strong></span> For <img src="https://latex.codecogs.com/png.latex?n=4,p,q=1-p"> the transition probability matrix of the gambler’s discrete-time Markov chain is given by:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Bbmatrix%7D%0A1&amp;0&amp;0&amp;0&amp;0%5C%5C%0Aq&amp;0&amp;p&amp;0&amp;0%5C%5C%0A0&amp;q&amp;0&amp;p&amp;0%5C%5C%0A0&amp;0&amp;q&amp;0&amp;p%5C%5C%0A0&amp;0&amp;0&amp;0&amp;1%0A%5Cend%7Bbmatrix%7D%0A"></p>
<p>In the case of the gambler’s ruin problem, Equation&nbsp;10 can be reformulated as follows:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0Aw_k=(1-p)%5C,w_%7Bk-1%7D+p%5C,w_%7Bk+1%7D%0A"></p>
<p>with <img src="https://latex.codecogs.com/png.latex?w_0=0,w_n=1">, leading to Equation&nbsp;2.</p>
</div>
</section>
<section id="simulation" class="level2">
<h2 class="anchored" data-anchor-id="simulation">Simulation</h2>
<p>The following code written in R simulates the gambler process (adapted from <span class="citation" data-cites="dobrow2016">(Dobrow 2016)</span>).</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2001</span>)</span>
<span id="cb1-2">gambler <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(k, n, p) {</span>
<span id="cb1-3">  stake <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> k</span>
<span id="cb1-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> (stake <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> stake <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> n) {</span>
<span id="cb1-5">        bet <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prob =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>p, p))</span>
<span id="cb1-6">        stake <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> stake <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> bet</span>
<span id="cb1-7">    }</span>
<span id="cb1-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (stake <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> n) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb1-9">}   </span>
<span id="cb1-10">k <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>         <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># initial wealth</span></span>
<span id="cb1-11">n <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">120</span>        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># final wealth</span></span>
<span id="cb1-12">p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># probability of win at each bet</span></span>
<span id="cb1-13">ntrials <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># number of independent trials</span></span>
<span id="cb1-14"></span>
<span id="cb1-15">sim <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">replicate</span>(ntrials, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gambler</span>(k, n, p))</span>
<span id="cb1-16">p_ruin <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(sim)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>ntrials </span></code></pre></div>
</details>
</div>
<p>The probability of ruin estimated over 1000 iterations of the gambler process is 0.888, in close agreement with the value 0.875 computed from Equation&nbsp;5.</p>
<p>It is noted that, at each time step, the gambler appears to move randomly, either to the left or to the right by a fixed unit distance with probability <img src="https://latex.codecogs.com/png.latex?p"> and <img src="https://latex.codecogs.com/png.latex?1-p">, respectively. The gambler undergoes a simple random walk in one dimension, whose state space is the set of the integers <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%7BZ%7D">. The limitations to values of <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%7BZ%7D"> between 0 (ruin) and <img src="https://latex.codecogs.com/png.latex?n"> (win) are the consequence of the gambling rules: these rules settle two absorbing barriers to the motion of the random walker. Nine exemplary sample paths of the random walk are shown in Figure&nbsp;2, for the case that <img src="https://latex.codecogs.com/png.latex?k=30,n=120,p=0.5">.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggpubr)</span>
<span id="cb2-3"></span>
<span id="cb2-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2001</span>)</span>
<span id="cb2-5">k <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># initial wealth</span></span>
<span id="cb2-6">n <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">120</span>      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># final wealth</span></span>
<span id="cb2-7">p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># probability of win at each bet</span></span>
<span id="cb2-8">ntrials <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># number of independent trials</span></span>
<span id="cb2-9">nstep <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># number of steps</span></span>
<span id="cb2-10">traj <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">matrix</span>(<span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrow =</span> nstep, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol =</span> ntrials)</span>
<span id="cb2-11"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (i <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>ntrials) {</span>
<span id="cb2-12">  traj[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, i] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> k</span>
<span id="cb2-13">  jmax <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> nstep</span>
<span id="cb2-14">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (j <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>nstep) {</span>
<span id="cb2-15">          bet <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prob =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>p, p))</span>
<span id="cb2-16">          traj[j, i] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> traj[j<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span>, i] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> bet</span>
<span id="cb2-17">          <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (traj[j, i] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> traj[j, i] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> n) {</span>
<span id="cb2-18">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">break</span></span>
<span id="cb2-19">          }</span>
<span id="cb2-20">  }</span>
<span id="cb2-21">}   </span>
<span id="cb2-22">t <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, nstep<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), ntrials)</span>
<span id="cb2-23">path <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"4"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"6"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"7"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"8"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"9"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">each =</span> nstep)</span>
<span id="cb2-24">traj <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(traj)</span>
<span id="cb2-25">df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">t =</span> t, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">path =</span> path, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> traj)</span>
<span id="cb2-26"></span>
<span id="cb2-27">my_theme <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(</span>
<span id="cb2-28">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.title.x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>),</span>
<span id="cb2-29">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.text.x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>),</span>
<span id="cb2-30">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.title.y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>),</span>
<span id="cb2-31">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.text.y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>),</span>
<span id="cb2-32">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.title =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>),</span>
<span id="cb2-33">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.text =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>),</span>
<span id="cb2-34">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">panel.border =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb2-35">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">panel.grid.major =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb2-36">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">panel.grid.minor =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb2-37">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">panel.background =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb2-38">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">panel.spacing =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lines"</span>),</span>
<span id="cb2-39">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.line =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_line</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>))</span>
<span id="cb2-40"></span>
<span id="cb2-41"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(df, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> t, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> data, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">path =</span> path)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb2-42">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-43">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bets"</span>,</span>
<span id="cb2-44">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gambler's wealth"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-45">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_hline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yintercept =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dashed"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb2-46">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_hline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yintercept =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">120</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dashed"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-47">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">breaks =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">120</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-48">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>path, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labeller =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"label_both"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb2-49">  my_theme</span></code></pre></div>
</details>
<div class="cell-output-display">
<div id="fig-fig2" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-fig2-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://amsabatini.netlify.app/posts/gambler/index_files/figure-html/fig-fig2-1.png" class="img-fluid figure-img" width="672">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-fig2-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;2: Gambler’s random walk: nine sample paths. The outcome of up to a maximum of 1000 bets is considered here.
</figcaption>
</figure>
</div>
</div>
</div>



</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent" data-entry-spacing="0">
<div id="ref-noauthororeditor" class="csl-entry">
Bertsekas, Dimitri P., and John N. Tsitsiklis. 2008. <span>“Introduction to Probability.”</span> <a href="https://ocw.mit.edu/resources/res-6-012-introduction-to-probability-spring-2018/part-i-the-fundamentals/MITRES_6_012S18_Textbook.pdf">https://ocw.mit.edu/resources/res-6-012-introduction-to-probability-spring-2018/part-i-the-fundamentals/MITRES_6_012S18_Textbook.pdf</a>.
</div>
<div id="ref-dobrow2016" class="csl-entry">
Dobrow, Robert P. 2016. <span>“Introduction to Stochastic Processes with r,”</span> March. <a href="https://doi.org/10.1002/9781118740712">https://doi.org/10.1002/9781118740712</a>.
</div>
</div></section></div> ]]></description>
  <category>probability</category>
  <guid>https://amsabatini.netlify.app/posts/gambler/</guid>
  <pubDate>Sat, 04 May 2024 22:00:00 GMT</pubDate>
  <media:content url="https://amsabatini.netlify.app/posts/gambler/ruin.png" medium="image" type="image/png" height="117" width="144"/>
</item>
<item>
  <title>Multivariate probability regions</title>
  <dc:creator>Angelo Maria Sabatini</dc:creator>
  <link>https://amsabatini.netlify.app/posts/multivariate_probability_regions/</link>
  <description><![CDATA[ 




<section id="prediction-hyperellipsoid" class="level2">
<h2 class="anchored" data-anchor-id="prediction-hyperellipsoid">Prediction hyperellipsoid</h2>
<p>Consider the case of a multivariate random variable <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BX%7D%5Cin%5Cmathbb%7BR%7D%5Ed">, whose distribution is normal with mean value <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7B%5Cmu%7D"> and covariance matrix <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BC%7D">:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cmathbf%7BC%7D=%5Cbegin%7Bbmatrix%7D%5Csigma_1%5E2&amp;%5Ccdots&amp;%5Csigma_%7B1d%7D%5C%5C%5Cvdots&amp;%5Cddots&amp;%5Cvdots%5C%5C%5Csigma_%7Bd1%7D&amp;%5Ccdots&amp;%5Csigma%5E2_d%5Cend%7Bbmatrix%7D%0A"></p>
<p>from which we draw a sample of <img src="https://latex.codecogs.com/png.latex?n"> data points:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cmathbf%7Bx%7D_i=%5Cbegin%7Bbmatrix%7Dx_%7Bi1%7D%5C%5C%5Cvdots%5C%5Cx_%7Bid%7D%5Cend%7Bbmatrix%7D%0A"></p>
<p>We suppose that either the mean value or the covariance matrix are unknown; they can be estimated using the <strong>sample mean</strong>, denoted by <img src="https://latex.codecogs.com/png.latex?%5Cbar%7B%5Cmathbf%7Bx%7D%7D">:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbar%7B%5Cmathbf%7Bx%7D%7D=%5Cbegin%7Bbmatrix%7D%5Cbar%7Bx%7D_1%5C%5C%5Cvdots%5C%5C%5Cbar%7Bx%7D_d%5Cend%7Bbmatrix%7D=%5Cfrac%7B1%7D%7Bn%7D%5Csum_%7Bi=1%7D%5En%5Cbegin%7Bbmatrix%7Dx_%7Bi1%7D%5C%5C%5Cvdots%5C%5Cx_%7Bid%7D%5Cend%7Bbmatrix%7D=%5Cfrac%7B1%7D%7Bn%7D%5Csum_%7Bi=1%7D%5En%5Cmathbf%7Bx%7D_i%0A"></p>
<p>and the <strong>sample covariance matrix</strong>, denoted by <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7B%5CSigma%7D">:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cmathbf%7B%5CSigma%7D=%5C%7B%5C,%5Csigma_%7Bjk%7D,j,k=1,%5Ccdots%20d%5C,%5C%7D=%5Cfrac%7B1%7D%7Bn-1%7D%5Csum_%7Bi=1%7D%5En(%5Cmathbf%7Bx%7D_i-%5Cbar%7B%5Cmathbf%7Bx%7D%7D)(%5Cmathbf%7Bx%7D_i-%5Cbar%7B%5Cmathbf%7Bx%7D%7D)%5ET%0A"></p>
<p>whose <img src="https://latex.codecogs.com/png.latex?jk">th element is written:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5CSigma_%7Bjk%7D=%5Cfrac%7B1%7D%7Bn-1%7D%5Csum_%7Bi=1%7D%5En(x_%7Bij%7D-%5Cbar%7Bx%7D_j)(x_%7Bik%7D-%5Cbar%7Bx%7D_k)%0A"></p>
<p>The <img src="https://latex.codecogs.com/png.latex?95%5C%25"> prediction interval is a <img src="https://latex.codecogs.com/png.latex?d">-dimensional <strong>prediction hyperellipsoid</strong>, which, formally, is written as follows:</p>
<p><span id="eq-eq1"><img src="https://latex.codecogs.com/png.latex?%0A%5Cboxed%7B(%5Cmathbf%7Bx%7D_%7B%5Ctext%7Bnew%7D%7D-%5Cbar%7B%5Cmathbf%7Bx%7D%7D)%5ET%5Cmathbf%7B%5CSigma%7D%5E%7B-1%7D(%5Cmathbf%7Bx%7D_%7B%5Ctext%7Bnew%7D%7D-%5Cbar%7B%5Cmathbf%7Bx%7D%7D)%5Cleq%20F_%7B0.95,d,n-d%7D%5Cfrac%7B(n-1)(n+1)%7D%7Bn(n-d)%7Dd%7D%0A%5Ctag%7B1%7D"></span></p>
<p>where <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7Bx%7D_%7B%5Ctext%7Bnew%7D%7D"> is the new observation for which the prediction interval is desired. <img src="https://latex.codecogs.com/png.latex?F_%7B0.95,n,n-d%7D"> is the quantile with probability 0.95 of the Fisher’s <img src="https://latex.codecogs.com/png.latex?F">-distribution with <img src="https://latex.codecogs.com/png.latex?d"> and <img src="https://latex.codecogs.com/png.latex?(n-d)"> degrees of freedom.</p>
<p>Equation&nbsp;1 is the formula for predicting the next single observation where we only have estimates of the mean value and the covariance matrix from the sample.</p>
<p>Another interesting formula can be elaborated as for the computation of the volume of the prediction hyperellipsoid. Recall that the prediction hyperellipsoid is the transformation of the hypersphere of radius</p>
<p><span id="eq-eq7"><img src="https://latex.codecogs.com/png.latex?%0Ar=%5Csqrt%7BF_%7B0.95,d,n-d%7D%5Cfrac%7B(n-1)(n+1)%7D%7Bn(n-d)%7Dd%7D%0A%5Ctag%7B2%7D"></span></p>
<p>by the linear transform of matrix <img src="https://latex.codecogs.com/png.latex?%5CSigma%5E%7B1/2%7D">. Let <img src="https://latex.codecogs.com/png.latex?V"> the volume of the hypersphere of radius <img src="https://latex.codecogs.com/png.latex?r"> in an <img src="https://latex.codecogs.com/png.latex?d">-dimensional space. The volume of the hyperellipsoid can be obtained from <img src="https://latex.codecogs.com/png.latex?V"> by multiplying with the determinant of the linear transform:</p>
<p><span id="eq-eq6"><img src="https://latex.codecogs.com/png.latex?%0AV_d=%5Cunderbrace%7B%5Cfrac%7B2%7D%7Bd%7D%5Cfrac%7B%5Cpi%5E%7Bd/2%7D%7D%7B%5CGamma(d/2)%7Dr%5Ed%7D_%7BV%7D%5Csqrt%7B%5Cdet(%5CSigma)%7D%0A%5Ctag%7B3%7D"></span></p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Univariate and bivariate random variables
</div>
</div>
<div class="callout-body-container callout-body">
<p><strong>Univariate random variable</strong></p>
<p>When <img src="https://latex.codecogs.com/png.latex?d=1">, Equation&nbsp;1 reads:</p>
<p><span id="eq-eq2"><img src="https://latex.codecogs.com/png.latex?%0A%5Cfrac%7B%5Cvert%5C,x_%7B%5Ctext%7Bnew%7D%7D-%5Cbar%7Bx%7D%5C,%5Cvert%7D%7Bs%7D%5Cleq%5Csqrt%7BF_%7B0.95,1,n-1%7D%5E%7B%5Cphantom%7B'%7D%7D%7D%5Csqrt%7B1+%5Cfrac%7B1%7D%7Bn%7D%5E%7B%5Cphantom%7B'%7D%7D%7D%0A%5Ctag%7B4%7D"></span></p>
<p>where <img src="https://latex.codecogs.com/png.latex?s"> is the sample standard deviation:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0As=%5Csqrt%7B%5Cfrac%7B1%7D%7Bn-1%7D%5Csum_%7Bi=1%7D%5En(x_i-%5Cbar%7Bx%7D)%5E2%7D%0A"></p>
<p>It is noted that</p>
<p><span id="eq-eq8"><img src="https://latex.codecogs.com/png.latex?%0AF_%7B0.95,1,n-1%7D=t_%7B0.975,n-1%7D%5E2%0A%5Ctag%7B5%7D"></span></p>
<p>where <img src="https://latex.codecogs.com/png.latex?t_%7B0.975,n-1%7D"> is the quantile with probability 0.975 of the <img src="https://latex.codecogs.com/png.latex?t">-Student distribution with <img src="https://latex.codecogs.com/png.latex?n-1"> degrees of freedom. Therefore Equation&nbsp;4 can be written:</p>
<p><span id="eq-eq3"><img src="https://latex.codecogs.com/png.latex?%0A%5Cvert%5C,x_%7B%5Ctext%7Bnew%7D%7D-%5Cbar%7Bx%7D%5C,%5Cvert%5Cleq%20t_%7B0.975,n-1%7Ds%5Csqrt%7B1+%5Cfrac%7B1%7D%7Bn%7D%5E%7B%5Cphantom%7B'%7D%7D%7D%0A%5Ctag%7B6%7D"></span></p>
<p>For large <img src="https://latex.codecogs.com/png.latex?n">, when the central limit theorem can be applied, Equation&nbsp;6 can be simplified:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cboxed%7B%5Cvert%5C,x_%7B%5Ctext%7Bnew%7D%7D-%5Cbar%7Bx%7D%5C,%5Cvert%5Cleq%20z_%7B0.975%7Ds%7D%0A"></p>
<p>where <img src="https://latex.codecogs.com/png.latex?z_%7B0.975%7D=1.96"> is the quantile with probability 0.975 of the standard normal distribution.</p>
<p><strong>Bivariate random variable</strong></p>
<p>When <img src="https://latex.codecogs.com/png.latex?d=2">, Equation&nbsp;1 reads:</p>
<p><span id="eq-eq4"><img src="https://latex.codecogs.com/png.latex?%0A(%5Cmathbf%7Bx%7D_%7B%5Ctext%7Bnew%7D%7D-%5Cbar%7B%5Cmathbf%7Bx%7D%7D)%5ET%5Cmathbf%7B%5CSigma%7D%5E%7B-1%7D(%5Cmathbf%7Bx%7D_%7B%5Ctext%7Bnew%7D%7D-%5Cbar%7B%5Cmathbf%7Bx%7D%7D)%5Cleq2F_%7B0.95,2,n-2%7D%5Cfrac%7B(n-1)(n+1)%7D%7Bn(n-2)%7D%0A%5Ctag%7B7%7D"></span></p>
<p>Since <img src="https://latex.codecogs.com/png.latex?2F_%7B0.95,2,%5Cinfty%7D=%5Cchi%5E2(2)">, for large <img src="https://latex.codecogs.com/png.latex?n"> we can simplity Equation&nbsp;7 as follows:</p>
<p><span id="eq-eq5"><img src="https://latex.codecogs.com/png.latex?%0A%5Cboxed%7B(%5Cmathbf%7Bx%7D_%7B%5Ctext%7Bnew%7D%7D-%5Cbar%7B%5Cmathbf%7Bx%7D%7D)%5ET%5Cmathbf%7B%5CSigma%7D%5E%7B-1%7D(%5Cmathbf%7Bx%7D_%7B%5Ctext%7Bnew%7D%7D-%5Cbar%7B%5Cmathbf%7Bx%7D%7D)%5Cleq%5Cchi%5E2(0.95,2)%7D%0A%5Ctag%7B8%7D"></span></p>
</div>
</div>
</section>
<section id="concentration-ellipse" class="level2">
<h2 class="anchored" data-anchor-id="concentration-ellipse">Concentration ellipse</h2>
<p>Equation&nbsp;8 is the equation of the <img src="https://latex.codecogs.com/png.latex?95%5C%25"> prediction ellipse for a bivariate normal distribution, whose sample mean value and sample covariance matrix are calculated from a large-size dataset. The ellipse is also called the <strong>concentration ellipse</strong>. Using Equation&nbsp;5 the area <img src="https://latex.codecogs.com/png.latex?A=V_2"> of the concentration ellipse can be computed from Equation&nbsp;23 when <img src="https://latex.codecogs.com/png.latex?n"> is large as follows:</p>
<p><span id="eq-eq9"><img src="https://latex.codecogs.com/png.latex?%0A%5Cboxed%7BA=%5Cpi%5Csqrt%7B%5Cdet(%5CSigma)%7D%5C,%5Cchi%5E2_%7B0.95,2%7D%7D%0A%5Ctag%7B9%7D"></span></p>
<div id="exm-exm1" class="theorem example">
<p><span class="theorem-title"><strong>Example 1 (Simulation)</strong></span> The dataset is composed of 1000 points simulated from a bivariate normal distribution with mean value and covariance matrix:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cmathbf%7B%5Cmu%7D=%5Cbegin%7Bbmatrix%7D1%5C%5C2%5Cend%7Bbmatrix%7D%5Cquad%5Cmathbf%7BC%7D=%5Cbegin%7Bbmatrix%7D5&amp;2%5C%5C2&amp;4%5Cend%7Bbmatrix%7D%0A"></p>
<p>I used the function <a href="https://rdrr.io/cran/splus2R/man/rmvnorm.html"><code>rmvnorm()</code></a> from the package <code>rvnorm</code> for the simulation of the dataset, and the function <a href="https://ggplot2.tidyverse.org/reference/stat_ellipse.html"><code>stat_ellipse()</code></a> of <code>ggplot2</code> for drawing the ellipse, Figure&nbsp;1. Using <code>stat_ellipse()</code> dispensed me from computing eigenvalues and eigenvectors of the sample covariance matrix, which are needed to evaluate the orientation and the eccentricity of the ellipse in the Cartesian plane. This computation can be based on a simple principal component analysis (PCA).</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(mvtnorm)</span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1492</span>)</span>
<span id="cb1-5">sigma <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">matrix</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb1-6">n <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span></span>
<span id="cb1-7">x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rmvnorm</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> n, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mean =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sigma =</span> sigma)</span>
<span id="cb1-8"></span>
<span id="cb1-9">dist <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">qchisq</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.95</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># to define the 95% probability contour</span></span>
<span id="cb1-10">m <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">matrix</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) </span>
<span id="cb1-11"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (i <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) m[i] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(x[, i])    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># sample mean value</span></span>
<span id="cb1-12">C <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cov</span>(x)                            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># sample covariance matrix</span></span>
<span id="cb1-13">S <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">solve</span>(C)                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># inverse of C</span></span>
<span id="cb1-14">Q <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">numeric</span>(n)                        </span>
<span id="cb1-15"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (i <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>n) Q[i] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t</span>(x[i, ] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> m) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%*%</span> S <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%*%</span> (x[i, ] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> m) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># computation of the quadratic form</span></span>
<span id="cb1-16"></span>
<span id="cb1-17">df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(x, Q)</span>
<span id="cb1-18">df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">inside =</span> Q <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> dist)</span>
<span id="cb1-20">aest <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>inside)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>n), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># estimated coverage</span></span>
<span id="cb1-21">area <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> pi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>dist<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">det</span>(C)) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># area of the concentration ellipse </span></span>
<span id="cb1-22"></span>
<span id="cb1-23">my_theme <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(</span>
<span id="cb1-24">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.title.x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>),</span>
<span id="cb1-25">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.text.x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>),</span>
<span id="cb1-26">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.title.y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>),</span>
<span id="cb1-27">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.text.y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>),</span>
<span id="cb1-28">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.title =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>),</span>
<span id="cb1-29">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.text =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>),</span>
<span id="cb1-30">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">panel.border =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb1-31">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">panel.grid.major =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb1-32">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">panel.grid.minor =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb1-33">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">panel.background =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb1-34">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.line =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_line</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>),</span>
<span id="cb1-35">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">aspect.ratio =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb1-36">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>)</span>
<span id="cb1-37"></span>
<span id="cb1-38"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(df, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> X1, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> X2, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> inside)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-39">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_colour_manual</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blue"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-40">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-41">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stat_ellipse</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">geom =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"polygon"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"norm"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">level =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.95</span>, </span>
<span id="cb1-42">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blue"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blue"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-43">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">limits =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb1-44">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">limits =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb1-45">  my_theme</span></code></pre></div>
</details>
<div class="cell-output-display">
<div id="fig-fig1" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-fig1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://amsabatini.netlify.app/posts/multivariate_probability_regions/index_files/figure-html/fig-fig1-1.png" class="img-fluid figure-img" width="672">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-fig1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;1: The curve corresponding to the value <img src="https://latex.codecogs.com/png.latex?%5Cchi%5E2(0.95,2)=5.99"> contains <img src="https://latex.codecogs.com/png.latex?95%5C%25"> of the variable pairs; the points falling outside the concentration ellipse are plotted in red.
</figcaption>
</figure>
</div>
</div>
</div>
<p>The coverage of the concentration ellipse is 94.9%. Moreover, the code calculates the area enclosed by the concentration ellipse, Equation&nbsp;9: 74 (arbitrary units).</p>
</div>
</section>
<section id="an-application-to-posturography" class="level2">
<h2 class="anchored" data-anchor-id="an-application-to-posturography">An application to posturography</h2>
<p>Postural control is often quantified by recording the trajectory of the center of pressure (CoP) during human quiet standing. This quantification has many important applications, including the assessment of balance disorders and the early detection of balance degradation to prevent falls in geriatric populations. The CoP trajectory in time, reported as the anteroposterior (AP) component (forward/backward) and the mediolateral (ML) component (left/right) paired together to form the so-called stabilogram, is typically acquired by means of a force platform, on top of which tested subjects are asked to stand in their upright posture for a while, typically 60 s, as still as possible. Manipulation of testing conditions, e.g., presence or absence of vision, different kind of surfaces for the feet to stay on are possible, so as to gain further insights about the postural control system performance.</p>
<p>Among the many CoP features that have been introduced in the literature, few of them have to do with the concentration ellipse of the CoP. E.g., the principal sway direction, to represent the relative contribution of the ML and AP components to the CoP fluctuations, in terms of the angle between the AP axis and the direction of the main eigenvector produced by the PCA. Another feature of interest, the one considered in this post, is the area of the concentration ellipse, also called the <strong>sway area</strong> <span class="citation" data-cites="schubert2014">(Schubert and Kirchner 2014)</span>. For instance, an increase in this feature value among elderly people has been associated with a higher risk of fall. I want to show here an example of calculation of the sway area using the code above, by taking an exemplary stabilogram from a recently published dataset <span class="citation" data-cites="dossantos2017">(Santos et al. 2017)</span>, Figure&nbsp;2.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggpubr)</span>
<span id="cb2-2"></span>
<span id="cb2-3">data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read.table</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">file =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'PDS01OR1grf.txt'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">header =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sep =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb2-4">t <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Time                  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 6000 samples acquired at a rate of 100 Hz</span></span>
<span id="cb2-5">CoP_AP <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>COPNET_X<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e2</span>     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># anteroposterior component (AP), cm</span></span>
<span id="cb2-6">CoP_ML <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>COPNET_Z<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e2</span>     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># mediolateral component (ML), cm</span></span>
<span id="cb2-7">CoP_AP <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> CoP_AP <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(CoP_AP) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># detrending</span></span>
<span id="cb2-8">CoP_ML <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> CoP_ML <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(CoP_ML) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># detrending</span></span>
<span id="cb2-9"></span>
<span id="cb2-10">df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time =</span> t, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x_ap =</span> CoP_AP, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x_ml =</span> CoP_ML)</span>
<span id="cb2-11"></span>
<span id="cb2-12">p_ap <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(df, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> time, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> x_ap)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blue"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"time, s"</span>,</span>
<span id="cb2-15">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AP direction, cm"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb2-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">limits =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-17">  my_theme</span>
<span id="cb2-18"></span>
<span id="cb2-19">p_ml <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(df, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> time, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> x_ml)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-20">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-21">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"time, s"</span>,</span>
<span id="cb2-22">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ML direction, cm"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb2-23">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">limits =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-24">  my_theme</span>
<span id="cb2-25"></span>
<span id="cb2-26"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggarrange</span>(p_ap, p_ml)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div id="fig-fig2" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-fig2-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://amsabatini.netlify.app/posts/multivariate_probability_regions/index_files/figure-html/fig-fig2-1.png" class="img-fluid figure-img" width="672">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-fig2-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;2: Anteroposterior and mediolateral components of the CoP for the subject with ID 1 from the Duarte’s dataset, tested Open-Eyes on a Rigid surface (first trial out of three).
</figcaption>
</figure>
</div>
</div>
</div>
<p>The stabilogram with the concentration ellipse superimposed on it are shown in Figure&nbsp;3.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cbind</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>x_ml, df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>x_ap) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># detrending already done</span></span>
<span id="cb3-2">d <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">qchisq</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.95</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)         <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># to define the 95% probability contour</span></span>
<span id="cb3-3">n <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(x)</span>
<span id="cb3-4">C <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cov</span>(x)                  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># sample covariance matrix</span></span>
<span id="cb3-5">S <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">solve</span>(C)                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># inverse of C</span></span>
<span id="cb3-6">Q <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">numeric</span>(n)                        </span>
<span id="cb3-7"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (i <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>n) Q[i] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t</span>(x[i, ]) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%*%</span> S <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%*%</span> x[i, ] <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># computation of the quadratic form</span></span>
<span id="cb3-8"></span>
<span id="cb3-9">df_Q <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(x, Q)</span>
<span id="cb3-10">df_Q <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df_Q <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">inside =</span> Q <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> dist)</span>
<span id="cb3-12">aest <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>df_Q<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>inside)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>n), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># estimated coverage</span></span>
<span id="cb3-13">area <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> pi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>dist<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">det</span>(C)) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># area of the concentration ellipse </span></span>
<span id="cb3-14"></span>
<span id="cb3-15"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(df_Q, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> X1, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> X2, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> inside)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_colour_manual</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blue"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stat_ellipse</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">geom =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"polygon"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"norm"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">level =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.95</span>, </span>
<span id="cb3-19">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blue"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blue"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-20">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ML component, cm"</span>,</span>
<span id="cb3-21">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AP component, cm"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-22">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">limits =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb3-23">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">limits =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb3-24">  my_theme</span></code></pre></div>
</details>
<div class="cell-output-display">
<div id="fig-fig3" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-fig3-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://amsabatini.netlify.app/posts/multivariate_probability_regions/index_files/figure-html/fig-fig3-1.png" class="img-fluid figure-img" width="672">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-fig3-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;3: Exemplary stabilogram with superimposed the concentration ellipse - parts of the CoP trajectory outside the concentration ellipse are displayed in red.
</figcaption>
</figure>
</div>
</div>
</div>
<p>The coverage of the concentration ellipse is 97%. The sway area is 3.09 cm<img src="https://latex.codecogs.com/png.latex?%5E2">.</p>



</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent" data-entry-spacing="0">
<div id="ref-dossantos2017" class="csl-entry">
Santos, Damiana A. dos, Claudiane A. Fukuchi, Reginaldo K. Fukuchi, and Marcos Duarte. 2017. <span>“A Data Set with Kinematic and Ground Reaction Forces of Human Balance.”</span> <em>PeerJ</em> 5 (July): e3626. <a href="https://doi.org/10.7717/peerj.3626">https://doi.org/10.7717/peerj.3626</a>.
</div>
<div id="ref-schubert2014" class="csl-entry">
Schubert, Patric, and Marietta Kirchner. 2014. <span>“Ellipse Area Calculations and Their Applicability in Posturography.”</span> <em>Gait &amp; Posture</em> 39 (1): 518–22. <a href="https://doi.org/10.1016/j.gaitpost.2013.09.001">https://doi.org/10.1016/j.gaitpost.2013.09.001</a>.
</div>
</div></section></div> ]]></description>
  <category>statistics</category>
  <guid>https://amsabatini.netlify.app/posts/multivariate_probability_regions/</guid>
  <pubDate>Wed, 01 May 2024 22:00:00 GMT</pubDate>
  <media:content url="https://amsabatini.netlify.app/posts/multivariate_probability_regions/fig-cop.png" medium="image" type="image/png" height="103" width="144"/>
</item>
<item>
  <title>Confidence intervals for proportions</title>
  <dc:creator>Angelo Maria Sabatini</dc:creator>
  <link>https://amsabatini.netlify.app/posts/probability_estimation/</link>
  <description><![CDATA[ 




<p>Consider a Bernoulli test with <img src="https://latex.codecogs.com/png.latex?n"> independent trials and <img src="https://latex.codecogs.com/png.latex?x"> successes that are recorded in the test. The proportion <img src="https://latex.codecogs.com/png.latex?f=x/n"> is assumed to be the estimate of the true probability <img src="https://latex.codecogs.com/png.latex?p">; we want to determine the values <img src="https://latex.codecogs.com/png.latex?p_1"> and <img src="https://latex.codecogs.com/png.latex?p_2"> of the confidence interval (CI) with the required confidence level associated to <img src="https://latex.codecogs.com/png.latex?f">, namely <img src="https://latex.codecogs.com/png.latex?CL=100(1-%5Calpha)%5C%25">.</p>
<p>The <strong>Clopper-Pearson equations</strong> can be used to calculate the CI:</p>
<p><span id="eq-eq1"><img src="https://latex.codecogs.com/png.latex?%0A%5Cleft%5C%7B%0A%5Cbegin%7Bsplit%7D%0A%5Csum_%7Bk=x%7D%5E%7B%5Cinfty%7D%7Bn%5Cchoose%20k%7Dp_1%5Ek(1-p_1)%5E%7Bn-k%7D&amp;=c_1%5C%5C%0A%5Csum_%7Bk=0%7D%5Ex%7Bn%5Cchoose%20k%7Dp_2%5Ek(1-p_2)%5E%7Bn-k%7D&amp;=c_2%0A%5Cend%7Bsplit%7D%0A%5Cright.%0A%5Ctag%7B1%7D"></span></p>
<p>where <img src="https://latex.codecogs.com/png.latex?CL=1-c_1-c_2">. One common choice for <img src="https://latex.codecogs.com/png.latex?c_1"> and <img src="https://latex.codecogs.com/png.latex?c_2"> is the symmetric interval, <img src="https://latex.codecogs.com/png.latex?c_1=c_2=(1-CL)/2">. For instance, when <img src="https://latex.codecogs.com/png.latex?CL=95%5C%25">, <img src="https://latex.codecogs.com/png.latex?%5Calpha=0.05"> and <img src="https://latex.codecogs.com/png.latex?c_1=c_2=2.5%5C%25">. The Clopper-Pearson interval is also called the exact interval, since the solution of Equation&nbsp;1 with respect to <img src="https://latex.codecogs.com/png.latex?p_1"> and <img src="https://latex.codecogs.com/png.latex?p_2"> gives the correct probability estimate, even for small samples.</p>
<p>It is noted that the binomial model has been used in Equation&nbsp;1 to capture events of the type “number of successes out of a given number of independent trials”, namely:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Ctext%7BPr%7D(k%5C;%5Ctext%7Bsuccesses%20out%20of%7D%5C;n%5C;%5Ctext%7Btrials%7D)=%7Bn%5Cchoose%20k%7Dp%5Ek(1-p)%5E%7Bn-k%7D%0A"></p>
<p>where <img src="https://latex.codecogs.com/png.latex?0%5Cleq%20k%5Cleq%20n"> and <img src="https://latex.codecogs.com/png.latex?%7Bn%5Cchoose%20k%7D"> is the number of combinations of <img src="https://latex.codecogs.com/png.latex?k">-length sequences from an <img src="https://latex.codecogs.com/png.latex?n">-length sequence (I discussed this in a previous post of mine).</p>
<p>We recall that a binomial random variable <img src="https://latex.codecogs.com/png.latex?X"> with parameters <img src="https://latex.codecogs.com/png.latex?n"> (the number of independent trials) and <img src="https://latex.codecogs.com/png.latex?p"> (the probability of success) has mean value and standard deviation:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cleft%5C%7B%0A%5Cbegin%7Bsplit%7D%0A%5Cmu_X&amp;=np%5C%5C%0A%5Csigma_X&amp;=%5Csqrt%7Bnp(1-p)%7D%0A%5Cend%7Bsplit%7D%0A%5Cright.%0A"></p>
<p>Therefore the random variable <img src="https://latex.codecogs.com/png.latex?F=X/n"> has mean value and standard deviation:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cleft%5C%7B%0A%5Cbegin%7Bsplit%7D%0A%5Cmu_F&amp;=p%5C%5C%0A%5Csigma_F&amp;=%5Cfrac%7B%5Csigma_X%7D%7B%5Csqrt%7Bn%7D%7D=%5Csqrt%7B%5Cfrac%7Bp(1-p)%7D%7Bn%7D%7D%0A%5Cend%7Bsplit%7D%0A%5Cright.%0A"></p>
<p>The normal approximation to the binomial distribution, as stated by the De Moivre-Laplace theorem, is considered as an alternative to Equation&nbsp;1 for CI construction. This theorem states that the random variable</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AT=%5Cfrac%7BF-p%7D%7B%5Csigma_F%7D%0A"></p>
<p>is <em>approximately</em> normally distributed - in practice, good approximations are achieved for <img src="https://latex.codecogs.com/png.latex?np,n(1-p)%5Cgg1">.</p>
<p>Given a variate <img src="https://latex.codecogs.com/png.latex?t"> of <img src="https://latex.codecogs.com/png.latex?T">, the CI can be written as follows:</p>
<p><span id="eq-eq2"><img src="https://latex.codecogs.com/png.latex?%0A%5Cfrac%7B%5Cvert%5C,f-p%5C,%5Cvert%7D%7B%5Csqrt%7B%5Cdfrac%7Bp(1-p)%7D%7Bn%7D%7D%7D%5Cleq%20t_%7B1-%5Calpha/2%7D%0A%5Ctag%7B2%7D"></span></p>
<p>where <img src="https://latex.codecogs.com/png.latex?t_%7B1-%5Calpha/2%7D"> is the quantile of the normal distribution at specified probability <img src="https://latex.codecogs.com/png.latex?1-%5Calpha/2">: for <img src="https://latex.codecogs.com/png.latex?%5Calpha=0.05">, <img src="https://latex.codecogs.com/png.latex?t_%7B1-%5Calpha/2%7D=1.96">.</p>
<p>Squaring Equation&nbsp;2 we get:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0An(f-p)%5E2%5Cleq%20t_%7B1-%5Calpha/2%7D%5E2%5C,p(1-p)%0A"></p>
<p>We can solve the resulting second-order equation <em>with respect to the unknown</em> <img src="https://latex.codecogs.com/png.latex?p">, yielding the <strong>Wilson interval</strong>:</p>
<p><span id="eq-eq3"><img src="https://latex.codecogs.com/png.latex?%0Ap%5Cin%5Cdfrac%7Bf+%5Cdfrac%7Bt%5E2_%7B1-%5Calpha/2%7D%7D%7B2n%7D%7D%7B%5Cdfrac%7Bt%5E2_%7B1-%5Calpha/2%7D%7D%7Bn%7D+1%7D%5Cpm%5Cdfrac%7Bt_%7B1-%5Calpha/2%7D%5Csqrt%7B%5Cdfrac%7Bt%5E2_%7B1-%5Calpha/2%7D%7D%7B4n%5E2%7D+%5Cdfrac%7Bf(1-f)%7D%7Bn%7D%7D%7D%7B%5Cdfrac%7Bt%5E2_%7B1-%5Calpha/2%7D%7D%7Bn%7D+1%7D%0A%5Ctag%7B3%7D"></span></p>
<p>It is noted that the Wilson interval is not centered on the measured proportion <img src="https://latex.codecogs.com/png.latex?f"> but on the value <img src="https://latex.codecogs.com/png.latex?(f+t_%7B1-%5Calpha/2%7D%5E2/2n)/(t_%7B1-%5Calpha/2%7D%5E2/n+1)">, which is a function of <img src="https://latex.codecogs.com/png.latex?f"> and the number of trials <img src="https://latex.codecogs.com/png.latex?n">. This is due to the asymmetry of the binomial distribution for small <img src="https://latex.codecogs.com/png.latex?n">.</p>
<div class="callout callout-style-default callout-caution callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Continuity correction
</div>
</div>
<div class="callout-body-container callout-body">
<p>The accuracy of Equation&nbsp;3 can be improved by applying the <strong>continuity correction</strong> to the proportion <img src="https://latex.codecogs.com/png.latex?f=x/n">. This correction improves the accuracy of CI construction for discrete variables when they can be approximated by normal variables:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0Af_%7B%5Cpm%7D=%5Cfrac%7Bx%5Cpm0.5%7D%7Bn%7D%5Crightarrow%5Cleft%5C%7B%5Cbegin%7Bsplit%7Df_%7B+%7D&amp;=%5Cmin%5Cleft(1,%5Cdfrac%7Bx+0.5%7D%7Bn%7D%5Cright)%5C%5Cf_%7B-%7D&amp;=%5Cmax%5Cleft(0,%5Cdfrac%7Bx-0.5%7D%7Bn%7D%5Cright)%5Cend%7Bsplit%7D%5Cright.%0A"></p>
<p>The interval is estimated as follows:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0Ap%5Cin%5B%5Cmax(0,p_%7B-%7D),%5Cmin(1,p_%7B+%7D)%5D%0A"></p>
<p>where:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0Ap_%7B%5Cpm%7D%5Cin%5Cdfrac%7Bf_%7B%5Cpm%7D+%5Cdfrac%7Bt%5E2_%7B1-%5Calpha/2%7D%7D%7B2n%7D%7D%7B%5Cdfrac%7Bt%5E2_%7B1-%5Calpha/2%7D%7D%7Bn%7D+1%7D%5Cpm%5Cdfrac%7Bt_%7B1-%5Calpha/2%7D%5Csqrt%7B%5Cdfrac%7Bt%5E2_%7B1-%5Calpha/2%7D%7D%7B4n%5E2%7D+%5Cdfrac%7Bf_%7B%5Cpm%7D(1-f_%7B%5Cpm%7D)%7D%7Bn%7D%7D%7D%7B%5Cdfrac%7Bt%5E2_%7B1-%5Calpha/2%7D%7D%7Bn%7D+1%7D%0A"></p>
</div>
</div>
<p>The Wilson interval (with continuity correction) is generally considered valid for <img src="https://latex.codecogs.com/png.latex?n%3E10">. For <img src="https://latex.codecogs.com/png.latex?n%5Cgg1"> (namely, <img src="https://latex.codecogs.com/png.latex?n%3E30">), a very popular approximate formulation of the CI is the <strong>Wald interval</strong>:</p>
<p><span id="eq-eq4"><img src="https://latex.codecogs.com/png.latex?%0Ap%5Cin%20f%5Cpm%20t_%7B1-%5Calpha/2%7D%5Csqrt%7B%5Cdfrac%7Bf(1-f)%7D%7Bn%7D%7D%0A%5Ctag%7B4%7D"></span></p>
<p>The Wald interval, which does not require any continuity correction, is symmetric around the estimated proportion. For <img src="https://latex.codecogs.com/png.latex?n%5Cgg1"> it is noted indeed that the Wilson interval tends to become symmetric and identical to the Wald interval.</p>
<p>The question is when <img src="https://latex.codecogs.com/png.latex?n"> is large enough for these methods to produce accurate inference. The R code below is a fully reproducible code to generate coverage plots for the Wilson interval (with continuity correction) and the Wald interval.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1789</span>)</span>
<span id="cb1-2">n  <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># number of Bernoulli trials</span></span>
<span id="cb1-3">L  <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>                        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># number of simulated sequences </span></span>
<span id="cb1-4">a  <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">95</span>                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># confidence level</span></span>
<span id="cb1-5">t  <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">qnorm</span>((<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>a<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># quantile of the normal distribution</span></span>
<span id="cb1-6">p  <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.95</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># tested values of probability</span></span>
<span id="cb1-7">np <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(p)                   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># number of tested values of probability</span></span>
<span id="cb1-8">c_wald   <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">numeric</span>(np)           <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Wald approach</span></span>
<span id="cb1-9">c_wilson <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">numeric</span>(np)           <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Wilson approach</span></span>
<span id="cb1-10"></span>
<span id="cb1-11"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span>(i <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>np) {</span>
<span id="cb1-12">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span>(j <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>L) {</span>
<span id="cb1-13">    x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbinom</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> n, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prob =</span> p[i])  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># number of successes</span></span>
<span id="cb1-14">    f <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> x<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>n                               <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># proportion of successes</span></span>
<span id="cb1-15">    fl <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, (x<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">-0.5</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>n) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># continuity correction</span></span>
<span id="cb1-16">    fu <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">min</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, (x<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">+0.5</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>n) </span>
<span id="cb1-17">    CIl <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> (fl<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>t<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>n))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>t<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>n) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> t<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>(fl<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>fl)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>n <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> t<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>n<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>t<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>n)</span>
<span id="cb1-18">    CIu <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> (fu<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>t<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>n))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>t<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>n) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> t<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>(fu<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>fu)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>n <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> t<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>n<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>t<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>n)</span>
<span id="cb1-19">    CI_lower_wilson <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>, CIl) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Wilson interval</span></span>
<span id="cb1-20">    CI_upper_wilson <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">min</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>, CIu)</span>
<span id="cb1-21">    CI_lower_wald <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> f <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> t<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>(f<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>f)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>n) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Wald interval</span></span>
<span id="cb1-22">    CI_upper_wald <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> f <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> t<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>(f<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>f)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>n)</span>
<span id="cb1-23">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span>(CI_lower_wilson <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> p[i] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> CI_upper_wilson <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> p[i]) c_wilson[i] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> c_wilson[i] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-24">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span>(CI_lower_wald <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> p[i] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> CI_upper_wald <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> p[i]) c_wald[i] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> c_wald[i] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-25">  }</span>
<span id="cb1-26">}</span>
<span id="cb1-27">c_wilson <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>c_wilson<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>L <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># estimated coverage</span></span>
<span id="cb1-28">c_wald   <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>c_wald<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>L   </span></code></pre></div>
</details>
</div>
<div class="cell">
<div class="cell-output-display">
<div id="fig-fig1" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-fig1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://amsabatini.netlify.app/posts/probability_estimation/index_files/figure-html/fig-fig1-1.png" class="img-fluid figure-img" width="672">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-fig1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;1: Coverage curves for the binomial distribution with <img src="https://latex.codecogs.com/png.latex?n=30">.
</figcaption>
</figure>
</div>
</div>
</div>
<p>The simulation results of Figure&nbsp;1 (<img src="https://latex.codecogs.com/png.latex?n=30">) show that, whereas the Wilson method tends just to provide some limited over-coverage for all values of <img src="https://latex.codecogs.com/png.latex?p"> (this is simply due to <img src="https://latex.codecogs.com/png.latex?x"> being present in both the sums of Equation&nbsp;1), the Wald interval performs poorly, with severe under-coverage, especially for low and high values of <img src="https://latex.codecogs.com/png.latex?p">. These results seem to raise objections against the use of the Wald interval, even in situations when <img src="https://latex.codecogs.com/png.latex?n%5Cgg1">: Figure&nbsp;2 shows the coverage plots in the case of <img src="https://latex.codecogs.com/png.latex?n=100">.</p>
<div class="cell">
<div class="cell-output-display">
<div id="fig-fig2" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-fig2-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://amsabatini.netlify.app/posts/probability_estimation/index_files/figure-html/fig-fig2-1.png" class="img-fluid figure-img" width="672">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-fig2-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;2: Coverage curves for the binomial distribution with <img src="https://latex.codecogs.com/png.latex?n=100">.
</figcaption>
</figure>
</div>
</div>
</div>
<p>Although the performance of the Wald method has slightly improved, the Wilson method still outperforms it, especially for small and high values of <img src="https://latex.codecogs.com/png.latex?p">.</p>
<blockquote class="blockquote">
<p>To conclude, when estimating the confidence interval associated to the estimate of proportions, the Wald interval - the most basic confidence interval usually considered by experimentalists - appears to be seriously flawed, also for values of the number of trials that are considered <em>large</em> in most statistical textbooks. The Wilson interval with continuity correction tends to perform much better and its use should be encouraged.</p>
</blockquote>



 ]]></description>
  <category>statistics</category>
  <guid>https://amsabatini.netlify.app/posts/probability_estimation/</guid>
  <pubDate>Fri, 26 Apr 2024 22:00:00 GMT</pubDate>
  <media:content url="https://amsabatini.netlify.app/posts/probability_estimation/coin-toss.png" medium="image" type="image/png" height="140" width="144"/>
</item>
<item>
  <title>Pills of combinatorics</title>
  <dc:creator>Angelo Maria Sabatini</dc:creator>
  <link>https://amsabatini.netlify.app/posts/combinatorics/</link>
  <description><![CDATA[ 




<p>At least in the elementary case of finite sample spaces (i.e., a finite number of outcomes can be generated by our experiment), we often find useful to consider the intuitive notion that the outcomes are equally likely; this allows to introduce what is known as the classical definition of probability. For any set <img src="https://latex.codecogs.com/png.latex?A"> made of some collection of outcomes from the sample space, we define the probability of <img src="https://latex.codecogs.com/png.latex?A"> as:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Ctext%7BPr%7D(A)=%5Cfrac%7B%5Ctext%7Bnumber%20of%20cases%20in%7D%5C;A%7D%7B%5Ctext%7Bnumber%20of%20cases%20in%20the%20sample%20space%7D%7D%0A"></p>
<p>After the sample space has been defined and its size determined, we calculate probabilities of sets by counting the number of possible cases.</p>
<p>The art of counting is a relevant part of a field in mathematics known as combinatorics. In this post, I present the basic principle of counting and apply it to a number of situations that are often encountered in probabilistic models.</p>
<section id="the-counting-principle" class="level2">
<h2 class="anchored" data-anchor-id="the-counting-principle">The counting principle</h2>
<p>Consider an experiment that consists of two consecutive stages. The possible outcomes of the first stage are <img src="https://latex.codecogs.com/png.latex?a_1,%5Ccdots,a_n"> and, for each outcome from the first stage, <img src="https://latex.codecogs.com/png.latex?b_1,%5Ccdots,b_m"> outcomes are possible for the second stage. The outcomes of the two-stage experiment are thus the ordered pairs <img src="https://latex.codecogs.com/png.latex?(a_i,b_j),i=1,...,m;j=1,%5Ccdots,m">, whose number is <img src="https://latex.codecogs.com/png.latex?nm">. An obvious generalization is for an <img src="https://latex.codecogs.com/png.latex?r">-stage experiment, with <img src="https://latex.codecogs.com/png.latex?n_i,i=1,2,%5Ccdots,r"> outcomes each. The total number of outcomes is</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AN=%5Cprod_%7Bi=1%7D%5Ern_i%0A"></p>
<div id="exm-exm1" class="theorem example">
<p><span class="theorem-title"><strong>Example 1 (Number of subsets of an <img src="https://latex.codecogs.com/png.latex?n">-element set.)</strong></span> Consider an <img src="https://latex.codecogs.com/png.latex?n">-element set <img src="https://latex.codecogs.com/png.latex?%5C%7Ba_1,a_2,%5Ccdots,a_n%5C%7D">. The construction of a subset can be seen as an <img src="https://latex.codecogs.com/png.latex?n">-stage process, where, at the <img src="https://latex.codecogs.com/png.latex?i">th stage, the <img src="https://latex.codecogs.com/png.latex?i">th element is offered the opportunity to be a member of the subset or not (binary choice). Therefore the number of subsets is <img src="https://latex.codecogs.com/png.latex?N=2%5En">, inclusive of either the empty set (no elements are in one subset) or the sample space (all the elements are in another subset).</p>
</div>
<p>Consider now the situation where we have <img src="https://latex.codecogs.com/png.latex?n"> distinct objects in a box and we want to form groups by sequentially selecting <img src="https://latex.codecogs.com/png.latex?k"> objects from it, without repetitions being allowed (<strong>sampling without replacement</strong>) or with repetitions being allowed (<strong>sampling with replacement</strong>). In the former case, of course, we cannot select more objects than they are in the box, namely <img src="https://latex.codecogs.com/png.latex?k%5Cleq%20n">. In the latter case, the restriction <img src="https://latex.codecogs.com/png.latex?k%5Cleq%20n"> does not apply and, although unlikely, a group can even consist of <img src="https://latex.codecogs.com/png.latex?k"> replicas of the same object.</p>
<p>Moreover, the selection process can differ in regard to wthether we are interested in the order of selection or not. If the <strong>order of selection matters</strong>, two groups that are made by the same objects, each one with its own number of occurrences, are considered distinct, whereas, if the <strong>order of selection does not matter</strong>, they should count as one case only in the probability calculation.</p>
<p>Based on these properties, four different arrangements of <img src="https://latex.codecogs.com/png.latex?k"> out of a collection of <img src="https://latex.codecogs.com/png.latex?n"> objects have to be considered, namely (without/with) repetition-order of selection (does/does not) matter. Each arrangement has its own name and related formula of counting, as outlined in the following.</p>
</section>
<section id="sampling-without-replacement" class="level2">
<h2 class="anchored" data-anchor-id="sampling-without-replacement">Sampling without replacement</h2>
<section id="order-of-selection-matters" class="level4">
<h4 class="anchored" data-anchor-id="order-of-selection-matters">Order of selection matters</h4>
<p>The number of arrangements, called <strong>permutations</strong>, can be calculated as the result of a <img src="https://latex.codecogs.com/png.latex?k">-stage process. At the first stage, we have <img src="https://latex.codecogs.com/png.latex?n"> possible choices, at the second stage, the choices are reduced by one unit, i.e., <img src="https://latex.codecogs.com/png.latex?n-1">; when we reach the <img src="https://latex.codecogs.com/png.latex?k">-stage, we are left with <img src="https://latex.codecogs.com/png.latex?n-k+1"> choices. Applying the principle of counting, we have:</p>
<p><span id="eq-eq1"><img src="https://latex.codecogs.com/png.latex?%0AD(n,k)=n(n-1)%5Ccdots%20(n-k+1)=%5Cfrac%7Bn!%7D%7B(n-k)!%7D%0A%5Ctag%7B1%7D"></span></p>
<p>where the factorial of a non-negative integer <img src="https://latex.codecogs.com/png.latex?n">, denoted by <img src="https://latex.codecogs.com/png.latex?n!">, is the product of all positive integers less than or equal to <img src="https://latex.codecogs.com/png.latex?n">, i.e., <img src="https://latex.codecogs.com/png.latex?n!=1%5Ccdot2%5Ccdots%20n">. Recall that, when <img src="https://latex.codecogs.com/png.latex?k=n">, <img src="https://latex.codecogs.com/png.latex?D(n,n)=n!"> (<img src="https://latex.codecogs.com/png.latex?0!=1!=1">).</p>
</section>
<section id="order-of-selection-does-not-matter" class="level4">
<h4 class="anchored" data-anchor-id="order-of-selection-does-not-matter">Order of selection does not matter</h4>
<p>The number of arrangements, called <strong>combinations</strong>, can be calculated by noting that there exist <img src="https://latex.codecogs.com/png.latex?P(k,k)=k!"> sequences of length <img src="https://latex.codecogs.com/png.latex?k"> that differ from one another just in terms of the order of the presentation of their elements. They contribute only one arrangement to the total number of them:</p>
<p><span id="eq-eq2"><img src="https://latex.codecogs.com/png.latex?%0AC(n,k)=%5Cfrac%7BD(n,k)%7D%7BD(k,k)%7D=%5Cfrac%7Bn!%7D%7B(n-k)!k!%7D=%7Bn%5Cchoose%20k%7D%0A%5Ctag%7B2%7D"></span></p>
<p>where the <strong>binomial coefficient</strong> <img src="https://latex.codecogs.com/png.latex?%7Bn%5Cchoose%20k%7D">, indexed by the pair of integers <img src="https://latex.codecogs.com/png.latex?n%5Cgeq%20k%5Cgeq0">, is considered.</p>
<div id="exm-exm2" class="theorem example">
<p><span class="theorem-title"><strong>Example 2 (Newton’s binomial theorem)</strong></span> For any real number <img src="https://latex.codecogs.com/png.latex?n"> that is not a non-negative integer, the theorem states that:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Csum_%7Bk=0%7D%5En%7Bn%5Cchoose%20k%7Da%5Ekb%5E%7Bn-k%7D=(a+b)%5En%0A"></p>
<p>when <img src="https://latex.codecogs.com/png.latex?a,b%5Cin%5Cmathbb%7BR%7D">.</p>
<p>Since <img src="https://latex.codecogs.com/png.latex?%7Bn%5Cchoose%20k%7D"> is the number of <img src="https://latex.codecogs.com/png.latex?k">-element sequences of a given <img src="https://latex.codecogs.com/png.latex?n">-element set, the sum over <img src="https://latex.codecogs.com/png.latex?k"> of <img src="https://latex.codecogs.com/png.latex?%7Bn%5Cchoose%20k%7D"> counts the number of subsets of all possible sizes. Using the result of Example&nbsp;1:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Csum_%7Bk=0%7D%5E%7Bn%7D%7Bn%5Cchoose%20k%7D=2%5En%0A"></p>
<p>This result is also a simple application of the Newton’s binomial theorem for <img src="https://latex.codecogs.com/png.latex?a=b=1">.</p>
</div>
<p>Recall that a combination is a choice of <img src="https://latex.codecogs.com/png.latex?k"> elements out of an <img src="https://latex.codecogs.com/png.latex?n">-element set without regard to order. This is the same as partitioning the set in two: one part contains <img src="https://latex.codecogs.com/png.latex?k"> elements and the other contains the remaining <img src="https://latex.codecogs.com/png.latex?n%E2%88%92k">. We can generalize by considering partitions in more than two subsets. We have <img src="https://latex.codecogs.com/png.latex?n"> distinct objects and we are given non-negative integers <img src="https://latex.codecogs.com/png.latex?n_1,n_2,%5Ccdots,n_r">, whose sum is equal to <img src="https://latex.codecogs.com/png.latex?n">. The <img src="https://latex.codecogs.com/png.latex?n"> items are to be divided into <img src="https://latex.codecogs.com/png.latex?r"> disjoint groups, with the <img src="https://latex.codecogs.com/png.latex?i">th group containing exactly <img src="https://latex.codecogs.com/png.latex?n_i"> items. The total number of groups is given by the <strong>multinomial coefficient</strong>:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AN_r=%7Bn%5Cchoose%20n_1n_2%5Ccdots%20n_r%7D=%5Cfrac%7Bn!%7D%7Bn_1!n_2!%5Ccdots%20n_r!%7D%0A"></p>
</section>
</section>
<section id="sampling-with-replacement" class="level2">
<h2 class="anchored" data-anchor-id="sampling-with-replacement">Sampling with replacement</h2>
<section id="order-of-selection-matters-1" class="level4">
<h4 class="anchored" data-anchor-id="order-of-selection-matters-1">Order of selection matters</h4>
<p>The number of arrangements, called <strong>dispositions</strong> can be calculated as the result of a <img src="https://latex.codecogs.com/png.latex?k">-stage process. At the first stage, we have <img src="https://latex.codecogs.com/png.latex?n"> possible choices, at all the other stages, the choices are still <img src="https://latex.codecogs.com/png.latex?n">. Applying the principle of counting, we have:</p>
<p><span id="eq-eq3"><img src="https://latex.codecogs.com/png.latex?%0AD%5E*(n,k)=n%5Ek%0A%5Ctag%7B3%7D"></span></p>
</section>
<section id="order-of-selection-does-not-matter-1" class="level4">
<h4 class="anchored" data-anchor-id="order-of-selection-does-not-matter-1">Order of selection does not matter</h4>
<p>The number of arrangements, called <strong>partitions</strong> is given by:</p>
<p><span id="eq-eq4"><img src="https://latex.codecogs.com/png.latex?%0AC%5E*(n,k)=%5Cfrac%7B(n+k-1)!%7D%7Bk!(n-1)!%7D=%7Bn+k-1%5Cchoose%20k%7D%0A%5Ctag%7B4%7D"></span></p>
<p>To understand the formula of Equation&nbsp;4, think of writing <img src="https://latex.codecogs.com/png.latex?C%5E*(n,k)"> when, for instance, <img src="https://latex.codecogs.com/png.latex?n=6,k=4"> as, say, <img src="https://latex.codecogs.com/png.latex?a_1a_2a_3a_2"> or equivalently <img src="https://latex.codecogs.com/png.latex?a_1*a_2**a_3*a_4">, where any element <img src="https://latex.codecogs.com/png.latex?a_i,i=1,2,%5Ccdots,n"> is followed by a number of asterisks equal to the number of its occurrences in the sequence (the total number of asterisks in the equivalent representation needs to be equal to <img src="https://latex.codecogs.com/png.latex?k">). Another example: <img src="https://latex.codecogs.com/png.latex?a_2a_3a_3a_3"> and <img src="https://latex.codecogs.com/png.latex?a_1a_2*a_3***a_4">. It is observed that a one-to-one correspondence exists between the original arrangements and all possible permutations in the alignment of elements and asterisks in the equivalent representation. Since each alignment starts with <img src="https://latex.codecogs.com/png.latex?a_1">, we need to permute <img src="https://latex.codecogs.com/png.latex?n+k-1"> elements, among which <img src="https://latex.codecogs.com/png.latex?k"> (the asterisks) and <img src="https://latex.codecogs.com/png.latex?n-1"> (the elements <img src="https://latex.codecogs.com/png.latex?a_i,i=2,%5Ccdots,n">) are equal.</p>
</section>
</section>
<section id="formulae" class="level2">
<h2 class="anchored" data-anchor-id="formulae">Formulae</h2>
<p>In conclusion, the four different arrangements of <img src="https://latex.codecogs.com/png.latex?k"> out of a collection of <img src="https://latex.codecogs.com/png.latex?n"> objects can be computed as follows:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Bsplit%7D%0A&amp;%5Cquad%5Cquad%5Ctextbf%7Bwithout%20replacement%7D&amp;%5Cquad%5Cquad%5Ctextbf%7Bwith%20replacement%7D%5C%5C%0A%5C%5C%0A%5Ctextbf%7Border%20matters%7D&amp;%5Cquad%5Cquad%5Ctext%7Bpermutations%7D&amp;%5Cquad%5Cquad%5Ctext%7Bdispositions%7D%5C%5C%0A&amp;%5Cquad%5Cquad%20D(n,k)=%5Cdfrac%7Bn!%7D%7B(n-k)!%7D&amp;%5Cquad%5Cquad%20D%5E*(n,k)=n%5Ek%5C%5C%0A%5Ctextbf%7Border%20does%20not%20matter%7D&amp;%5Cquad%5Cquad%5Ctext%7Bcombinations%7D&amp;%5Cquad%5Cquad%5Ctext%7Bpartitions%7D%5C%5C%0A&amp;%5Cquad%5Cquad%20C(n,k)=%7Bn%5Cchoose%20k%7D&amp;%5Cquad%5Cquad%20C%5E*(n,k)=%7Bn+k-1%5Cchoose%20k%7D%0A%5Cend%7Bsplit%7D%0A"></p>
</section>
<section id="exercises" class="level2">
<h2 class="anchored" data-anchor-id="exercises">Exercises</h2>
<div id="exr-exr1" class="theorem exercise">
<p><span class="theorem-title"><strong>Exercise 1</strong></span> Given a group of <img src="https://latex.codecogs.com/png.latex?n"> individuals, count how many subgroups can be formed having one particular person as the leader, and a number (from 0 to <img src="https://latex.codecogs.com/png.latex?n-1">) of additional members.</p>
<p><em>Answer</em> The counting principle can be applied as follows. First, we have <img src="https://latex.codecogs.com/png.latex?n"> possible choices for the leader, and once the leader is chosen, <img src="https://latex.codecogs.com/png.latex?2%5E%7Bn-1%7D"> subsets can be considered, which may include from none to all the remaining individuals of the group. We have therefore:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AN=n2%5E%7Bn-1%7D%0A"></p>
</div>
<div id="exr-exr2" class="theorem exercise">
<p><span class="theorem-title"><strong>Exercise 2</strong></span> How many words that consists of four distinct letters can be formed?</p>
<p><em>Answer</em> The sample space is composed of <img src="https://latex.codecogs.com/png.latex?n=26"> elements. The sequences we are interested are formed by <img src="https://latex.codecogs.com/png.latex?k=4"> elements, repetitions are not allowed. Two words are considered distinct based on the order of appearance of the four letters into them. The number of words is then given by Equation&nbsp;1:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AN=D(n,k)=%5Cfrac%7Bn!%7D%7B(n-k)!%7D=%5Cfrac%7B26!%7D%7B22!%7D=26%5Ccdot25%5Ccdot24%5Ccdot23=358,800%0A"></p>
</div>
<div id="exr-exr3" class="theorem exercise">
<p><span class="theorem-title"><strong>Exercise 3</strong></span> How many combinations exist using two letters out of four letters?</p>
<p><em>Answer</em> The sample is composed of <img src="https://latex.codecogs.com/png.latex?n=4"> elements. The sequences we are interested are formed by <img src="https://latex.codecogs.com/png.latex?k=2"> distinct elements, repetitions are not allowed. Two sequences are considered the same if they differ just by the order of the elements in them, namely <img src="https://latex.codecogs.com/png.latex?a_1a_2"> is the same as <img src="https://latex.codecogs.com/png.latex?a_2a_1">. The number of combinations is then given by Equation&nbsp;2:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AN=C(n,k)=%7Bn%5Cchoose%20k%7D=%5Cfrac%7B4!%7D%7B2!2!%7D=6%0A"></p>
</div>
<div id="exr-exr4" class="theorem exercise">
<p><span class="theorem-title"><strong>Exercise 4</strong></span> How many distinct combinations can be formed from the letters ATALANTA?</p>
<p><em>Answer</em> There are <img src="https://latex.codecogs.com/png.latex?n=8"> letters which may be arranged in <img src="https://latex.codecogs.com/png.latex?n!"> ways, but this leads to double counting. If the <img src="https://latex.codecogs.com/png.latex?k_1=4"> “A”s are permuted, then nothing is changed, and similarly for the <img src="https://latex.codecogs.com/png.latex?k_2=2"> “T”s. The total number of distinct combinations is then given by the multinomial coefficient:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AN=%5Cfrac%7Bn!%7D%7Bk_1!k_2!%7D=%5Cfrac%7B8!%7D%7B4!2!%7D=7%5Ccdot6%5Ccdot5%5Ccdot4=840%0A"></p>
</div>


</section>

 ]]></description>
  <category>probability</category>
  <guid>https://amsabatini.netlify.app/posts/combinatorics/</guid>
  <pubDate>Tue, 23 Apr 2024 22:00:00 GMT</pubDate>
  <media:content url="https://amsabatini.netlify.app/posts/combinatorics/combinatorics.jpeg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Random incidence</title>
  <dc:creator>Angelo Maria Sabatini</dc:creator>
  <link>https://amsabatini.netlify.app/posts/random_incidence/</link>
  <description><![CDATA[ 




<p>Consider the situation when the continuous time axis of our observations is partitioned into a sequence of interarrival intervals. With the term <em>arrival</em>, we designate the occurrence of everything we are interested to observe, for instance, a particle emitted from radioactive material and captured by a radiation counter, a message reaching its destination queue, maybe the bus that we are waiting for at the bus stop. Usually, probabilistic models that attempt to describe these different type of arrivals share the same assumption: namely the interarrival times (i.e., the times between successive arrivals) are modeled as independent random variables. For instance, the continuous-time Poisson process (hopefully, this is not the right model to predict the next bus arrival!) is the case where the interarrival times are modeled as independent identically exponentially distributed random variables.</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Exponential distribution
</div>
</div>
<div class="callout-body-container callout-body">
<p>A continuous random variable <img src="https://latex.codecogs.com/png.latex?X"> is said to be exponential, or exponentially distributed with parameter <img src="https://latex.codecogs.com/png.latex?%5Clambda">, when its cumulative distribution function (CDF) is written</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AF_X(x)=%5Ctext%7BPr%7D(X%5Cleq%20x)=1-e%5E%7B-%5Clambda%20x%7D,%5C;x%5Cgeq0%0A"></p>
<p>The probability density function (PDF) is then given by:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0Ap_X(x)=%5Cfrac%7Bd%7D%7Bdx%7DF_X(x)=%5Clambda%5C,e%5E%7B-%5Clambda%20x%7D,%5C;x%5Cgeq0%0A"></p>
<p>The mean value, the mean square value and the variance of <img src="https://latex.codecogs.com/png.latex?X"> are:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cleft%5C%7B%0A%5Cbegin%7Bsplit%7D%0AE%5BX%5D&amp;=%5Cint_0%5E%7B%5Cinfty%7Dxp_X(x)%5C,dx=%5Cfrac%7B1%7D%7B%5Clambda%7D%5C%5C%0AE%5BX%5E2%5D&amp;=%5Cint_0%5E%7B%5Cinfty%7Dx%5E2p_X(x)%5C,dx=%5Cfrac%7B2%7D%7B%5Clambda%5E2%7D%5C%5C%0A%5Ctext%7BVar%7D(X)&amp;=E%5BX%5E2%5D-E%5BX%5D%5E2=%5Cfrac%7B1%7D%7B%5Clambda%5E2%7D%0A%5Cend%7Bsplit%7D%0A%5Cright.%0A"></p>
<p>Integration by parts can be used to calculate the two expectations <img src="https://latex.codecogs.com/png.latex?E%5BX%5D"> and <img src="https://latex.codecogs.com/png.latex?E%5BX%5E2%5D">.</p>
</div>
</div>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Poisson process
</div>
</div>
<div class="callout-body-container callout-body">
<p>Consider a sequence of independent exponential random variables <img src="https://latex.codecogs.com/png.latex?T_1,T_2,T_3%5Ccdots,"> with common parameter <img src="https://latex.codecogs.com/png.latex?%5Clambda">, and let these stand for the interarrival times. The arrivals are then recorded at times <img src="https://latex.codecogs.com/png.latex?T_1,T_1+T_2,T_1+T_2+T_3,%5Ccdots"> and so forth, to define a continuous-time Poisson process.</p>
<p>A Poisson process is endowed with the following important properties:</p>
<ol type="1">
<li><p><strong>Independence of non-overlapping sets of times</strong>. This is a direct consequence of the assumed independence of the interarrival times.</p></li>
<li><p><strong>Fresh-start property</strong>. The part of the Poisson process that starts at any particular time <img src="https://latex.codecogs.com/png.latex?t%3E0"> is a probabilistic replica of the Poisson process starting at time 0, and is independent of the part of the process prior to time <img src="https://latex.codecogs.com/png.latex?t">. This can be seen as a special case of point 1.</p></li>
<li><p><strong>Memoryless interarrival time distribution</strong>. If <img src="https://latex.codecogs.com/png.latex?T"> is the time of the first arrival and if we know that <img src="https://latex.codecogs.com/png.latex?T%3Et">, then the remaining time <img src="https://latex.codecogs.com/png.latex?T%E2%88%92t"> is exponentially distributed, with the same parameter <img src="https://latex.codecogs.com/png.latex?%5Clambda">:</p></li>
</ol>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Bsplit%7D%0A%5Ctext%7BPr%7D(T%3Et+s%5C,%5Cvert%5C,T%3Et)&amp;=%5Cfrac%7B%5Ctext%7BPr%7D(T%3Et+s,T%3Et)%7D%7B%5Ctext%7BPr%7D(T%3Et)%7D%5C%5C%0A&amp;=%5Cfrac%7B%5Ctext%7BPr%7D(T%3Et+s)%7D%7B%5Ctext%7BPr%7D(T%3Et)%7D=%5Cfrac%7B1-F_T(t+s)%7D%7B1-F_T(t)%7D%5C%5C%0A&amp;=%5Cfrac%7Be%5E%7B-%5Clambda(t+s)%7D%7D%7Be%5E%7B-%5Clambda%20t%7D%7D=e%5E%7B-%5Clambda%20s%7D=%5Ctext%7BPr%7D(T%3Es)%0A%5Cend%7Bsplit%7D%0A"></p>
<p>Properties 2.-3. can be rephrased saying that the ones whose life is modeled by an exponential distribution, well they should remain <em>forever young</em>: no matter how long they have lived so far, the remaining time to their death is predicted as if they are just born!</p>
</div>
</div>
<p>The term <strong>random incidence</strong> denotes the arrival of an observer at an arbitrary time <img src="https://latex.codecogs.com/png.latex?t%5E*"> into a <em>gap</em> between two consecutive arrivals in an arrival-type process that is not necessarily described by a Poisson model, Figure&nbsp;1.</p>
<div id="fig-fig1" class="quarto-float quarto-figure quarto-figure-center anchored" data-fig-align="center">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-fig1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://amsabatini.netlify.app/posts/random_incidence/random_incidence.png" class="img-fluid quarto-figure quarto-figure-center figure-img" width="450">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-fig1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;1: Illustration of the random incidence phenomenon.
</figcaption>
</figure>
</div>
<p>We are not saying that <img src="https://latex.codecogs.com/png.latex?t%5E*"> is random; in this regard, perhaps, using the term random incidence may appear misleading. However, the interval between the time of the previous arrival <img src="https://latex.codecogs.com/png.latex?t_p"> and <img src="https://latex.codecogs.com/png.latex?t%5E*">, and the interval between <img src="https://latex.codecogs.com/png.latex?t%5E*"> and the time of the next arrival <img src="https://latex.codecogs.com/png.latex?t_n"> are random. All we need to state to start our discussion is to assume that the observer enters the arrival-type process in a situation when a previous arrival has surely occurred: probabilistically, the gap <img src="https://latex.codecogs.com/png.latex?t_n-t_p"> is then a well-defined quantity.</p>
<p>Suppose that we know the probability law of the interarrival times <img src="https://latex.codecogs.com/png.latex?Y">. Let us denote by <img src="https://latex.codecogs.com/png.latex?W"> the random variable that describes the duration of the gap entered by random incidence, <img src="https://latex.codecogs.com/png.latex?W=T_n-T_p">. Finally, we denote by <img src="https://latex.codecogs.com/png.latex?T"> the random variable that describes the waiting time for the next arrival from when the gap is entered by random incidence, <img src="https://latex.codecogs.com/png.latex?T=T_n-T%5E*">.</p>
<p>It is argued that the probability that <img src="https://latex.codecogs.com/png.latex?W"> assumes a value between <img src="https://latex.codecogs.com/png.latex?w"> and <img src="https://latex.codecogs.com/png.latex?w+dw"> is proportional to both the the duration of the gap <img src="https://latex.codecogs.com/png.latex?w"> and the relative frequency of occurrence of such gaps <img src="https://latex.codecogs.com/png.latex?p_Y(w)dw">:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Ctext%7BPr%7D(w%5Cleq%20W%5Cleq%20w+dw)=p_W(w)dw%5Cpropto%20w%5C,p_Y(w)dw%0A"></p>
<p>Therefore:</p>
<p><span id="eq-eq1"><img src="https://latex.codecogs.com/png.latex?%0Ap_W(w)=%5Cfrac%7Bw%5C,p_Y(w)%7D%7BE%5BY%5D%7D%0A%5Ctag%7B1%7D"></span></p>
<p>where the constant of proportionality is calculated to enforce the constraint of normalization for the PDF <img src="https://latex.codecogs.com/png.latex?p_W(w)"> of <img src="https://latex.codecogs.com/png.latex?W"> (its integral from 0 to infinity must be 1).</p>
<p>Now, given that a gap of length <img src="https://latex.codecogs.com/png.latex?w"> is entered by random incidence, we are equally likely to be anywhere within the gap. More precisely, <em>given</em> <img src="https://latex.codecogs.com/png.latex?w">, the time until the next arrival <img src="https://latex.codecogs.com/png.latex?T"> has a uniform PDF:</p>
<p><span id="eq-eq2"><img src="https://latex.codecogs.com/png.latex?%0Ap_%7BT%5Cvert%20W%7D(t%5C,%5Cvert%5C,w)=%5Cfrac%7B1%7D%7Bw%7D,%5C;0%5Cleq%20t%5Cleq%20w%0A%5Ctag%7B2%7D"></span></p>
<p>where <img src="https://latex.codecogs.com/png.latex?p_%7BT%5Cvert%20W%7D(t%5C,%5Cvert%5C,w)"> is the conditional PDF of <img src="https://latex.codecogs.com/png.latex?T"> given <img src="https://latex.codecogs.com/png.latex?W">. Using Equation&nbsp;1, Equation&nbsp;2 the joint PDF <img src="https://latex.codecogs.com/png.latex?p_%7BTW%7D(t,w)"> can be written:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0Ap_%7BTW%7D(t,w)=p_%7BT%5Cvert%20W%7D(t%5C,%5Cvert%5C,w)%5C,p_W(w)=%5Cfrac%7Bp_Y(w)%7D%7BE%5BY%5D%7D,%5C;0%5Cleq%20t%5Cleq%20w%3C%5Cinfty%0A"></p>
<p>Finally, the marginal PDF <img src="https://latex.codecogs.com/png.latex?p_T(t)"> of the waiting time for the next arrival from when the gap is entered by random incidence can be formed simply by <em>integrating out</em> <img src="https://latex.codecogs.com/png.latex?W">:</p>
<p><span id="eq-eq3"><img src="https://latex.codecogs.com/png.latex?%0A%5Cboxed%7Bp_T(t)=%5Cint_%7Bt%7D%5E%7B%5Cinfty%7D%5Cfrac%7Bp_Y(w)%7D%7BE%5BY%5D%7Ddw=%5Cfrac%7B1-F_Y(t)%7D%7BE%5BY%5D%7D,%5C;t%5Cgeq0%7D%0A%5Ctag%7B3%7D"></span></p>
<div id="exm-exm1" class="theorem example">
<p><span class="theorem-title"><strong>Example 1</strong></span> Consider a bus passenger arriving at a bus stop. The probabilistic law of the bus headways <img src="https://latex.codecogs.com/png.latex?F_Y(y)"> will determine the probability law for the waiting time until the next bus arrives, <img src="https://latex.codecogs.com/png.latex?p_T(t)"> via Equation&nbsp;3, if we ignore interactions between successive buses and assume that the arrivals are identically distributed and independent.</p>
<p>Suppose that buses maintain perfect headways, being always spaced <img src="https://latex.codecogs.com/png.latex?T_0"> minutes apart:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AF_Y(y)=%5Cleft%5C%7B%5Cbegin%7Bsplit%7D0&amp;%5Cquad%20y%3CT_0%5C%5C1&amp;%5Cquad%20y%5Cgeq%20T_0%5Cend%7Bsplit%7D%5Cright.%5Crightarrow%20p_Y(y)=%5Cdelta(y-T_0)%5Crightarrow%20E%5BY%5D=T_0%0A"></p>
<p>where the PDF is expressed in terms of a delta function located at time <img src="https://latex.codecogs.com/png.latex?T_0">. The PDF of <img src="https://latex.codecogs.com/png.latex?T"> can be written:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0Ap_T(t)=%5Cleft%5C%7B%5Cbegin%7Bsplit%7D&amp;%5Cfrac%7B1%7D%7BT_0%7D&amp;%5Cquad%200%5Cleq%20t%5Cleq%20T_0%5C%5C&amp;0&amp;%5Cquad%20t%3ET_0%5Cend%7Bsplit%7D%5Cright.%5Crightarrow%20E%5BT%5D=%5Cfrac%7BT_0%7D%7B2%7D%0A"></p>
<p>As expected intuitively, the time until the next arrival, <em>given random incidence</em>, is uniformly distributed between <img src="https://latex.codecogs.com/png.latex?0"> and <img src="https://latex.codecogs.com/png.latex?T_0">, with mean value <img src="https://latex.codecogs.com/png.latex?E%5BT%5D=T_0/2">: if <img src="https://latex.codecogs.com/png.latex?T_0=60"> min the average waiting time is 30 min.</p>
<p>Now, suppose that the bus headways are on the hour, and fifteen minutes after the hour. Thus, the interarrival times alternate between 15 and 45 minutes. If the bus passenger shows up at the bus stop at any time uniformly distributed within a hour, she/he has to wait for an average time of 15/2 min (with probability 1/4) and 45/2 min (with probability 3/4):</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AE%5BT%5D=%5Cfrac%7B15%7D%7B2%7D%5Ccdot%5Cfrac%7B1%7D%7B4%7D+%5Cfrac%7B45%7D%7B2%7D%5Ccdot%5Cfrac%7B3%7D%7B4%7D=18.75%5C;%5Ctext%7Bmin%7D%0A"></p>
<p>More formally:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AF_Y(y)=%5Cleft%5C%7B%5Cbegin%7Bsplit%7D0&amp;%5Cquad0%5Cleq%20y%3C15%5C%5C1/2&amp;%5Cquad15%5Cleq%20y%3C45%5C%5C1&amp;%5Cquad%20y%5Cgeq45%5Cend%7Bsplit%7D%5Cright.%5Crightarrow%20E%5BY%5D=30%5C;%5Ctext%7Bmin%7D%0A"></p>
<p>Using Equation&nbsp;3:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0Ap_T(t)=%5Cleft%5C%7B%5Cbegin%7Bsplit%7D1/30&amp;%5Cquad0%5Cleq%20t%3C15%5C%5C1/60&amp;%5Cquad15%5Cleq%20t%3C45%5C%5C0&amp;%5Cquad%20t%5Cgeq45%5Cend%7Bsplit%7D%5Cright.%5Crightarrow%20E%5BT%5D=18.75%5C,%5Ctext%7Bmin%7D%0A"></p>
<p>On average, the bus passenger has to wait longer than it might be expected taking into account <img src="https://latex.codecogs.com/png.latex?E%5BY%5D"> only, namely <img src="https://latex.codecogs.com/png.latex?E%5BY%5D/2=15"> min.</p>
<blockquote class="blockquote">
<p>This is because an observer who arrives at an arbitrary time, the bus passenger in this example, is more likely to fall in a large rather than a small interarrival interval: large interarrival intervals tend therefore to determine longer waiting times!</p>
</blockquote>
</div>
<div id="exm-exm2" class="theorem example">
<p><span class="theorem-title"><strong>Example 2</strong></span> Consider the (unrealistic) case that the bus headways are Poissonian. What does this mean? Basically, we state that the interarrival times are modeled by independent exponentially distributed random variables with rate <img src="https://latex.codecogs.com/png.latex?%5Clambda"> (the rate denotes the number of arrivals per unit time):</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AF_Y(y)=1-e%5E%7B-%5Clambda%20t%7D,%5C;t%5Cgeq%200%5Crightarrow%20p_Y(y)=%5Cfrac%7BF_Y(y)%7D%7Bdy%7D=%5Clambda%20e%5E%7B-%5Clambda%20t%7D,%5C;t%5Cgeq0%5Crightarrow%20E%5BY%5D=1/%5Clambda%0A"></p>
<p>Using Equation&nbsp;3:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0Ap_T(t)=%5Clambda%20e%5E%7B-%5Clambda%20t%7D,%5C;t%5Cgeq0%0A"></p>
<p>Hence <img src="https://latex.codecogs.com/png.latex?T"> is exponentially distributed with rate <img src="https://latex.codecogs.com/png.latex?%5Clambda">. The average time of waiting is <img src="https://latex.codecogs.com/png.latex?E%5BT%5D=1/%5Clambda">. No matter when the event occurred, the observer who arrives at an arbitrary time <img src="https://latex.codecogs.com/png.latex?t%5E*"> (the bus passenger in this example) sees the Poisson process to start fresh at time <img src="https://latex.codecogs.com/png.latex?t%5E*">, Figure&nbsp;1. It is worth noting that, according to the properties of independence, start-fresh and memorylessness stated above, we can run a Poisson process either forwards or backwards in time, without any modification in its properties. Hence, not only <img src="https://latex.codecogs.com/png.latex?T_n-T%5E*">, but also <img src="https://latex.codecogs.com/png.latex?T%5E*-T_p"> is exponentially distributed with parameter <img src="https://latex.codecogs.com/png.latex?%5Clambda">. Moreover, <img src="https://latex.codecogs.com/png.latex?T_n-T%5E*"> and <img src="https://latex.codecogs.com/png.latex?T_n-T%5E*"> are independent. We have therefore established that the gap <img src="https://latex.codecogs.com/png.latex?W"> entered by random incidence is the sum of two independent exponential random variables with parameter <img src="https://latex.codecogs.com/png.latex?%5Clambda"> and mean value <img src="https://latex.codecogs.com/png.latex?2/%5Clambda">. More formally, using Equation&nbsp;1 we get:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0Ap_W(w)=%5Clambda%20w%5C,e%5E%7B-%5Clambda%20w%7D,%5C;w%5Cgeq0%0A"></p>
<p>We recall that the random variable <img src="https://latex.codecogs.com/png.latex?X"> Erlang of order <img src="https://latex.codecogs.com/png.latex?k"> has PDF:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0Ap(x)=%5Cfrac%7B%5Clambda%5Ekx%5E%7Bk-1%7De%5E%7B-%5Clambda%20x%7D%7D%7B(k-1)!%7D%0A"></p>
<p>In conclusion, the gap duration is a random variable Erlang of order 2.</p>
<blockquote class="blockquote">
<p>In a similar fashion to Example&nbsp;1, when landing into a Poisson process at an arbitrary time, we are more likely to fall in a large interarrival interval; therefore, the length of what we perceive as a <em>typical</em> interarrival interval is greater than it is in reality.</p>
</blockquote>
</div>



 ]]></description>
  <category>probability</category>
  <guid>https://amsabatini.netlify.app/posts/random_incidence/</guid>
  <pubDate>Sun, 21 Apr 2024 22:00:00 GMT</pubDate>
  <media:content url="https://amsabatini.netlify.app/posts/random_incidence/bus.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Frequency resolution of spectral analysis</title>
  <dc:creator>Angelo Maria Sabatini</dc:creator>
  <link>https://amsabatini.netlify.app/posts/resolution/</link>
  <description><![CDATA[ 




<p><strong>Frequency resolution</strong> is the size of the smallest frequency for which details in the frequency response and the spectrum can be resolved by the estimate. For example, a resolution of 0.1 Hz means that the frequency response variations at frequency intervals at or below 0.1 Hz cannot be resolved.</p>
<p>Consider an analog band-limited signal <img src="https://latex.codecogs.com/png.latex?x(t)"> with bandwidth <img src="https://latex.codecogs.com/png.latex?B"> Hz; <img src="https://latex.codecogs.com/png.latex?x(t)"> is observed over a <strong>sample period</strong> of <img src="https://latex.codecogs.com/png.latex?T_r"> s (the length of the data record) and sampled at a <strong>sampling frequency</strong> of <img src="https://latex.codecogs.com/png.latex?f_s"> Hz (<img src="https://latex.codecogs.com/png.latex?T_s=1/f_s"> denotes the <strong>sampling interval</strong>). The total available number of samples of <img src="https://latex.codecogs.com/png.latex?x(t)"> is <img src="https://latex.codecogs.com/png.latex?N=%5Clfloor%20T_r/T_s%5Crfloor">, where <img src="https://latex.codecogs.com/png.latex?%5Clfloor%5Ccdot%5Crfloor"> denotes the floor function (or greatest integer function), namely the function that takes as input a real number <img src="https://latex.codecogs.com/png.latex?r"> and gives as output the greatest integer less than or equal to <img src="https://latex.codecogs.com/png.latex?r">.</p>
<p>According to the Shannon-Nyquist sampling theorem, if the sampling frequency <img src="https://latex.codecogs.com/png.latex?f_s"> is chosen to be <img src="https://latex.codecogs.com/png.latex?2B">, the maximum resolvable frequency is:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0Af_%7B%5Ctext%7Bmax%7D%7D=%5Cfrac%7Bf_s%7D%7B2%7D%0A"></p>
<p>On the other hand, the minimum resolvable frequency is inversely related to the sample period:</p>
<p><span id="eq-eq1"><img src="https://latex.codecogs.com/png.latex?%0Af_%7B%5Ctext%7Bmin%7D%7D=%5Cfrac%7B1%7D%7BT_r%7D=%5Cfrac%7B1%7D%7BNT_s%7D%0A%5Ctag%7B1%7D"></span></p>
<p>and hence the number of frequencies that can be resolved from <img src="https://latex.codecogs.com/png.latex?f_%7B%5Ctext%7Bmin%7D%7D"> to <img src="https://latex.codecogs.com/png.latex?f_%7B%5Ctext%7Bmax%7D%7D"> is</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AN_f=%5Cfrac%7Bf_%7B%5Ctext%7Bmax%7D%7D-f_%7B%5Ctext%7Bmin%7D%7D%7D%7B%5CDelta%20f%7D%0A"></p>
<p>where <img src="https://latex.codecogs.com/png.latex?%5CDelta%20f"> is the frequency resolution. Since <img src="https://latex.codecogs.com/png.latex?%5CDelta%20f=f_%7B%5Ctext%7Bmin%7D%7D">, I also have:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AN_f=%5Cdfrac%7B%5Cdfrac%7Bf_s%7D%7B2%7D-%5Cdfrac%7Bf_s%7D%7BN%7D%7D%7B%5Cdfrac%7Bf_s%7D%7BN%7D%7D=%5Cfrac%7BN%7D%7B2%7D-1%0A"></p>
<p>This implies that will be <img src="https://latex.codecogs.com/png.latex?N/2"> discrete frequencies from <img src="https://latex.codecogs.com/png.latex?0"> to <img src="https://latex.codecogs.com/png.latex?f_%7B%5Ctext%7Bmax%7D%7D">.</p>
<p>The accurate detection of frequency components in the spectrum <img src="https://latex.codecogs.com/png.latex?X(f)"> of the signal <img src="https://latex.codecogs.com/png.latex?x(t)"> is challenged by the phenomenon known as <strong>spectral leakage</strong>, or amplitude ambiguity; it consists of ambiguous and false amplitudes occurring in the spectrum <img src="https://latex.codecogs.com/png.latex?X(f)"> whenever the sample period <img src="https://latex.codecogs.com/png.latex?T_r"> is not an integer multiple of <em>all</em> of the contributory periods in <img src="https://latex.codecogs.com/png.latex?x(t)">. That is, false or ambiguous amplitudes will occur at frequencies that are immediately adjacent to the actual frequency.</p>
<p>For aperiodic signals, <img src="https://latex.codecogs.com/png.latex?T_r"> theoretically must be infinite. For periodic signals, <img src="https://latex.codecogs.com/png.latex?T_r"> <em>must be equal to the least common integer multiple of all the periods contained in the signal</em>. Application of the DFT (Discrete Fourier Transform) or FFT (Fast Fourier Transform) to an aperiodic signal implicitly assumes that the signal is infinite in length and formed by repeating the signal of length <img src="https://latex.codecogs.com/png.latex?T_r"> an infinite number of times. This leads to discontinuities in the amplitude that occur at each integer multiple of <img src="https://latex.codecogs.com/png.latex?T_r">. These discontinuities are step-like, which introduce false amplitudes that decrease around the main frequencies.</p>
<p><em>All the periods contained in the signal cannot be known before the spectral analysis is performed</em>, therefore the stated condition on the sample period cannot be fulfilled; the best method to minimize the effect of spectral leakage is <strong>windowing</strong>.</p>
<p>Herein, I just provide a brief explanation of windowing, without testing it in the examples to follow. Windowing reduces the amplitude of the discontinuities at the boundaries of each finite sequence of samples of <img src="https://latex.codecogs.com/png.latex?x(t)">. It does so by multiplying the acquired sequence by a finite-length window with an amplitude that varies smoothly and gradually toward zero at the edges. This makes the endpoints of the waveform meet and, therefore, results in a continuous waveform without sharp transitions.</p>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Can discrete-time sinusoids be non-periodic?
</div>
</div>
<div class="callout-body-container callout-body">
<p>The normalized frequency <img src="https://latex.codecogs.com/png.latex?f"> in cycles per sample of a <strong>discrete-time sinusoid</strong>:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0Ax%5Bn%5D=%5Ccos(2%5Cpi%20fn)%0A"></p>
<p>is restricted to values in the interval <img src="https://latex.codecogs.com/png.latex?-1/2%5Cleq%20f%5Cleq1/2">. This is because, for any discrete-time sinusoid with frequency <img src="https://latex.codecogs.com/png.latex?%5Cvert%20f%5Cvert%3E1/2">, an integer <img src="https://latex.codecogs.com/png.latex?m"> exists such that <img src="https://latex.codecogs.com/png.latex?f=f_0+m"> and <img src="https://latex.codecogs.com/png.latex?%5Cvert%20f_0%5Cvert%5Cleq1/2">:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Ccos%202%5Cpi%20fn=%5Ccos%5B2%5Cpi%20(f_0+m)%5C,n%5D=%5Ccos(2%5Cpi%20f_0n)+%5Ccos(2%5Cpi%20mn)=%5Ccos(2%5Cpi%20f_0n)%0A"></p>
<p>It is worth noting that the highest rate of oscillation of discrete-time sinusoids is when, at every time instant, the output sample flips polarity with respect to the previous output sample:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0Af_0=%5Cfrac%7B1%7D%7B2%7D%5Crightarrow%5Ccos(2%5Cpi%20f_0n)=%5Ccos(%5Cpi%20n)=(-1)%5En%0A"></p>
<p>Moreover, a discrete-time sinusoid can be periodic, i.e, characterized by patterns that exactly repeat themselves in time, if and only if its frequency can be expressed in terms of a rational number; moreover, an additive mixture of periodical discrete-time sinusoids (called here <strong>sinusoidal mixture</strong>) is periodic with period equal to the least common integer multiple of their periods.</p>
</div>
</div>
<p>As outlined above, a spectrum line at frequency <img src="https://latex.codecogs.com/png.latex?f"> will be accurately represented by the DFT when <img src="https://latex.codecogs.com/png.latex?f_s%5Cgeq2f_%7B%5Ctext%7Bmax%7D%7D"> and <img src="https://latex.codecogs.com/png.latex?T_r%20=%20mT">, where <img src="https://latex.codecogs.com/png.latex?m=1,2,%5Ccdots">, and <img src="https://latex.codecogs.com/png.latex?T=1/f">. This implies that <img src="https://latex.codecogs.com/png.latex?N=mf_s/f">. If <img src="https://latex.codecogs.com/png.latex?T_r"> is not an integer multiple of <img src="https://latex.codecogs.com/png.latex?T">, leakage will occur in the DFT. This appears as amplitudes at <img src="https://latex.codecogs.com/png.latex?f"> spilling onto adjacent frequencies.</p>
<p>As an example, consider a sinusoidal mixture with three unit-amplitude components at 2.875 Hz, 3 Hz, 3.125 Hz. The sampling frequency is set to <img src="https://latex.codecogs.com/png.latex?f_s=16"> Hz and the sample period to <img src="https://latex.codecogs.com/png.latex?T=8"> s (<img src="https://latex.codecogs.com/png.latex?N=128">): the component at 2.875 Hz is observed for 23 periods, the component at 3 Hz for 24 periods, and the component at 3.125 Hz for 25 periods. The resolution calculated according to Equation&nbsp;1 is 0.125 Hz.</p>
<p>A chunk of code written in MATLAB (Natick, Massachusetts: The MathWorks, Inc., <a href="https://www.mathworks.com" class="uri">https://www.mathworks.com</a>) shows how to simulate the sinusoidal mixture and to perform spectral analysis.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode matlab code-with-copy"><code class="sourceCode matlab"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">% *****************************</span></span>
<span id="cb1-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">% sinusoidal mixture generation</span></span>
<span id="cb1-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">% *****************************</span></span>
<span id="cb1-4"></span>
<span id="cb1-5"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">fs</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">% sampling frequency, Hz</span></span>
<span id="cb1-6"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">Ts</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">fs</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">% sampling interval, s</span></span>
<span id="cb1-7"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">T</span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">% sample period, s</span></span>
<span id="cb1-8"></span>
<span id="cb1-9"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">t</span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">Ts</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">T</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">Ts</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">% time domain, s</span></span>
<span id="cb1-10"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">N</span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">length</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">t</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">% number of samples</span></span>
<span id="cb1-11"></span>
<span id="cb1-12"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">f1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.9375</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">% frequency component 1, Hz</span></span>
<span id="cb1-13"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">f2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>           <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">% frequency component 2, Hz</span></span>
<span id="cb1-14"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">f3</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.0625</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">% frequency component 3, Hz</span></span>
<span id="cb1-15"></span>
<span id="cb1-16"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">x1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">cos</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">t</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.*</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pi</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">f1</span>))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">% sinusoid 1</span></span>
<span id="cb1-17"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">x2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">cos</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">t</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.*</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pi</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">f2</span>))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">% sinusoid 2</span></span>
<span id="cb1-18"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">x3</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">cos</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">t</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.*</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pi</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">f3</span>))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">% sinusoid 3</span></span>
<span id="cb1-19"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">X</span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">x1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">x2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">x3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">% sinusoidal mixture</span></span>
<span id="cb1-20"></span>
<span id="cb1-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">% ********************************************************</span></span>
<span id="cb1-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">% calculation of single-side spectrum (see comments below)</span></span>
<span id="cb1-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">% ********************************************************</span></span>
<span id="cb1-24"></span>
<span id="cb1-25"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">P</span>              <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">fft</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">X</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">N</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>         <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">% FFT calculation</span></span>
<span id="cb1-26"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">P2</span>             <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">abs</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">P</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">N</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">% double-side spectrum, rescaled by N     </span></span>
<span id="cb1-27"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">P1</span>             <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">P2</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">N</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>  </span>
<span id="cb1-28"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">P1</span>(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:,</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">end</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">P1</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">end</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> </span>
<span id="cb1-29"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">Y</span>              <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">P1</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">end</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">% single-side spectrum</span></span>
<span id="cb1-30"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">f</span>              <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">N</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.*</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">fs</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">N</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">% frequency domain, Hz</span></span></code></pre></div>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Comments
</div>
</div>
<div class="callout-body-container callout-body">
<p>The documentation in MATLAB explains the procedure to convert the N-points FFT spectrum of the signal to the single-side amplitude spectrum:</p>
<ol type="1">
<li><p>Because the FFT function includes a scaling factor N between the original and the transformed signals, rescale the spectrum by dividing by N.</p></li>
<li><p>Take the complex magnitude of the FFT spectrum. The two-side amplitude spectrum P2, where the spectrum in the positive frequencies is the complex conjugate of the spectrum in the negative frequencies, has half the peak amplitudes of the time-domain signal.</p></li>
<li><p>To convert to the single-side spectrum Y, take the first half P1 of the two-side spectrum P2 and multiply by 2. P1(1) and P1(end) are not multiplied by 2 because these amplitudes correspond to the zero and Nyquist frequencies, respectively, and they do not have the complex conjugate pairs in the negative frequencies.</p></li>
<li><p>Define the frequency domain f for the single-side spectrum Y.</p></li>
</ol>
</div>
</div>
<p>The single-side spectrum of the sinusoidal mixture is shown in Figure&nbsp;1.</p>
<div id="fig-fig1" class="quarto-float quarto-figure quarto-figure-center anchored" data-fig-align="center">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-fig1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://amsabatini.netlify.app/posts/resolution/spectrum.png" class="img-fluid quarto-figure quarto-figure-center figure-img" width="600">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-fig1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;1: Single-side spectrum of the sinusoidal mixture composed of three components at 2.875 Hz, 3 Hz, 3.125 Hz; sampling frequency: 16 Hz; sample period: 8 s. For the sake of visualization the frequency interval shown is limited to 2.5-3.5 Hz.
</figcaption>
</figure>
</div>
<p>Consider now the case that the three components of the sinusoidal mixture have frequencies 2.9375 Hz, 3 Hz, 3.0625 Hz. To resolve them, I would need to double the frequency resolution of the FFT, up to 0.0625 Hz, with respect to the scenario of Figure&nbsp;1. Erroneously, I double the sampling frequency. However, this expedient leaves the frequency resolution unaltered, since doubling the sample period without touching the sample period also doubles the number of samples. Moreover, the sample period is not properly chosen to avoid spectral leakage, as clearly seen in Figure&nbsp;2.</p>
<div id="fig-fig2" class="quarto-float quarto-figure quarto-figure-center anchored" data-fig-align="center">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-fig2-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://amsabatini.netlify.app/posts/resolution/spectrum1.png" class="img-fluid quarto-figure quarto-figure-center figure-img" width="600">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-fig2-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;2: Single-side spectrum of the sinusoidal mixture composed of three components at 2.9375 Hz, 3 Hz, 3.0625 Hz; sampling frequency: 32 Hz; sample period: 8 s.
</figcaption>
</figure>
</div>
<p>To resolve the components of the sinusoidal mixture and avoid spectral leakage, the frequency resolution of 0.0625 Hz can be achieved by extending the time period to <img src="https://latex.codecogs.com/png.latex?T_r=16"> s, which corresponds to <img src="https://latex.codecogs.com/png.latex?N=256"> samples at the original sampling frequency <img src="https://latex.codecogs.com/png.latex?f_s=16"> Hz, see Figure&nbsp;3.</p>
<div id="fig-fig3" class="quarto-float quarto-figure quarto-figure-center anchored" data-fig-align="center">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-fig3-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://amsabatini.netlify.app/posts/resolution/spectrum2.png" class="img-fluid quarto-figure quarto-figure-center figure-img" width="600">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-fig3-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;3: Single-side spectrum of the sinusoidal mixture composed of three components at 2.9375 Hz, 3 Hz, 3.0625 Hz; sampling frequency: 16 Hz; sample period: 16 s.
</figcaption>
</figure>
</div>
<blockquote class="blockquote">
<p>To conclude: whereas the sampling frequency sets the time resolution, the sample period occupies a central place in setting the frequency resolution when spectral analysis is performed. The sample period being the same, just increasing the sampling frequency simply increases the number of samples by the same ratio, leaving their ratio unaltered. The only means to increase the frequency resolution is to increase the sample period, trying at the same time to minimize the effects of spectral leakage.</p>
</blockquote>



 ]]></description>
  <category>signal processing</category>
  <guid>https://amsabatini.netlify.app/posts/resolution/</guid>
  <pubDate>Fri, 12 Apr 2024 22:00:00 GMT</pubDate>
  <media:content url="https://amsabatini.netlify.app/posts/resolution/FFT-Time-Frequency-View.png" medium="image" type="image/png" height="101" width="144"/>
</item>
</channel>
</rss>
